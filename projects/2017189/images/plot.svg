<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1162" onload="init(evt)" viewBox="0 0 1200 1162" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
            var params = get_params()
            params.x = el.attributes._orig_x.value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = format_percent((parseFloat(e.attributes.x.value) - x) * ratio);
            if (e.tagName == "text") {
                e.attributes.x.value = format_percent(parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value) + (100 * 3 / frames.attributes.width.value));
            }
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = format_percent(parseFloat(e.attributes.width.value) * ratio);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    var ratio = 100 / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.001;
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;    // JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1162" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">py-spy record -o profile.svg -- python3 SemanticText.py</text><text id="details" x="10" y="40.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="1151.00"> </text><svg id="frames" x="10" width="1180"><g><title>&lt;module&gt; (numpy/__init__.py:145) (17 samples, 0.17%)</title><rect x="0.0393%" y="740" width="0.1670%" height="15" fill="rgb(227,0,7)"/><text x="0.2893%" y="750.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1042) (17 samples, 0.17%)</title><rect x="0.0393%" y="756" width="0.1670%" height="15" fill="rgb(217,0,24)"/><text x="0.2893%" y="766.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (17 samples, 0.17%)</title><rect x="0.0393%" y="772" width="0.1670%" height="15" fill="rgb(221,193,54)"/><text x="0.2893%" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (17 samples, 0.17%)</title><rect x="0.0393%" y="788" width="0.1670%" height="15" fill="rgb(248,212,6)"/><text x="0.2893%" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:975) (17 samples, 0.17%)</title><rect x="0.0393%" y="804" width="0.1670%" height="15" fill="rgb(208,68,35)"/><text x="0.2893%" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:671) (17 samples, 0.17%)</title><rect x="0.0393%" y="820" width="0.1670%" height="15" fill="rgb(232,128,0)"/><text x="0.2893%" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:783) (17 samples, 0.17%)</title><rect x="0.0393%" y="836" width="0.1670%" height="15" fill="rgb(207,160,47)"/><text x="0.2893%" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (17 samples, 0.17%)</title><rect x="0.0393%" y="852" width="0.1670%" height="15" fill="rgb(228,23,34)"/><text x="0.2893%" y="862.50"></text></g><g><title>&lt;module&gt; (scipy/__init__.py:61) (42 samples, 0.41%)</title><rect x="0.0393%" y="644" width="0.4126%" height="15" fill="rgb(218,30,26)"/><text x="0.2893%" y="654.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (42 samples, 0.41%)</title><rect x="0.0393%" y="660" width="0.4126%" height="15" fill="rgb(220,122,19)"/><text x="0.2893%" y="670.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:975) (42 samples, 0.41%)</title><rect x="0.0393%" y="676" width="0.4126%" height="15" fill="rgb(250,228,42)"/><text x="0.2893%" y="686.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:671) (42 samples, 0.41%)</title><rect x="0.0393%" y="692" width="0.4126%" height="15" fill="rgb(240,193,28)"/><text x="0.2893%" y="702.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:783) (42 samples, 0.41%)</title><rect x="0.0393%" y="708" width="0.4126%" height="15" fill="rgb(216,20,37)"/><text x="0.2893%" y="718.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (42 samples, 0.41%)</title><rect x="0.0393%" y="724" width="0.4126%" height="15" fill="rgb(206,188,39)"/><text x="0.2893%" y="734.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:961) (45 samples, 0.44%)</title><rect x="0.0196%" y="532" width="0.4420%" height="15" fill="rgb(217,207,13)"/><text x="0.2696%" y="542.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (45 samples, 0.44%)</title><rect x="0.0196%" y="548" width="0.4420%" height="15" fill="rgb(231,73,38)"/><text x="0.2696%" y="558.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (45 samples, 0.44%)</title><rect x="0.0196%" y="564" width="0.4420%" height="15" fill="rgb(225,20,46)"/><text x="0.2696%" y="574.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:975) (45 samples, 0.44%)</title><rect x="0.0196%" y="580" width="0.4420%" height="15" fill="rgb(210,31,41)"/><text x="0.2696%" y="590.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:671) (45 samples, 0.44%)</title><rect x="0.0196%" y="596" width="0.4420%" height="15" fill="rgb(221,200,47)"/><text x="0.2696%" y="606.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:783) (45 samples, 0.44%)</title><rect x="0.0196%" y="612" width="0.4420%" height="15" fill="rgb(226,26,5)"/><text x="0.2696%" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (45 samples, 0.44%)</title><rect x="0.0196%" y="628" width="0.4420%" height="15" fill="rgb(249,33,26)"/><text x="0.2696%" y="638.50"></text></g><g><title>&lt;module&gt; (scipy/spatial/__init__.py:101) (14 samples, 0.14%)</title><rect x="0.5206%" y="836" width="0.1375%" height="15" fill="rgb(235,183,28)"/><text x="0.7706%" y="846.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (14 samples, 0.14%)</title><rect x="0.5206%" y="852" width="0.1375%" height="15" fill="rgb(221,5,38)"/><text x="0.7706%" y="862.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:975) (14 samples, 0.14%)</title><rect x="0.5206%" y="868" width="0.1375%" height="15" fill="rgb(247,18,42)"/><text x="0.7706%" y="878.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:671) (14 samples, 0.14%)</title><rect x="0.5206%" y="884" width="0.1375%" height="15" fill="rgb(241,131,45)"/><text x="0.7706%" y="894.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:783) (14 samples, 0.14%)</title><rect x="0.5206%" y="900" width="0.1375%" height="15" fill="rgb(249,31,29)"/><text x="0.7706%" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (14 samples, 0.14%)</title><rect x="0.5206%" y="916" width="0.1375%" height="15" fill="rgb(225,111,53)"/><text x="0.7706%" y="926.50"></text></g><g><title>&lt;module&gt; (scipy/spatial/_procrustes.py:9) (14 samples, 0.14%)</title><rect x="0.5206%" y="932" width="0.1375%" height="15" fill="rgb(238,160,17)"/><text x="0.7706%" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (14 samples, 0.14%)</title><rect x="0.5206%" y="948" width="0.1375%" height="15" fill="rgb(214,148,48)"/><text x="0.7706%" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:975) (14 samples, 0.14%)</title><rect x="0.5206%" y="964" width="0.1375%" height="15" fill="rgb(232,36,49)"/><text x="0.7706%" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:671) (14 samples, 0.14%)</title><rect x="0.5206%" y="980" width="0.1375%" height="15" fill="rgb(209,103,24)"/><text x="0.7706%" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:783) (14 samples, 0.14%)</title><rect x="0.5206%" y="996" width="0.1375%" height="15" fill="rgb(229,88,8)"/><text x="0.7706%" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (14 samples, 0.14%)</title><rect x="0.5206%" y="1012" width="0.1375%" height="15" fill="rgb(213,181,19)"/><text x="0.7706%" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:174) (41 samples, 0.40%)</title><rect x="0.5206%" y="692" width="0.4028%" height="15" fill="rgb(254,191,54)"/><text x="0.7706%" y="702.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (41 samples, 0.40%)</title><rect x="0.5206%" y="708" width="0.4028%" height="15" fill="rgb(241,83,37)"/><text x="0.7706%" y="718.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:961) (41 samples, 0.40%)</title><rect x="0.5206%" y="724" width="0.4028%" height="15" fill="rgb(233,36,39)"/><text x="0.7706%" y="734.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (41 samples, 0.40%)</title><rect x="0.5206%" y="740" width="0.4028%" height="15" fill="rgb(226,3,54)"/><text x="0.7706%" y="750.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (41 samples, 0.40%)</title><rect x="0.5206%" y="756" width="0.4028%" height="15" fill="rgb(245,192,40)"/><text x="0.7706%" y="766.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:975) (41 samples, 0.40%)</title><rect x="0.5206%" y="772" width="0.4028%" height="15" fill="rgb(238,167,29)"/><text x="0.7706%" y="782.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:671) (41 samples, 0.40%)</title><rect x="0.5206%" y="788" width="0.4028%" height="15" fill="rgb(232,182,51)"/><text x="0.7706%" y="798.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:783) (41 samples, 0.40%)</title><rect x="0.5206%" y="804" width="0.4028%" height="15" fill="rgb(231,60,39)"/><text x="0.7706%" y="814.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (41 samples, 0.40%)</title><rect x="0.5206%" y="820" width="0.4028%" height="15" fill="rgb(208,69,12)"/><text x="0.7706%" y="830.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:11) (16 samples, 0.16%)</title><rect x="0.9234%" y="820" width="0.1572%" height="15" fill="rgb(235,93,37)"/><text x="1.1734%" y="830.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1042) (16 samples, 0.16%)</title><rect x="0.9234%" y="836" width="0.1572%" height="15" fill="rgb(213,116,39)"/><text x="1.1734%" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (16 samples, 0.16%)</title><rect x="0.9234%" y="852" width="0.1572%" height="15" fill="rgb(222,207,29)"/><text x="1.1734%" y="862.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (16 samples, 0.16%)</title><rect x="0.9234%" y="868" width="0.1572%" height="15" fill="rgb(206,96,30)"/><text x="1.1734%" y="878.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:975) (16 samples, 0.16%)</title><rect x="0.9234%" y="884" width="0.1572%" height="15" fill="rgb(218,138,4)"/><text x="1.1734%" y="894.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:671) (16 samples, 0.16%)</title><rect x="0.9234%" y="900" width="0.1572%" height="15" fill="rgb(250,191,14)"/><text x="1.1734%" y="910.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:783) (16 samples, 0.16%)</title><rect x="0.9234%" y="916" width="0.1572%" height="15" fill="rgb(239,60,40)"/><text x="1.1734%" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (16 samples, 0.16%)</title><rect x="0.9234%" y="932" width="0.1572%" height="15" fill="rgb(206,27,48)"/><text x="1.1734%" y="942.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/__init__.py:401) (13 samples, 0.13%)</title><rect x="1.2181%" y="1044" width="0.1277%" height="15" fill="rgb(225,35,8)"/><text x="1.4681%" y="1054.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (13 samples, 0.13%)</title><rect x="1.2181%" y="1060" width="0.1277%" height="15" fill="rgb(250,213,24)"/><text x="1.4681%" y="1070.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:975) (12 samples, 0.12%)</title><rect x="1.2279%" y="1076" width="0.1179%" height="15" fill="rgb(247,123,22)"/><text x="1.4779%" y="1086.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:671) (12 samples, 0.12%)</title><rect x="1.2279%" y="1092" width="0.1179%" height="15" fill="rgb(231,138,38)"/><text x="1.4779%" y="1102.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:783) (12 samples, 0.12%)</title><rect x="1.2279%" y="1108" width="0.1179%" height="15" fill="rgb(231,145,46)"/><text x="1.4779%" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (12 samples, 0.12%)</title><rect x="1.2279%" y="1124" width="0.1179%" height="15" fill="rgb(251,118,11)"/><text x="1.4779%" y="1134.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_distn_infrastructure.py:23) (30 samples, 0.29%)</title><rect x="1.1395%" y="916" width="0.2947%" height="15" fill="rgb(217,147,25)"/><text x="1.3895%" y="926.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1042) (30 samples, 0.29%)</title><rect x="1.1395%" y="932" width="0.2947%" height="15" fill="rgb(247,81,37)"/><text x="1.3895%" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (30 samples, 0.29%)</title><rect x="1.1395%" y="948" width="0.2947%" height="15" fill="rgb(209,12,38)"/><text x="1.3895%" y="958.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (30 samples, 0.29%)</title><rect x="1.1395%" y="964" width="0.2947%" height="15" fill="rgb(227,1,9)"/><text x="1.3895%" y="974.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:975) (30 samples, 0.29%)</title><rect x="1.1395%" y="980" width="0.2947%" height="15" fill="rgb(248,47,43)"/><text x="1.3895%" y="990.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:671) (30 samples, 0.29%)</title><rect x="1.1395%" y="996" width="0.2947%" height="15" fill="rgb(221,10,30)"/><text x="1.3895%" y="1006.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:783) (30 samples, 0.29%)</title><rect x="1.1395%" y="1012" width="0.2947%" height="15" fill="rgb(210,229,1)"/><text x="1.3895%" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (30 samples, 0.29%)</title><rect x="1.1395%" y="1028" width="0.2947%" height="15" fill="rgb(222,148,37)"/><text x="1.3895%" y="1038.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:180) (57 samples, 0.56%)</title><rect x="0.9234%" y="692" width="0.5599%" height="15" fill="rgb(234,67,33)"/><text x="1.1734%" y="702.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1042) (57 samples, 0.56%)</title><rect x="0.9234%" y="708" width="0.5599%" height="15" fill="rgb(247,98,35)"/><text x="1.1734%" y="718.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (57 samples, 0.56%)</title><rect x="0.9234%" y="724" width="0.5599%" height="15" fill="rgb(247,138,52)"/><text x="1.1734%" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (57 samples, 0.56%)</title><rect x="0.9234%" y="740" width="0.5599%" height="15" fill="rgb(213,79,30)"/><text x="1.1734%" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:975) (57 samples, 0.56%)</title><rect x="0.9234%" y="756" width="0.5599%" height="15" fill="rgb(246,177,23)"/><text x="1.1734%" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:671) (57 samples, 0.56%)</title><rect x="0.9234%" y="772" width="0.5599%" height="15" fill="rgb(230,62,27)"/><text x="1.1734%" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:783) (57 samples, 0.56%)</title><rect x="0.9234%" y="788" width="0.5599%" height="15" fill="rgb(216,154,8)"/><text x="1.1734%" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (57 samples, 0.56%)</title><rect x="0.9234%" y="804" width="0.5599%" height="15" fill="rgb(244,35,45)"/><text x="1.1734%" y="814.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:8) (35 samples, 0.34%)</title><rect x="1.1395%" y="820" width="0.3438%" height="15" fill="rgb(251,115,12)"/><text x="1.3895%" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (35 samples, 0.34%)</title><rect x="1.1395%" y="836" width="0.3438%" height="15" fill="rgb(240,54,50)"/><text x="1.3895%" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:975) (35 samples, 0.34%)</title><rect x="1.1395%" y="852" width="0.3438%" height="15" fill="rgb(233,84,52)"/><text x="1.3895%" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:671) (35 samples, 0.34%)</title><rect x="1.1395%" y="868" width="0.3438%" height="15" fill="rgb(207,117,47)"/><text x="1.3895%" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:783) (35 samples, 0.34%)</title><rect x="1.1395%" y="884" width="0.3438%" height="15" fill="rgb(249,43,39)"/><text x="1.3895%" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (35 samples, 0.34%)</title><rect x="1.1395%" y="900" width="0.3438%" height="15" fill="rgb(209,38,44)"/><text x="1.3895%" y="910.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:391) (105 samples, 1.03%)</title><rect x="0.4617%" y="596" width="1.0314%" height="15" fill="rgb(236,212,23)"/><text x="0.7117%" y="606.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (105 samples, 1.03%)</title><rect x="0.4617%" y="612" width="1.0314%" height="15" fill="rgb(242,79,21)"/><text x="0.7117%" y="622.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:975) (105 samples, 1.03%)</title><rect x="0.4617%" y="628" width="1.0314%" height="15" fill="rgb(211,96,35)"/><text x="0.7117%" y="638.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:671) (105 samples, 1.03%)</title><rect x="0.4617%" y="644" width="1.0314%" height="15" fill="rgb(253,215,40)"/><text x="0.7117%" y="654.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:783) (99 samples, 0.97%)</title><rect x="0.5206%" y="660" width="0.9725%" height="15" fill="rgb(211,81,21)"/><text x="0.7706%" y="670.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (99 samples, 0.97%)</title><rect x="0.5206%" y="676" width="0.9725%" height="15" fill="rgb(208,190,38)"/><text x="0.7706%" y="686.50"></text></g><g><title>&lt;module&gt; (nltk/metrics/__init__.py:16) (154 samples, 1.51%)</title><rect x="0.0196%" y="356" width="1.5128%" height="15" fill="rgb(235,213,38)"/><text x="0.2696%" y="366.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (154 samples, 1.51%)</title><rect x="0.0196%" y="372" width="1.5128%" height="15" fill="rgb(237,122,38)"/><text x="0.2696%" y="382.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:975) (154 samples, 1.51%)</title><rect x="0.0196%" y="388" width="1.5128%" height="15" fill="rgb(244,218,35)"/><text x="0.2696%" y="398.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:671) (154 samples, 1.51%)</title><rect x="0.0196%" y="404" width="1.5128%" height="15" fill="rgb(240,68,47)"/><text x="0.2696%" y="414.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:783) (154 samples, 1.51%)</title><rect x="0.0196%" y="420" width="1.5128%" height="15" fill="rgb(210,16,53)"/><text x="0.2696%" y="430.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (154 samples, 1.51%)</title><rect x="0.0196%" y="436" width="1.5128%" height="15" fill="rgb(235,124,12)"/><text x="0.2696%" y="446.50"></text></g><g><title>&lt;module&gt; (nltk/metrics/scores.py:15) (154 samples, 1.51%)</title><rect x="0.0196%" y="452" width="1.5128%" height="15" fill="rgb(224,169,11)"/><text x="0.2696%" y="462.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (154 samples, 1.51%)</title><rect x="0.0196%" y="468" width="1.5128%" height="15" fill="rgb(250,166,2)"/><text x="0.2696%" y="478.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:961) (154 samples, 1.51%)</title><rect x="0.0196%" y="484" width="1.5128%" height="15" fill="rgb(242,216,29)"/><text x="0.2696%" y="494.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (154 samples, 1.51%)</title><rect x="0.0196%" y="500" width="1.5128%" height="15" fill="rgb(230,116,27)"/><text x="0.2696%" y="510.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (154 samples, 1.51%)</title><rect x="0.0196%" y="516" width="1.5128%" height="15" fill="rgb(228,99,48)"/><text x="0.2696%" y="526.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:975) (109 samples, 1.07%)</title><rect x="0.4617%" y="532" width="1.0707%" height="15" fill="rgb(253,11,6)"/><text x="0.7117%" y="542.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:671) (109 samples, 1.07%)</title><rect x="0.4617%" y="548" width="1.0707%" height="15" fill="rgb(247,143,39)"/><text x="0.7117%" y="558.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:783) (109 samples, 1.07%)</title><rect x="0.4617%" y="564" width="1.0707%" height="15" fill="rgb(236,97,10)"/><text x="0.7117%" y="574.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (109 samples, 1.07%)</title><rect x="0.4617%" y="580" width="1.0707%" height="15" fill="rgb(233,208,19)"/><text x="0.7117%" y="590.50"></text></g><g><title>&lt;module&gt; (nltk/__init__.py:128) (160 samples, 1.57%)</title><rect x="0.0000%" y="164" width="1.5717%" height="15" fill="rgb(216,164,2)"/><text x="0.2500%" y="174.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (160 samples, 1.57%)</title><rect x="0.0000%" y="180" width="1.5717%" height="15" fill="rgb(220,129,5)"/><text x="0.2500%" y="190.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:975) (160 samples, 1.57%)</title><rect x="0.0000%" y="196" width="1.5717%" height="15" fill="rgb(242,17,10)"/><text x="0.2500%" y="206.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:671) (160 samples, 1.57%)</title><rect x="0.0000%" y="212" width="1.5717%" height="15" fill="rgb(242,107,0)"/><text x="0.2500%" y="222.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:783) (160 samples, 1.57%)</title><rect x="0.0000%" y="228" width="1.5717%" height="15" fill="rgb(251,28,31)"/><text x="0.2500%" y="238.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (160 samples, 1.57%)</title><rect x="0.0000%" y="244" width="1.5717%" height="15" fill="rgb(233,223,10)"/><text x="0.2500%" y="254.50"></text></g><g><title>&lt;module&gt; (nltk/collocations.py:39) (158 samples, 1.55%)</title><rect x="0.0196%" y="260" width="1.5521%" height="15" fill="rgb(215,21,27)"/><text x="0.2696%" y="270.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (158 samples, 1.55%)</title><rect x="0.0196%" y="276" width="1.5521%" height="15" fill="rgb(232,23,21)"/><text x="0.2696%" y="286.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:975) (158 samples, 1.55%)</title><rect x="0.0196%" y="292" width="1.5521%" height="15" fill="rgb(244,5,23)"/><text x="0.2696%" y="302.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:671) (158 samples, 1.55%)</title><rect x="0.0196%" y="308" width="1.5521%" height="15" fill="rgb(226,81,46)"/><text x="0.2696%" y="318.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:783) (158 samples, 1.55%)</title><rect x="0.0196%" y="324" width="1.5521%" height="15" fill="rgb(247,70,30)"/><text x="0.2696%" y="334.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (158 samples, 1.55%)</title><rect x="0.0196%" y="340" width="1.5521%" height="15" fill="rgb(212,68,19)"/><text x="0.2696%" y="350.50"></text></g><g><title>&lt;module&gt; (nltk/__init__.py:142) (11 samples, 0.11%)</title><rect x="1.7092%" y="164" width="0.1081%" height="15" fill="rgb(240,187,13)"/><text x="1.9592%" y="174.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (11 samples, 0.11%)</title><rect x="1.7092%" y="180" width="0.1081%" height="15" fill="rgb(223,113,26)"/><text x="1.9592%" y="190.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:975) (11 samples, 0.11%)</title><rect x="1.7092%" y="196" width="0.1081%" height="15" fill="rgb(206,192,2)"/><text x="1.9592%" y="206.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:671) (11 samples, 0.11%)</title><rect x="1.7092%" y="212" width="0.1081%" height="15" fill="rgb(241,108,4)"/><text x="1.9592%" y="222.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:783) (11 samples, 0.11%)</title><rect x="1.7092%" y="228" width="0.1081%" height="15" fill="rgb(247,173,49)"/><text x="1.9592%" y="238.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (11 samples, 0.11%)</title><rect x="1.7092%" y="244" width="0.1081%" height="15" fill="rgb(224,114,35)"/><text x="1.9592%" y="254.50"></text></g><g><title>&lt;module&gt; (nltk/chunk/__init__.py:157) (11 samples, 0.11%)</title><rect x="1.7092%" y="260" width="0.1081%" height="15" fill="rgb(245,159,27)"/><text x="1.9592%" y="270.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (11 samples, 0.11%)</title><rect x="1.7092%" y="276" width="0.1081%" height="15" fill="rgb(245,172,44)"/><text x="1.9592%" y="286.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:975) (11 samples, 0.11%)</title><rect x="1.7092%" y="292" width="0.1081%" height="15" fill="rgb(236,23,11)"/><text x="1.9592%" y="302.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:671) (11 samples, 0.11%)</title><rect x="1.7092%" y="308" width="0.1081%" height="15" fill="rgb(205,117,38)"/><text x="1.9592%" y="318.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:783) (11 samples, 0.11%)</title><rect x="1.7092%" y="324" width="0.1081%" height="15" fill="rgb(237,72,25)"/><text x="1.9592%" y="334.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (11 samples, 0.11%)</title><rect x="1.7092%" y="340" width="0.1081%" height="15" fill="rgb(244,70,9)"/><text x="1.9592%" y="350.50"></text></g><g><title>&lt;module&gt; (nltk/chunk/api.py:13) (11 samples, 0.11%)</title><rect x="1.7092%" y="356" width="0.1081%" height="15" fill="rgb(217,125,39)"/><text x="1.9592%" y="366.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (11 samples, 0.11%)</title><rect x="1.7092%" y="372" width="0.1081%" height="15" fill="rgb(235,36,10)"/><text x="1.9592%" y="382.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:975) (11 samples, 0.11%)</title><rect x="1.7092%" y="388" width="0.1081%" height="15" fill="rgb(251,123,47)"/><text x="1.9592%" y="398.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:671) (11 samples, 0.11%)</title><rect x="1.7092%" y="404" width="0.1081%" height="15" fill="rgb(221,13,13)"/><text x="1.9592%" y="414.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:783) (11 samples, 0.11%)</title><rect x="1.7092%" y="420" width="0.1081%" height="15" fill="rgb(238,131,9)"/><text x="1.9592%" y="430.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (11 samples, 0.11%)</title><rect x="1.7092%" y="436" width="0.1081%" height="15" fill="rgb(211,50,8)"/><text x="1.9592%" y="446.50"></text></g><g><title>&lt;module&gt; (nltk/__init__.py:149) (16 samples, 0.16%)</title><rect x="1.8271%" y="164" width="0.1572%" height="15" fill="rgb(245,182,24)"/><text x="2.0771%" y="174.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (16 samples, 0.16%)</title><rect x="1.8271%" y="180" width="0.1572%" height="15" fill="rgb(242,14,37)"/><text x="2.0771%" y="190.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:975) (16 samples, 0.16%)</title><rect x="1.8271%" y="196" width="0.1572%" height="15" fill="rgb(246,228,12)"/><text x="2.0771%" y="206.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:671) (16 samples, 0.16%)</title><rect x="1.8271%" y="212" width="0.1572%" height="15" fill="rgb(213,55,15)"/><text x="2.0771%" y="222.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:783) (16 samples, 0.16%)</title><rect x="1.8271%" y="228" width="0.1572%" height="15" fill="rgb(209,9,3)"/><text x="2.0771%" y="238.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (16 samples, 0.16%)</title><rect x="1.8271%" y="244" width="0.1572%" height="15" fill="rgb(230,59,30)"/><text x="2.0771%" y="254.50"></text></g><g><title>&lt;module&gt; (nltk/translate/__init__.py:23) (15 samples, 0.15%)</title><rect x="1.8369%" y="260" width="0.1473%" height="15" fill="rgb(209,121,21)"/><text x="2.0869%" y="270.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (15 samples, 0.15%)</title><rect x="1.8369%" y="276" width="0.1473%" height="15" fill="rgb(220,109,13)"/><text x="2.0869%" y="286.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:975) (15 samples, 0.15%)</title><rect x="1.8369%" y="292" width="0.1473%" height="15" fill="rgb(232,18,1)"/><text x="2.0869%" y="302.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:671) (15 samples, 0.15%)</title><rect x="1.8369%" y="308" width="0.1473%" height="15" fill="rgb(215,41,42)"/><text x="2.0869%" y="318.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:783) (15 samples, 0.15%)</title><rect x="1.8369%" y="324" width="0.1473%" height="15" fill="rgb(224,123,36)"/><text x="2.0869%" y="334.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (15 samples, 0.15%)</title><rect x="1.8369%" y="340" width="0.1473%" height="15" fill="rgb(240,125,3)"/><text x="2.0869%" y="350.50"></text></g><g><title>&lt;module&gt; (nltk/translate/meteor_score.py:10) (15 samples, 0.15%)</title><rect x="1.8369%" y="356" width="0.1473%" height="15" fill="rgb(205,98,50)"/><text x="2.0869%" y="366.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (15 samples, 0.15%)</title><rect x="1.8369%" y="372" width="0.1473%" height="15" fill="rgb(205,185,37)"/><text x="2.0869%" y="382.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:961) (15 samples, 0.15%)</title><rect x="1.8369%" y="388" width="0.1473%" height="15" fill="rgb(238,207,15)"/><text x="2.0869%" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (15 samples, 0.15%)</title><rect x="1.8369%" y="404" width="0.1473%" height="15" fill="rgb(213,199,42)"/><text x="2.0869%" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (15 samples, 0.15%)</title><rect x="1.8369%" y="420" width="0.1473%" height="15" fill="rgb(235,201,11)"/><text x="2.0869%" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:975) (15 samples, 0.15%)</title><rect x="1.8369%" y="436" width="0.1473%" height="15" fill="rgb(207,46,11)"/><text x="2.0869%" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:671) (15 samples, 0.15%)</title><rect x="1.8369%" y="452" width="0.1473%" height="15" fill="rgb(241,35,35)"/><text x="2.0869%" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:783) (15 samples, 0.15%)</title><rect x="1.8369%" y="468" width="0.1473%" height="15" fill="rgb(243,32,47)"/><text x="2.0869%" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (15 samples, 0.15%)</title><rect x="1.8369%" y="484" width="0.1473%" height="15" fill="rgb(247,202,23)"/><text x="2.0869%" y="494.50"></text></g><g><title>&lt;module&gt; (nltk/stem/__init__.py:29) (15 samples, 0.15%)</title><rect x="1.8369%" y="500" width="0.1473%" height="15" fill="rgb(219,102,11)"/><text x="2.0869%" y="510.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (15 samples, 0.15%)</title><rect x="1.8369%" y="516" width="0.1473%" height="15" fill="rgb(243,110,44)"/><text x="2.0869%" y="526.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:975) (15 samples, 0.15%)</title><rect x="1.8369%" y="532" width="0.1473%" height="15" fill="rgb(222,74,54)"/><text x="2.0869%" y="542.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:671) (15 samples, 0.15%)</title><rect x="1.8369%" y="548" width="0.1473%" height="15" fill="rgb(216,99,12)"/><text x="2.0869%" y="558.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:783) (15 samples, 0.15%)</title><rect x="1.8369%" y="564" width="0.1473%" height="15" fill="rgb(226,22,26)"/><text x="2.0869%" y="574.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (15 samples, 0.15%)</title><rect x="1.8369%" y="580" width="0.1473%" height="15" fill="rgb(217,163,10)"/><text x="2.0869%" y="590.50"></text></g><g><title>&lt;module&gt; (nltk/stem/snowball.py:29) (15 samples, 0.15%)</title><rect x="1.8369%" y="596" width="0.1473%" height="15" fill="rgb(213,25,53)"/><text x="2.0869%" y="606.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (15 samples, 0.15%)</title><rect x="1.8369%" y="612" width="0.1473%" height="15" fill="rgb(252,105,26)"/><text x="2.0869%" y="622.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:975) (15 samples, 0.15%)</title><rect x="1.8369%" y="628" width="0.1473%" height="15" fill="rgb(220,39,43)"/><text x="2.0869%" y="638.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:671) (15 samples, 0.15%)</title><rect x="1.8369%" y="644" width="0.1473%" height="15" fill="rgb(229,68,48)"/><text x="2.0869%" y="654.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:783) (15 samples, 0.15%)</title><rect x="1.8369%" y="660" width="0.1473%" height="15" fill="rgb(252,8,32)"/><text x="2.0869%" y="670.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (15 samples, 0.15%)</title><rect x="1.8369%" y="676" width="0.1473%" height="15" fill="rgb(223,20,43)"/><text x="2.0869%" y="686.50"></text></g><g><title>&lt;module&gt; (nltk/corpus/__init__.py:66) (15 samples, 0.15%)</title><rect x="1.8369%" y="692" width="0.1473%" height="15" fill="rgb(229,81,49)"/><text x="2.0869%" y="702.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (15 samples, 0.15%)</title><rect x="1.8369%" y="708" width="0.1473%" height="15" fill="rgb(236,28,36)"/><text x="2.0869%" y="718.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:975) (15 samples, 0.15%)</title><rect x="1.8369%" y="724" width="0.1473%" height="15" fill="rgb(249,185,26)"/><text x="2.0869%" y="734.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:671) (15 samples, 0.15%)</title><rect x="1.8369%" y="740" width="0.1473%" height="15" fill="rgb(249,174,33)"/><text x="2.0869%" y="750.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:783) (15 samples, 0.15%)</title><rect x="1.8369%" y="756" width="0.1473%" height="15" fill="rgb(233,201,37)"/><text x="2.0869%" y="766.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (15 samples, 0.15%)</title><rect x="1.8369%" y="772" width="0.1473%" height="15" fill="rgb(221,78,26)"/><text x="2.0869%" y="782.50"></text></g><g><title>&lt;module&gt; (SemanticText.py:1) (207 samples, 2.03%)</title><rect x="0.0000%" y="68" width="2.0334%" height="15" fill="rgb(250,127,30)"/><text x="0.2500%" y="78.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (207 samples, 2.03%)</title><rect x="0.0000%" y="84" width="2.0334%" height="15" fill="rgb(230,49,44)"/><text x="0.2500%" y="94.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:975) (207 samples, 2.03%)</title><rect x="0.0000%" y="100" width="2.0334%" height="15" fill="rgb(229,67,23)"/><text x="0.2500%" y="110.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:671) (207 samples, 2.03%)</title><rect x="0.0000%" y="116" width="2.0334%" height="15" fill="rgb(249,83,47)"/><text x="0.2500%" y="126.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:783) (207 samples, 2.03%)</title><rect x="0.0000%" y="132" width="2.0334%" height="15" fill="rgb(215,43,3)"/><text x="0.2500%" y="142.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (207 samples, 2.03%)</title><rect x="0.0000%" y="148" width="2.0334%" height="15" fill="rgb(238,154,13)"/><text x="0.2500%" y="158.50">_..</text></g><g><title>from_config (spacy/language.py:1639) (20 samples, 0.20%)</title><rect x="2.0334%" y="196" width="0.1965%" height="15" fill="rgb(219,56,2)"/><text x="2.2834%" y="206.50"></text></g><g><title>__init__ (spacy/language.py:178) (20 samples, 0.20%)</title><rect x="2.0334%" y="212" width="0.1965%" height="15" fill="rgb(233,0,4)"/><text x="2.2834%" y="222.50"></text></g><g><title>tokenizer_factory (spacy/language.py:80) (14 samples, 0.14%)</title><rect x="2.0923%" y="228" width="0.1375%" height="15" fill="rgb(235,30,7)"/><text x="2.3423%" y="238.50"></text></g><g><title>load_model_from_path (spacy/util.py:391) (24 samples, 0.24%)</title><rect x="2.0334%" y="164" width="0.2358%" height="15" fill="rgb(250,79,13)"/><text x="2.2834%" y="174.50"></text></g><g><title>load_model_from_config (spacy/util.py:428) (24 samples, 0.24%)</title><rect x="2.0334%" y="180" width="0.2358%" height="15" fill="rgb(211,146,34)"/><text x="2.2834%" y="190.50"></text></g><g><title>&lt;lambda&gt; (spacy/language.py:1869) (15 samples, 0.15%)</title><rect x="2.2790%" y="212" width="0.1473%" height="15" fill="rgb(228,22,38)"/><text x="2.5290%" y="222.50"></text></g><g><title>&lt;lambda&gt; (spacy/language.py:1877) (12 samples, 0.12%)</title><rect x="2.4263%" y="212" width="0.1179%" height="15" fill="rgb(235,168,5)"/><text x="2.6763%" y="222.50"></text></g><g><title>from_disk (spacy/util.py:1176) (1,385 samples, 13.61%)</title><rect x="4.4990%" y="228" width="13.6051%" height="15" fill="rgb(221,155,16)"/><text x="4.7490%" y="238.50">from_disk (spacy/util..</text></g><g><title>read_msgpack (srsly/_msgpack_api.py:55) (1,377 samples, 13.53%)</title><rect x="4.5776%" y="244" width="13.5265%" height="15" fill="rgb(215,215,53)"/><text x="4.8276%" y="254.50">read_msgpack (srsly/..</text></g><g><title>unpack (srsly/msgpack/__init__.py:67) (1,374 samples, 13.50%)</title><rect x="4.6071%" y="260" width="13.4971%" height="15" fill="rgb(223,4,10)"/><text x="4.8571%" y="270.50">unpack (srsly/msgpac..</text></g><g><title>&lt;module&gt; (SemanticText.py:10) (1,701 samples, 16.71%)</title><rect x="2.0334%" y="68" width="16.7092%" height="15" fill="rgb(234,103,6)"/><text x="2.2834%" y="78.50">&lt;module&gt; (SemanticText.py:..</text></g><g><title>load (spacy/__init__.py:50) (1,701 samples, 16.71%)</title><rect x="2.0334%" y="84" width="16.7092%" height="15" fill="rgb(227,97,0)"/><text x="2.2834%" y="94.50">load (spacy/__init__.py:50)</text></g><g><title>load_model (spacy/util.py:324) (1,701 samples, 16.71%)</title><rect x="2.0334%" y="100" width="16.7092%" height="15" fill="rgb(234,150,53)"/><text x="2.2834%" y="110.50">load_model (spacy/util.py:..</text></g><g><title>load_model_from_package (spacy/util.py:357) (1,701 samples, 16.71%)</title><rect x="2.0334%" y="116" width="16.7092%" height="15" fill="rgb(228,201,54)"/><text x="2.2834%" y="126.50">load_model_from_package (s..</text></g><g><title>load (en_core_web_lg/__init__.py:10) (1,701 samples, 16.71%)</title><rect x="2.0334%" y="132" width="16.7092%" height="15" fill="rgb(222,22,37)"/><text x="2.2834%" y="142.50">load (en_core_web_lg/__ini..</text></g><g><title>load_model_from_init_py (spacy/util.py:516) (1,701 samples, 16.71%)</title><rect x="2.0334%" y="148" width="16.7092%" height="15" fill="rgb(237,53,32)"/><text x="2.2834%" y="158.50">load_model_from_init_py (s..</text></g><g><title>load_model_from_path (spacy/util.py:392) (1,677 samples, 16.47%)</title><rect x="2.2692%" y="164" width="16.4735%" height="15" fill="rgb(233,25,53)"/><text x="2.5192%" y="174.50">load_model_from_path (spa..</text></g><g><title>from_disk (spacy/language.py:1883) (1,677 samples, 16.47%)</title><rect x="2.2692%" y="180" width="16.4735%" height="15" fill="rgb(210,40,34)"/><text x="2.5192%" y="190.50">from_disk (spacy/language..</text></g><g><title>from_disk (spacy/util.py:1176) (1,677 samples, 16.47%)</title><rect x="2.2692%" y="196" width="16.4735%" height="15" fill="rgb(241,220,44)"/><text x="2.5192%" y="206.50">from_disk (spacy/util.py:..</text></g><g><title>deserialize_vocab (spacy/language.py:1859) (1,649 samples, 16.20%)</title><rect x="2.5442%" y="212" width="16.1984%" height="15" fill="rgb(235,28,35)"/><text x="2.7942%" y="222.50">deserialize_vocab (spacy/..</text></g><g><title>read_json (srsly/_json_api.py:53) (65 samples, 0.64%)</title><rect x="18.1041%" y="228" width="0.6385%" height="15" fill="rgb(210,56,17)"/><text x="18.3541%" y="238.50"></text></g><g><title>decode (codecs.py:322) (28 samples, 0.28%)</title><rect x="18.4676%" y="244" width="0.2750%" height="15" fill="rgb(224,130,29)"/><text x="18.7176%" y="254.50"></text></g><g><title>Semantic_Similarity (SemanticText.py:167) (175 samples, 1.72%)</title><rect x="18.7819%" y="84" width="1.7191%" height="15" fill="rgb(235,212,8)"/><text x="19.0319%" y="94.50"></text></g><g><title>NLCS (SemanticText.py:69) (169 samples, 1.66%)</title><rect x="18.8409%" y="100" width="1.6601%" height="15" fill="rgb(223,33,50)"/><text x="19.0909%" y="110.50"></text></g><g><title>NLCS (SemanticText.py:69) (166 samples, 1.63%)</title><rect x="18.8703%" y="116" width="1.6306%" height="15" fill="rgb(219,149,13)"/><text x="19.1203%" y="126.50"></text></g><g><title>NLCS (SemanticText.py:69) (165 samples, 1.62%)</title><rect x="18.8802%" y="132" width="1.6208%" height="15" fill="rgb(250,156,29)"/><text x="19.1302%" y="142.50"></text></g><g><title>NLCS (SemanticText.py:69) (163 samples, 1.60%)</title><rect x="18.8998%" y="148" width="1.6012%" height="15" fill="rgb(216,193,19)"/><text x="19.1498%" y="158.50"></text></g><g><title>NLCS (SemanticText.py:69) (162 samples, 1.59%)</title><rect x="18.9096%" y="164" width="1.5914%" height="15" fill="rgb(216,135,14)"/><text x="19.1596%" y="174.50"></text></g><g><title>NLCS (SemanticText.py:69) (155 samples, 1.52%)</title><rect x="18.9784%" y="180" width="1.5226%" height="15" fill="rgb(241,47,5)"/><text x="19.2284%" y="190.50"></text></g><g><title>NLCS (SemanticText.py:69) (145 samples, 1.42%)</title><rect x="19.0766%" y="196" width="1.4244%" height="15" fill="rgb(233,42,35)"/><text x="19.3266%" y="206.50"></text></g><g><title>NLCS (SemanticText.py:69) (139 samples, 1.37%)</title><rect x="19.1356%" y="212" width="1.3654%" height="15" fill="rgb(231,13,6)"/><text x="19.3856%" y="222.50"></text></g><g><title>NLCS (SemanticText.py:69) (132 samples, 1.30%)</title><rect x="19.2043%" y="228" width="1.2967%" height="15" fill="rgb(207,181,40)"/><text x="19.4543%" y="238.50"></text></g><g><title>NLCS (SemanticText.py:69) (115 samples, 1.13%)</title><rect x="19.3713%" y="244" width="1.1297%" height="15" fill="rgb(254,173,49)"/><text x="19.6213%" y="254.50"></text></g><g><title>NLCS (SemanticText.py:69) (102 samples, 1.00%)</title><rect x="19.4990%" y="260" width="1.0020%" height="15" fill="rgb(221,1,38)"/><text x="19.7490%" y="270.50"></text></g><g><title>NLCS (SemanticText.py:69) (87 samples, 0.85%)</title><rect x="19.6464%" y="276" width="0.8546%" height="15" fill="rgb(206,124,46)"/><text x="19.8964%" y="286.50"></text></g><g><title>NLCS (SemanticText.py:69) (74 samples, 0.73%)</title><rect x="19.7741%" y="292" width="0.7269%" height="15" fill="rgb(249,21,11)"/><text x="20.0241%" y="302.50"></text></g><g><title>NLCS (SemanticText.py:69) (55 samples, 0.54%)</title><rect x="19.9607%" y="308" width="0.5403%" height="15" fill="rgb(222,201,40)"/><text x="20.2107%" y="318.50"></text></g><g><title>NLCS (SemanticText.py:69) (39 samples, 0.38%)</title><rect x="20.1179%" y="324" width="0.3831%" height="15" fill="rgb(235,61,29)"/><text x="20.3679%" y="334.50"></text></g><g><title>NLCS (SemanticText.py:69) (23 samples, 0.23%)</title><rect x="20.2750%" y="340" width="0.2259%" height="15" fill="rgb(219,207,3)"/><text x="20.5250%" y="350.50"></text></g><g><title>NLCS (SemanticText.py:69) (13 samples, 0.13%)</title><rect x="20.3733%" y="356" width="0.1277%" height="15" fill="rgb(222,56,46)"/><text x="20.6233%" y="366.50"></text></g><g><title>__call__ (spacy/language.py:983) (19 samples, 0.19%)</title><rect x="20.6189%" y="132" width="0.1866%" height="15" fill="rgb(239,76,54)"/><text x="20.8689%" y="142.50"></text></g><g><title>make_doc (spacy/language.py:1065) (16 samples, 0.16%)</title><rect x="20.6483%" y="148" width="0.1572%" height="15" fill="rgb(231,124,27)"/><text x="20.8983%" y="158.50"></text></g><g><title>match (spacy/pipeline/attributeruler.py:108) (23 samples, 0.23%)</title><rect x="21.8271%" y="164" width="0.2259%" height="15" fill="rgb(249,195,6)"/><text x="22.0771%" y="174.50"></text></g><g><title>__call__ (spacy/pipeline/attributeruler.py:101) (30 samples, 0.29%)</title><rect x="21.8173%" y="148" width="0.2947%" height="15" fill="rgb(237,174,47)"/><text x="22.0673%" y="158.50"></text></g><g><title>__call__ (spacy/pipeline/lemmatizer.py:109) (13 samples, 0.13%)</title><rect x="22.2200%" y="148" width="0.1277%" height="15" fill="rgb(206,201,31)"/><text x="22.4700%" y="158.50"></text></g><g><title>forward (spacy_legacy/layers/staticvectors_v1.py:42) (15 samples, 0.15%)</title><rect x="22.6916%" y="292" width="0.1473%" height="15" fill="rgb(231,57,52)"/><text x="22.9416%" y="302.50"></text></g><g><title>&lt;listcomp&gt; (spacy_legacy/layers/staticvectors_v1.py:42) (15 samples, 0.15%)</title><rect x="22.6916%" y="308" width="0.1473%" height="15" fill="rgb(248,177,22)"/><text x="22.9416%" y="318.50"></text></g><g><title>forward (spacy_legacy/layers/staticvectors_v1.py:45) (24 samples, 0.24%)</title><rect x="22.8389%" y="292" width="0.2358%" height="15" fill="rgb(215,211,37)"/><text x="23.0889%" y="302.50"></text></g><g><title>forward (thinc/layers/hashembed.py:71) (20 samples, 0.20%)</title><rect x="23.5953%" y="452" width="0.1965%" height="15" fill="rgb(241,128,51)"/><text x="23.8453%" y="462.50"></text></g><g><title>forward (thinc/layers/chain.py:54) (48 samples, 0.47%)</title><rect x="23.3497%" y="420" width="0.4715%" height="15" fill="rgb(227,165,31)"/><text x="23.5997%" y="430.50"></text></g><g><title>__call__ (thinc/model.py:288) (48 samples, 0.47%)</title><rect x="23.3497%" y="436" width="0.4715%" height="15" fill="rgb(228,167,24)"/><text x="23.5997%" y="446.50"></text></g><g><title>forward (thinc/layers/concatenate.py:44) (52 samples, 0.51%)</title><rect x="23.3301%" y="372" width="0.5108%" height="15" fill="rgb(228,143,12)"/><text x="23.5801%" y="382.50"></text></g><g><title>&lt;listcomp&gt; (thinc/layers/concatenate.py:44) (51 samples, 0.50%)</title><rect x="23.3399%" y="388" width="0.5010%" height="15" fill="rgb(249,149,8)"/><text x="23.5899%" y="398.50"></text></g><g><title>__call__ (thinc/model.py:288) (51 samples, 0.50%)</title><rect x="23.3399%" y="404" width="0.5010%" height="15" fill="rgb(243,35,44)"/><text x="23.5899%" y="414.50"></text></g><g><title>_ragged_forward (thinc/layers/with_array.py:90) (66 samples, 0.65%)</title><rect x="23.3301%" y="340" width="0.6483%" height="15" fill="rgb(246,89,9)"/><text x="23.5801%" y="350.50"></text></g><g><title>__call__ (thinc/model.py:288) (66 samples, 0.65%)</title><rect x="23.3301%" y="356" width="0.6483%" height="15" fill="rgb(233,213,13)"/><text x="23.5801%" y="366.50"></text></g><g><title>forward (thinc/layers/concatenate.py:50) (13 samples, 0.13%)</title><rect x="23.8507%" y="372" width="0.1277%" height="15" fill="rgb(233,141,41)"/><text x="24.1007%" y="382.50"></text></g><g><title>_array_forward (thinc/layers/concatenate.py:57) (12 samples, 0.12%)</title><rect x="23.8605%" y="388" width="0.1179%" height="15" fill="rgb(239,167,4)"/><text x="24.1105%" y="398.50"></text></g><g><title>forward (thinc/layers/with_array.py:30) (68 samples, 0.67%)</title><rect x="23.3202%" y="324" width="0.6680%" height="15" fill="rgb(209,217,16)"/><text x="23.5702%" y="334.50"></text></g><g><title>forward (thinc/layers/chain.py:54) (88 samples, 0.86%)</title><rect x="23.1729%" y="292" width="0.8644%" height="15" fill="rgb(219,88,35)"/><text x="23.4229%" y="302.50"></text></g><g><title>__call__ (thinc/model.py:288) (86 samples, 0.84%)</title><rect x="23.1925%" y="308" width="0.8448%" height="15" fill="rgb(220,193,23)"/><text x="23.4425%" y="318.50"></text></g><g><title>forward (thinc/layers/concatenate.py:44) (153 samples, 1.50%)</title><rect x="22.5442%" y="244" width="1.5029%" height="15" fill="rgb(230,90,52)"/><text x="22.7942%" y="254.50"></text></g><g><title>&lt;listcomp&gt; (thinc/layers/concatenate.py:44) (152 samples, 1.49%)</title><rect x="22.5540%" y="260" width="1.4931%" height="15" fill="rgb(252,106,19)"/><text x="22.8040%" y="270.50"></text></g><g><title>__call__ (thinc/model.py:288) (149 samples, 1.46%)</title><rect x="22.5835%" y="276" width="1.4637%" height="15" fill="rgb(206,74,20)"/><text x="22.8335%" y="286.50"></text></g><g><title>forward (thinc/layers/layernorm.py:25) (20 samples, 0.20%)</title><rect x="24.2141%" y="356" width="0.1965%" height="15" fill="rgb(230,138,44)"/><text x="24.4641%" y="366.50"></text></g><g><title>forward (thinc/layers/maxout.py:49) (39 samples, 0.38%)</title><rect x="24.5481%" y="356" width="0.3831%" height="15" fill="rgb(235,182,43)"/><text x="24.7981%" y="366.50"></text></g><g><title>forward (thinc/layers/chain.py:54) (89 samples, 0.87%)</title><rect x="24.2043%" y="324" width="0.8743%" height="15" fill="rgb(242,16,51)"/><text x="24.4543%" y="334.50"></text></g><g><title>__call__ (thinc/model.py:288) (89 samples, 0.87%)</title><rect x="24.2043%" y="340" width="0.8743%" height="15" fill="rgb(248,9,4)"/><text x="24.4543%" y="350.50"></text></g><g><title>forward (thinc/layers/chain.py:54) (261 samples, 2.56%)</title><rect x="22.5344%" y="212" width="2.5639%" height="15" fill="rgb(210,31,22)"/><text x="22.7844%" y="222.50">fo..</text></g><g><title>__call__ (thinc/model.py:288) (260 samples, 2.55%)</title><rect x="22.5442%" y="228" width="2.5540%" height="15" fill="rgb(239,54,39)"/><text x="22.7942%" y="238.50">__..</text></g><g><title>forward (thinc/layers/with_array.py:30) (93 samples, 0.91%)</title><rect x="24.1847%" y="244" width="0.9136%" height="15" fill="rgb(230,99,41)"/><text x="24.4347%" y="254.50"></text></g><g><title>_ragged_forward (thinc/layers/with_array.py:90) (93 samples, 0.91%)</title><rect x="24.1847%" y="260" width="0.9136%" height="15" fill="rgb(253,106,12)"/><text x="24.4347%" y="270.50"></text></g><g><title>__call__ (thinc/model.py:288) (92 samples, 0.90%)</title><rect x="24.1945%" y="276" width="0.9037%" height="15" fill="rgb(213,46,41)"/><text x="24.4445%" y="286.50"></text></g><g><title>forward (thinc/layers/chain.py:54) (92 samples, 0.90%)</title><rect x="24.1945%" y="292" width="0.9037%" height="15" fill="rgb(215,133,35)"/><text x="24.4445%" y="302.50"></text></g><g><title>__call__ (thinc/model.py:288) (92 samples, 0.90%)</title><rect x="24.1945%" y="308" width="0.9037%" height="15" fill="rgb(213,28,5)"/><text x="24.4445%" y="318.50"></text></g><g><title>_mean (numpy/core/_methods.py:180) (11 samples, 0.11%)</title><rect x="25.5796%" y="452" width="0.1081%" height="15" fill="rgb(215,77,49)"/><text x="25.8296%" y="462.50"></text></g><g><title>_get_moments (thinc/layers/layernorm.py:76) (33 samples, 0.32%)</title><rect x="25.3733%" y="436" width="0.3242%" height="15" fill="rgb(248,100,22)"/><text x="25.6233%" y="446.50"></text></g><g><title>_var (numpy/core/_methods.py:243) (11 samples, 0.11%)</title><rect x="26.1395%" y="452" width="0.1081%" height="15" fill="rgb(208,67,9)"/><text x="26.3895%" y="462.50"></text></g><g><title>_get_moments (thinc/layers/layernorm.py:77) (66 samples, 0.65%)</title><rect x="25.6974%" y="436" width="0.6483%" height="15" fill="rgb(219,133,21)"/><text x="25.9474%" y="446.50"></text></g><g><title>forward (thinc/layers/layernorm.py:25) (112 samples, 1.10%)</title><rect x="25.3733%" y="420" width="1.1002%" height="15" fill="rgb(246,46,29)"/><text x="25.6233%" y="430.50"></text></g><g><title>_get_moments (thinc/layers/layernorm.py:78) (13 samples, 0.13%)</title><rect x="26.3458%" y="436" width="0.1277%" height="15" fill="rgb(246,185,52)"/><text x="26.5958%" y="446.50"></text></g><g><title>forward (thinc/layers/layernorm.py:27) (30 samples, 0.29%)</title><rect x="26.5619%" y="420" width="0.2947%" height="15" fill="rgb(252,136,11)"/><text x="26.8119%" y="430.50"></text></g><g><title>forward (thinc/layers/maxout.py:49) (185 samples, 1.82%)</title><rect x="26.9352%" y="420" width="1.8173%" height="15" fill="rgb(219,138,53)"/><text x="27.1852%" y="430.50">f..</text></g><g><title>forward (thinc/layers/maxout.py:50) (24 samples, 0.24%)</title><rect x="28.7525%" y="420" width="0.2358%" height="15" fill="rgb(211,51,23)"/><text x="29.0025%" y="430.50"></text></g><g><title>forward (thinc/layers/chain.py:54) (391 samples, 3.84%)</title><rect x="25.2947%" y="388" width="3.8409%" height="15" fill="rgb(247,221,28)"/><text x="25.5447%" y="398.50">forw..</text></g><g><title>__call__ (thinc/model.py:288) (386 samples, 3.79%)</title><rect x="25.3438%" y="404" width="3.7917%" height="15" fill="rgb(251,222,45)"/><text x="25.5938%" y="414.50">__ca..</text></g><g><title>forward (thinc/layers/chain.py:54) (397 samples, 3.90%)</title><rect x="25.2849%" y="356" width="3.8998%" height="15" fill="rgb(217,162,53)"/><text x="25.5349%" y="366.50">forw..</text></g><g><title>__call__ (thinc/model.py:288) (397 samples, 3.90%)</title><rect x="25.2849%" y="372" width="3.8998%" height="15" fill="rgb(229,93,14)"/><text x="25.5349%" y="382.50">__ca..</text></g><g><title>forward (thinc/layers/expand_window.py:23) (12 samples, 0.12%)</title><rect x="29.1945%" y="356" width="0.1179%" height="15" fill="rgb(209,67,49)"/><text x="29.4445%" y="366.50"></text></g><g><title>__call__ (thinc/model.py:288) (413 samples, 4.06%)</title><rect x="25.2652%" y="308" width="4.0570%" height="15" fill="rgb(213,87,29)"/><text x="25.5152%" y="318.50">__ca..</text></g><g><title>forward (thinc/layers/chain.py:54) (412 samples, 4.05%)</title><rect x="25.2750%" y="324" width="4.0472%" height="15" fill="rgb(205,151,52)"/><text x="25.5250%" y="334.50">forw..</text></g><g><title>__call__ (thinc/model.py:288) (411 samples, 4.04%)</title><rect x="25.2849%" y="340" width="4.0373%" height="15" fill="rgb(253,215,39)"/><text x="25.5349%" y="350.50">__ca..</text></g><g><title>forward (thinc/layers/residual.py:40) (414 samples, 4.07%)</title><rect x="25.2652%" y="292" width="4.0668%" height="15" fill="rgb(221,220,41)"/><text x="25.5152%" y="302.50">forw..</text></g><g><title>_list_forward (thinc/layers/with_array.py:76) (420 samples, 4.13%)</title><rect x="25.2259%" y="228" width="4.1257%" height="15" fill="rgb(218,133,21)"/><text x="25.4759%" y="238.50">_lis..</text></g><g><title>__call__ (thinc/model.py:288) (420 samples, 4.13%)</title><rect x="25.2259%" y="244" width="4.1257%" height="15" fill="rgb(221,193,43)"/><text x="25.4759%" y="254.50">__ca..</text></g><g><title>forward (thinc/layers/chain.py:54) (420 samples, 4.13%)</title><rect x="25.2259%" y="260" width="4.1257%" height="15" fill="rgb(240,128,52)"/><text x="25.4759%" y="270.50">forw..</text></g><g><title>__call__ (thinc/model.py:288) (419 samples, 4.12%)</title><rect x="25.2358%" y="276" width="4.1159%" height="15" fill="rgb(253,114,12)"/><text x="25.4858%" y="286.50">__ca..</text></g><g><title>forward (thinc/layers/chain.py:54) (704 samples, 6.92%)</title><rect x="22.5147%" y="180" width="6.9155%" height="15" fill="rgb(215,223,47)"/><text x="22.7647%" y="190.50">forward (..</text></g><g><title>__call__ (thinc/model.py:288) (704 samples, 6.92%)</title><rect x="22.5147%" y="196" width="6.9155%" height="15" fill="rgb(248,225,23)"/><text x="22.7647%" y="206.50">__call__ ..</text></g><g><title>forward (thinc/layers/with_array.py:40) (441 samples, 4.33%)</title><rect x="25.0982%" y="212" width="4.3320%" height="15" fill="rgb(250,108,0)"/><text x="25.3482%" y="222.50">forwa..</text></g><g><title>predict (spacy/pipeline/tok2vec.py:121) (715 samples, 7.02%)</title><rect x="22.4165%" y="148" width="7.0236%" height="15" fill="rgb(228,208,7)"/><text x="22.6665%" y="158.50">predict (..</text></g><g><title>predict (thinc/model.py:312) (714 samples, 7.01%)</title><rect x="22.4263%" y="164" width="7.0138%" height="15" fill="rgb(244,45,10)"/><text x="22.6763%" y="174.50">predict (..</text></g><g><title>forward (spacy/ml/_precomputable_affine.py:22) (45 samples, 0.44%)</title><rect x="29.9116%" y="196" width="0.4420%" height="15" fill="rgb(207,125,25)"/><text x="30.1616%" y="206.50"></text></g><g><title>forward (spacy/ml/_precomputable_affine.py:24) (27 samples, 0.27%)</title><rect x="30.3536%" y="196" width="0.2652%" height="15" fill="rgb(210,195,18)"/><text x="30.6036%" y="206.50"></text></g><g><title>vstack (&lt;__array_function__ internals&gt;:5) (19 samples, 0.19%)</title><rect x="30.4322%" y="212" width="0.1866%" height="15" fill="rgb(249,80,12)"/><text x="30.6822%" y="222.50"></text></g><g><title>forward (spacy_legacy/layers/staticvectors_v1.py:42) (15 samples, 0.15%)</title><rect x="30.7662%" y="340" width="0.1473%" height="15" fill="rgb(221,65,9)"/><text x="31.0162%" y="350.50"></text></g><g><title>&lt;listcomp&gt; (spacy_legacy/layers/staticvectors_v1.py:42) (15 samples, 0.15%)</title><rect x="30.7662%" y="356" width="0.1473%" height="15" fill="rgb(235,49,36)"/><text x="31.0162%" y="366.50"></text></g><g><title>forward (spacy_legacy/layers/staticvectors_v1.py:45) (18 samples, 0.18%)</title><rect x="30.9136%" y="340" width="0.1768%" height="15" fill="rgb(225,32,20)"/><text x="31.1636%" y="350.50"></text></g><g><title>forward (thinc/layers/hashembed.py:70) (13 samples, 0.13%)</title><rect x="31.5422%" y="500" width="0.1277%" height="15" fill="rgb(215,141,46)"/><text x="31.7922%" y="510.50"></text></g><g><title>forward (thinc/layers/hashembed.py:71) (23 samples, 0.23%)</title><rect x="31.6699%" y="500" width="0.2259%" height="15" fill="rgb(250,160,47)"/><text x="31.9199%" y="510.50"></text></g><g><title>_sum (numpy/core/_methods.py:47) (11 samples, 0.11%)</title><rect x="31.7878%" y="516" width="0.1081%" height="15" fill="rgb(216,222,40)"/><text x="32.0378%" y="526.50"></text></g><g><title>forward (thinc/layers/chain.py:54) (56 samples, 0.55%)</title><rect x="31.3556%" y="468" width="0.5501%" height="15" fill="rgb(234,217,39)"/><text x="31.6056%" y="478.50"></text></g><g><title>__call__ (thinc/model.py:288) (53 samples, 0.52%)</title><rect x="31.3851%" y="484" width="0.5206%" height="15" fill="rgb(207,178,40)"/><text x="31.6351%" y="494.50"></text></g><g><title>forward (thinc/layers/concatenate.py:44) (61 samples, 0.60%)</title><rect x="31.3261%" y="420" width="0.5992%" height="15" fill="rgb(221,136,13)"/><text x="31.5761%" y="430.50"></text></g><g><title>&lt;listcomp&gt; (thinc/layers/concatenate.py:44) (61 samples, 0.60%)</title><rect x="31.3261%" y="436" width="0.5992%" height="15" fill="rgb(249,199,10)"/><text x="31.5761%" y="446.50"></text></g><g><title>__call__ (thinc/model.py:288) (60 samples, 0.59%)</title><rect x="31.3360%" y="452" width="0.5894%" height="15" fill="rgb(249,222,13)"/><text x="31.5860%" y="462.50"></text></g><g><title>__call__ (thinc/model.py:288) (66 samples, 0.65%)</title><rect x="31.3261%" y="404" width="0.6483%" height="15" fill="rgb(244,185,38)"/><text x="31.5761%" y="414.50"></text></g><g><title>_ragged_forward (thinc/layers/with_array.py:90) (67 samples, 0.66%)</title><rect x="31.3261%" y="388" width="0.6582%" height="15" fill="rgb(236,202,9)"/><text x="31.5761%" y="398.50"></text></g><g><title>forward (thinc/layers/with_array.py:30) (68 samples, 0.67%)</title><rect x="31.3261%" y="372" width="0.6680%" height="15" fill="rgb(250,229,37)"/><text x="31.5761%" y="382.50"></text></g><g><title>forward (thinc/layers/concatenate.py:44) (138 samples, 1.36%)</title><rect x="30.6680%" y="292" width="1.3556%" height="15" fill="rgb(206,174,23)"/><text x="30.9180%" y="302.50"></text></g><g><title>&lt;listcomp&gt; (thinc/layers/concatenate.py:44) (136 samples, 1.34%)</title><rect x="30.6876%" y="308" width="1.3360%" height="15" fill="rgb(211,33,43)"/><text x="30.9376%" y="318.50"></text></g><g><title>__call__ (thinc/model.py:288) (135 samples, 1.33%)</title><rect x="30.6974%" y="324" width="1.3261%" height="15" fill="rgb(245,58,50)"/><text x="30.9474%" y="334.50"></text></g><g><title>forward (thinc/layers/chain.py:54) (89 samples, 0.87%)</title><rect x="31.1493%" y="340" width="0.8743%" height="15" fill="rgb(244,68,36)"/><text x="31.3993%" y="350.50"></text></g><g><title>__call__ (thinc/model.py:288) (87 samples, 0.85%)</title><rect x="31.1690%" y="356" width="0.8546%" height="15" fill="rgb(232,229,15)"/><text x="31.4190%" y="366.50"></text></g><g><title>_get_moments (thinc/layers/layernorm.py:77) (13 samples, 0.13%)</title><rect x="32.3379%" y="420" width="0.1277%" height="15" fill="rgb(254,30,23)"/><text x="32.5879%" y="430.50"></text></g><g><title>forward (thinc/layers/layernorm.py:25) (25 samples, 0.25%)</title><rect x="32.2397%" y="404" width="0.2456%" height="15" fill="rgb(235,160,14)"/><text x="32.4897%" y="414.50"></text></g><g><title>forward (thinc/layers/maxout.py:49) (45 samples, 0.44%)</title><rect x="32.5737%" y="404" width="0.4420%" height="15" fill="rgb(212,155,44)"/><text x="32.8237%" y="414.50"></text></g><g><title>forward (thinc/layers/chain.py:54) (92 samples, 0.90%)</title><rect x="32.2200%" y="372" width="0.9037%" height="15" fill="rgb(226,2,50)"/><text x="32.4700%" y="382.50"></text></g><g><title>__call__ (thinc/model.py:288) (90 samples, 0.88%)</title><rect x="32.2397%" y="388" width="0.8841%" height="15" fill="rgb(234,177,6)"/><text x="32.4897%" y="398.50"></text></g><g><title>_ragged_forward (thinc/layers/with_array.py:90) (96 samples, 0.94%)</title><rect x="32.1906%" y="308" width="0.9430%" height="15" fill="rgb(217,24,9)"/><text x="32.4406%" y="318.50"></text></g><g><title>__call__ (thinc/model.py:288) (95 samples, 0.93%)</title><rect x="32.2004%" y="324" width="0.9332%" height="15" fill="rgb(220,13,46)"/><text x="32.4504%" y="334.50"></text></g><g><title>forward (thinc/layers/chain.py:54) (94 samples, 0.92%)</title><rect x="32.2102%" y="340" width="0.9234%" height="15" fill="rgb(239,221,27)"/><text x="32.4602%" y="350.50"></text></g><g><title>__call__ (thinc/model.py:288) (94 samples, 0.92%)</title><rect x="32.2102%" y="356" width="0.9234%" height="15" fill="rgb(222,198,25)"/><text x="32.4602%" y="366.50"></text></g><g><title>forward (thinc/layers/chain.py:54) (254 samples, 2.50%)</title><rect x="30.6582%" y="260" width="2.4951%" height="15" fill="rgb(211,99,13)"/><text x="30.9082%" y="270.50">fo..</text></g><g><title>__call__ (thinc/model.py:288) (254 samples, 2.50%)</title><rect x="30.6582%" y="276" width="2.4951%" height="15" fill="rgb(232,111,31)"/><text x="30.9082%" y="286.50">__..</text></g><g><title>forward (thinc/layers/with_array.py:30) (99 samples, 0.97%)</title><rect x="32.1807%" y="292" width="0.9725%" height="15" fill="rgb(245,82,37)"/><text x="32.4307%" y="302.50"></text></g><g><title>_mean (numpy/core/_methods.py:178) (12 samples, 0.12%)</title><rect x="33.4971%" y="500" width="0.1179%" height="15" fill="rgb(227,149,46)"/><text x="33.7471%" y="510.50"></text></g><g><title>_get_moments (thinc/layers/layernorm.py:76) (31 samples, 0.30%)</title><rect x="33.3988%" y="484" width="0.3045%" height="15" fill="rgb(218,36,50)"/><text x="33.6488%" y="494.50"></text></g><g><title>_get_moments (thinc/layers/layernorm.py:77) (59 samples, 0.58%)</title><rect x="33.7033%" y="484" width="0.5796%" height="15" fill="rgb(226,80,48)"/><text x="33.9533%" y="494.50"></text></g><g><title>forward (thinc/layers/layernorm.py:25) (105 samples, 1.03%)</title><rect x="33.3694%" y="468" width="1.0314%" height="15" fill="rgb(238,224,15)"/><text x="33.6194%" y="478.50"></text></g><g><title>_get_moments (thinc/layers/layernorm.py:78) (12 samples, 0.12%)</title><rect x="34.2829%" y="484" width="0.1179%" height="15" fill="rgb(241,136,10)"/><text x="34.5329%" y="494.50"></text></g><g><title>forward (thinc/layers/maxout.py:49) (164 samples, 1.61%)</title><rect x="34.6660%" y="468" width="1.6110%" height="15" fill="rgb(208,32,45)"/><text x="34.9160%" y="478.50"></text></g><g><title>forward (thinc/layers/maxout.py:50) (11 samples, 0.11%)</title><rect x="36.2770%" y="468" width="0.1081%" height="15" fill="rgb(207,135,9)"/><text x="36.5270%" y="478.50"></text></g><g><title>forward (thinc/layers/maxout.py:52) (16 samples, 0.16%)</title><rect x="36.3949%" y="468" width="0.1572%" height="15" fill="rgb(206,86,44)"/><text x="36.6449%" y="478.50"></text></g><g><title>forward (thinc/layers/chain.py:54) (330 samples, 3.24%)</title><rect x="33.3202%" y="436" width="3.2417%" height="15" fill="rgb(245,177,15)"/><text x="33.5702%" y="446.50">for..</text></g><g><title>__call__ (thinc/model.py:288) (327 samples, 3.21%)</title><rect x="33.3497%" y="452" width="3.2122%" height="15" fill="rgb(206,64,50)"/><text x="33.5997%" y="462.50">__c..</text></g><g><title>forward (thinc/layers/chain.py:54) (333 samples, 3.27%)</title><rect x="33.3104%" y="404" width="3.2711%" height="15" fill="rgb(234,36,40)"/><text x="33.5604%" y="414.50">for..</text></g><g><title>__call__ (thinc/model.py:288) (333 samples, 3.27%)</title><rect x="33.3104%" y="420" width="3.2711%" height="15" fill="rgb(213,64,8)"/><text x="33.5604%" y="430.50">__c..</text></g><g><title>__call__ (thinc/model.py:288) (345 samples, 3.39%)</title><rect x="33.2809%" y="356" width="3.3890%" height="15" fill="rgb(210,75,36)"/><text x="33.5309%" y="366.50">__c..</text></g><g><title>forward (thinc/layers/chain.py:54) (343 samples, 3.37%)</title><rect x="33.3006%" y="372" width="3.3694%" height="15" fill="rgb(229,88,21)"/><text x="33.5506%" y="382.50">for..</text></g><g><title>__call__ (thinc/model.py:288) (343 samples, 3.37%)</title><rect x="33.3006%" y="388" width="3.3694%" height="15" fill="rgb(252,204,47)"/><text x="33.5506%" y="398.50">__c..</text></g><g><title>forward (thinc/layers/residual.py:40) (348 samples, 3.42%)</title><rect x="33.2613%" y="340" width="3.4185%" height="15" fill="rgb(208,77,27)"/><text x="33.5113%" y="350.50">for..</text></g><g><title>forward (thinc/layers/chain.py:54) (354 samples, 3.48%)</title><rect x="33.2515%" y="308" width="3.4774%" height="15" fill="rgb(221,76,26)"/><text x="33.5015%" y="318.50">for..</text></g><g><title>__call__ (thinc/model.py:288) (354 samples, 3.48%)</title><rect x="33.2515%" y="324" width="3.4774%" height="15" fill="rgb(225,139,18)"/><text x="33.5015%" y="334.50">__c..</text></g><g><title>_list_forward (thinc/layers/with_array.py:76) (356 samples, 3.50%)</title><rect x="33.2417%" y="276" width="3.4971%" height="15" fill="rgb(230,137,11)"/><text x="33.4917%" y="286.50">_li..</text></g><g><title>__call__ (thinc/model.py:288) (356 samples, 3.50%)</title><rect x="33.2417%" y="292" width="3.4971%" height="15" fill="rgb(212,28,1)"/><text x="33.4917%" y="302.50">__c..</text></g><g><title>forward (thinc/layers/chain.py:54) (623 samples, 6.12%)</title><rect x="30.6582%" y="228" width="6.1198%" height="15" fill="rgb(248,164,17)"/><text x="30.9082%" y="238.50">forward ..</text></g><g><title>__call__ (thinc/model.py:288) (623 samples, 6.12%)</title><rect x="30.6582%" y="244" width="6.1198%" height="15" fill="rgb(222,171,42)"/><text x="30.9082%" y="254.50">__call__..</text></g><g><title>forward (thinc/layers/with_array.py:40) (369 samples, 3.62%)</title><rect x="33.1532%" y="260" width="3.6248%" height="15" fill="rgb(243,84,45)"/><text x="33.4032%" y="270.50">forw..</text></g><g><title>forward (thinc/layers/linear.py:35) (24 samples, 0.24%)</title><rect x="36.8369%" y="228" width="0.2358%" height="15" fill="rgb(252,49,23)"/><text x="37.0869%" y="238.50"></text></g><g><title>forward (thinc/layers/list2array.py:22) (12 samples, 0.12%)</title><rect x="37.0923%" y="228" width="0.1179%" height="15" fill="rgb(215,19,7)"/><text x="37.3423%" y="238.50"></text></g><g><title>asarray1i (thinc/backends/ops.py:514) (11 samples, 0.11%)</title><rect x="37.1022%" y="244" width="0.1081%" height="15" fill="rgb(238,81,41)"/><text x="37.3522%" y="254.50"></text></g><g><title>forward (thinc/layers/chain.py:54) (675 samples, 6.63%)</title><rect x="30.6189%" y="196" width="6.6306%" height="15" fill="rgb(210,199,37)"/><text x="30.8689%" y="206.50">forward (..</text></g><g><title>__call__ (thinc/model.py:288) (675 samples, 6.63%)</title><rect x="30.6189%" y="212" width="6.6306%" height="15" fill="rgb(244,192,49)"/><text x="30.8689%" y="222.50">__call__ ..</text></g><g><title>__call__ (thinc/model.py:288) (752 samples, 7.39%)</title><rect x="29.8723%" y="180" width="7.3870%" height="15" fill="rgb(226,211,11)"/><text x="30.1223%" y="190.50">__call__ (..</text></g><g><title>forward (spacy/ml/tb_framework.py:31) (796 samples, 7.82%)</title><rect x="29.5776%" y="164" width="7.8193%" height="15" fill="rgb(236,162,54)"/><text x="29.8276%" y="174.50">forward (sp..</text></g><g><title>affine (thinc/backends/ops.py:209) (11 samples, 0.11%)</title><rect x="37.5246%" y="260" width="0.1081%" height="15" fill="rgb(220,229,9)"/><text x="37.7746%" y="270.50"></text></g><g><title>forward (thinc/layers/softmax.py:34) (13 samples, 0.13%)</title><rect x="37.5147%" y="244" width="0.1277%" height="15" fill="rgb(250,87,22)"/><text x="37.7647%" y="254.50"></text></g><g><title>_list_forward (thinc/layers/with_array.py:76) (24 samples, 0.24%)</title><rect x="37.5049%" y="212" width="0.2358%" height="15" fill="rgb(239,43,17)"/><text x="37.7549%" y="222.50"></text></g><g><title>__call__ (thinc/model.py:288) (24 samples, 0.24%)</title><rect x="37.5049%" y="228" width="0.2358%" height="15" fill="rgb(231,177,25)"/><text x="37.7549%" y="238.50"></text></g><g><title>predict (thinc/model.py:312) (838 samples, 8.23%)</title><rect x="29.5776%" y="148" width="8.2318%" height="15" fill="rgb(219,179,1)"/><text x="29.8276%" y="158.50">predict (th..</text></g><g><title>forward (thinc/layers/chain.py:54) (40 samples, 0.39%)</title><rect x="37.4165%" y="164" width="0.3929%" height="15" fill="rgb(238,219,53)"/><text x="37.6665%" y="174.50"></text></g><g><title>__call__ (thinc/model.py:288) (38 samples, 0.37%)</title><rect x="37.4361%" y="180" width="0.3733%" height="15" fill="rgb(232,167,36)"/><text x="37.6861%" y="190.50"></text></g><g><title>forward (thinc/layers/with_array.py:40) (37 samples, 0.36%)</title><rect x="37.4460%" y="196" width="0.3635%" height="15" fill="rgb(244,19,51)"/><text x="37.6960%" y="206.50"></text></g><g><title>set_dropout_rate (thinc/model.py:765) (15 samples, 0.15%)</title><rect x="37.8389%" y="148" width="0.1473%" height="15" fill="rgb(224,6,22)"/><text x="38.0889%" y="158.50"></text></g><g><title>Similarity_between_words (SemanticText.py:178) (1,782 samples, 17.50%)</title><rect x="20.5992%" y="116" width="17.5049%" height="15" fill="rgb(224,145,5)"/><text x="20.8492%" y="126.50">Similarity_between_words (S..</text></g><g><title>__call__ (spacy/language.py:995) (1,742 samples, 17.11%)</title><rect x="20.9921%" y="132" width="17.1120%" height="15" fill="rgb(234,130,49)"/><text x="21.2421%" y="142.50">__call__ (spacy/language.py..</text></g><g><title>__call__ (spacy/language.py:983) (17 samples, 0.17%)</title><rect x="38.1139%" y="132" width="0.1670%" height="15" fill="rgb(254,6,2)"/><text x="38.3639%" y="142.50"></text></g><g><title>make_doc (spacy/language.py:1065) (16 samples, 0.16%)</title><rect x="38.1238%" y="148" width="0.1572%" height="15" fill="rgb(208,96,46)"/><text x="38.3738%" y="158.50"></text></g><g><title>match (spacy/pipeline/attributeruler.py:108) (11 samples, 0.11%)</title><rect x="39.3320%" y="164" width="0.1081%" height="15" fill="rgb(239,3,39)"/><text x="39.5820%" y="174.50"></text></g><g><title>__call__ (spacy/pipeline/attributeruler.py:101) (16 samples, 0.16%)</title><rect x="39.3320%" y="148" width="0.1572%" height="15" fill="rgb(233,210,1)"/><text x="39.5820%" y="158.50"></text></g><g><title>forward (spacy_legacy/layers/staticvectors_v1.py:42) (19 samples, 0.19%)</title><rect x="39.8625%" y="292" width="0.1866%" height="15" fill="rgb(244,137,37)"/><text x="40.1125%" y="302.50"></text></g><g><title>&lt;listcomp&gt; (spacy_legacy/layers/staticvectors_v1.py:42) (18 samples, 0.18%)</title><rect x="39.8723%" y="308" width="0.1768%" height="15" fill="rgb(240,136,2)"/><text x="40.1223%" y="318.50"></text></g><g><title>forward (spacy_legacy/layers/staticvectors_v1.py:45) (18 samples, 0.18%)</title><rect x="40.0491%" y="292" width="0.1768%" height="15" fill="rgb(239,18,37)"/><text x="40.2991%" y="302.50"></text></g><g><title>forward (thinc/layers/hashembed.py:71) (19 samples, 0.19%)</title><rect x="40.6974%" y="452" width="0.1866%" height="15" fill="rgb(218,185,22)"/><text x="40.9474%" y="462.50"></text></g><g><title>forward (thinc/layers/concatenate.py:44) (47 samples, 0.46%)</title><rect x="40.4322%" y="372" width="0.4617%" height="15" fill="rgb(225,218,4)"/><text x="40.6822%" y="382.50"></text></g><g><title>&lt;listcomp&gt; (thinc/layers/concatenate.py:44) (45 samples, 0.44%)</title><rect x="40.4519%" y="388" width="0.4420%" height="15" fill="rgb(230,182,32)"/><text x="40.7019%" y="398.50"></text></g><g><title>__call__ (thinc/model.py:288) (44 samples, 0.43%)</title><rect x="40.4617%" y="404" width="0.4322%" height="15" fill="rgb(242,56,43)"/><text x="40.7117%" y="414.50"></text></g><g><title>forward (thinc/layers/chain.py:54) (43 samples, 0.42%)</title><rect x="40.4715%" y="420" width="0.4224%" height="15" fill="rgb(233,99,24)"/><text x="40.7215%" y="430.50"></text></g><g><title>__call__ (thinc/model.py:288) (41 samples, 0.40%)</title><rect x="40.4912%" y="436" width="0.4028%" height="15" fill="rgb(234,209,42)"/><text x="40.7412%" y="446.50"></text></g><g><title>_array_forward (thinc/layers/concatenate.py:57) (11 samples, 0.11%)</title><rect x="40.9037%" y="388" width="0.1081%" height="15" fill="rgb(227,7,12)"/><text x="41.1537%" y="398.50"></text></g><g><title>__call__ (thinc/model.py:288) (60 samples, 0.59%)</title><rect x="40.4322%" y="356" width="0.5894%" height="15" fill="rgb(245,203,43)"/><text x="40.6822%" y="366.50"></text></g><g><title>forward (thinc/layers/concatenate.py:50) (13 samples, 0.13%)</title><rect x="40.8939%" y="372" width="0.1277%" height="15" fill="rgb(238,205,33)"/><text x="41.1439%" y="382.50"></text></g><g><title>_ragged_forward (thinc/layers/with_array.py:90) (63 samples, 0.62%)</title><rect x="40.4322%" y="340" width="0.6189%" height="15" fill="rgb(231,56,7)"/><text x="40.6822%" y="350.50"></text></g><g><title>forward (thinc/layers/with_array.py:30) (66 samples, 0.65%)</title><rect x="40.4224%" y="324" width="0.6483%" height="15" fill="rgb(244,186,29)"/><text x="40.6724%" y="334.50"></text></g><g><title>forward (thinc/layers/concatenate.py:44) (135 samples, 1.33%)</title><rect x="39.7544%" y="244" width="1.3261%" height="15" fill="rgb(234,111,31)"/><text x="40.0044%" y="254.50"></text></g><g><title>&lt;listcomp&gt; (thinc/layers/concatenate.py:44) (134 samples, 1.32%)</title><rect x="39.7642%" y="260" width="1.3163%" height="15" fill="rgb(241,149,10)"/><text x="40.0142%" y="270.50"></text></g><g><title>__call__ (thinc/model.py:288) (132 samples, 1.30%)</title><rect x="39.7839%" y="276" width="1.2967%" height="15" fill="rgb(249,206,44)"/><text x="40.0339%" y="286.50"></text></g><g><title>forward (thinc/layers/chain.py:54) (81 samples, 0.80%)</title><rect x="40.2849%" y="292" width="0.7957%" height="15" fill="rgb(251,153,30)"/><text x="40.5349%" y="302.50"></text></g><g><title>__call__ (thinc/model.py:288) (81 samples, 0.80%)</title><rect x="40.2849%" y="308" width="0.7957%" height="15" fill="rgb(239,152,38)"/><text x="40.5349%" y="318.50"></text></g><g><title>_get_moments (thinc/layers/layernorm.py:76) (17 samples, 0.17%)</title><rect x="41.1984%" y="372" width="0.1670%" height="15" fill="rgb(249,139,47)"/><text x="41.4484%" y="382.50"></text></g><g><title>_get_moments (thinc/layers/layernorm.py:77) (19 samples, 0.19%)</title><rect x="41.3654%" y="372" width="0.1866%" height="15" fill="rgb(244,64,35)"/><text x="41.6154%" y="382.50"></text></g><g><title>forward (thinc/layers/layernorm.py:25) (40 samples, 0.39%)</title><rect x="41.1984%" y="356" width="0.3929%" height="15" fill="rgb(216,46,15)"/><text x="41.4484%" y="366.50"></text></g><g><title>forward (thinc/layers/maxout.py:49) (57 samples, 0.56%)</title><rect x="41.6601%" y="356" width="0.5599%" height="15" fill="rgb(250,74,19)"/><text x="41.9101%" y="366.50"></text></g><g><title>forward (thinc/layers/chain.py:54) (115 samples, 1.13%)</title><rect x="41.1788%" y="324" width="1.1297%" height="15" fill="rgb(249,42,33)"/><text x="41.4288%" y="334.50"></text></g><g><title>__call__ (thinc/model.py:288) (113 samples, 1.11%)</title><rect x="41.1984%" y="340" width="1.1100%" height="15" fill="rgb(242,149,17)"/><text x="41.4484%" y="350.50"></text></g><g><title>forward (thinc/layers/chain.py:54) (119 samples, 1.17%)</title><rect x="41.1690%" y="292" width="1.1690%" height="15" fill="rgb(244,29,21)"/><text x="41.4190%" y="302.50"></text></g><g><title>__call__ (thinc/model.py:288) (119 samples, 1.17%)</title><rect x="41.1690%" y="308" width="1.1690%" height="15" fill="rgb(220,130,37)"/><text x="41.4190%" y="318.50"></text></g><g><title>_ragged_forward (thinc/layers/with_array.py:90) (120 samples, 1.18%)</title><rect x="41.1690%" y="260" width="1.1788%" height="15" fill="rgb(211,67,2)"/><text x="41.4190%" y="270.50"></text></g><g><title>__call__ (thinc/model.py:288) (120 samples, 1.18%)</title><rect x="41.1690%" y="276" width="1.1788%" height="15" fill="rgb(235,68,52)"/><text x="41.4190%" y="286.50"></text></g><g><title>forward (thinc/layers/with_array.py:30) (122 samples, 1.20%)</title><rect x="41.1591%" y="244" width="1.1984%" height="15" fill="rgb(246,142,3)"/><text x="41.4091%" y="254.50"></text></g><g><title>forward (thinc/layers/chain.py:54) (266 samples, 2.61%)</title><rect x="39.7544%" y="212" width="2.6130%" height="15" fill="rgb(241,25,7)"/><text x="40.0044%" y="222.50">fo..</text></g><g><title>__call__ (thinc/model.py:288) (266 samples, 2.61%)</title><rect x="39.7544%" y="228" width="2.6130%" height="15" fill="rgb(242,119,39)"/><text x="40.0044%" y="238.50">__..</text></g><g><title>_mean (numpy/core/_methods.py:166) (13 samples, 0.13%)</title><rect x="42.6228%" y="452" width="0.1277%" height="15" fill="rgb(241,98,45)"/><text x="42.8728%" y="462.50"></text></g><g><title>_get_moments (thinc/layers/layernorm.py:76) (34 samples, 0.33%)</title><rect x="42.5933%" y="436" width="0.3340%" height="15" fill="rgb(254,28,30)"/><text x="42.8433%" y="446.50"></text></g><g><title>_var (numpy/core/_methods.py:229) (12 samples, 0.12%)</title><rect x="43.1925%" y="452" width="0.1179%" height="15" fill="rgb(241,142,54)"/><text x="43.4425%" y="462.50"></text></g><g><title>_get_moments (thinc/layers/layernorm.py:77) (64 samples, 0.63%)</title><rect x="42.9273%" y="436" width="0.6287%" height="15" fill="rgb(222,85,15)"/><text x="43.1773%" y="446.50"></text></g><g><title>forward (thinc/layers/layernorm.py:25) (108 samples, 1.06%)</title><rect x="42.5835%" y="420" width="1.0609%" height="15" fill="rgb(210,85,47)"/><text x="42.8335%" y="430.50"></text></g><g><title>forward (thinc/layers/layernorm.py:26) (12 samples, 0.12%)</title><rect x="43.6444%" y="420" width="0.1179%" height="15" fill="rgb(224,206,25)"/><text x="43.8944%" y="430.50"></text></g><g><title>forward (thinc/layers/maxout.py:49) (144 samples, 1.41%)</title><rect x="43.9489%" y="420" width="1.4145%" height="15" fill="rgb(243,201,19)"/><text x="44.1989%" y="430.50"></text></g><g><title>forward (thinc/layers/maxout.py:50) (14 samples, 0.14%)</title><rect x="45.3635%" y="420" width="0.1375%" height="15" fill="rgb(236,59,4)"/><text x="45.6135%" y="430.50"></text></g><g><title>forward (thinc/layers/maxout.py:52) (15 samples, 0.15%)</title><rect x="45.5403%" y="420" width="0.1473%" height="15" fill="rgb(254,179,45)"/><text x="45.7903%" y="430.50"></text></g><g><title>forward (thinc/layers/chain.py:54) (323 samples, 3.17%)</title><rect x="42.5442%" y="388" width="3.1729%" height="15" fill="rgb(226,14,10)"/><text x="42.7942%" y="398.50">for..</text></g><g><title>__call__ (thinc/model.py:288) (322 samples, 3.16%)</title><rect x="42.5540%" y="404" width="3.1631%" height="15" fill="rgb(244,27,41)"/><text x="42.8040%" y="414.50">__c..</text></g><g><title>forward (thinc/layers/chain.py:54) (335 samples, 3.29%)</title><rect x="42.5344%" y="356" width="3.2908%" height="15" fill="rgb(235,35,32)"/><text x="42.7844%" y="366.50">for..</text></g><g><title>__call__ (thinc/model.py:288) (335 samples, 3.29%)</title><rect x="42.5344%" y="372" width="3.2908%" height="15" fill="rgb(218,68,31)"/><text x="42.7844%" y="382.50">__c..</text></g><g><title>forward (thinc/layers/chain.py:54) (356 samples, 3.50%)</title><rect x="42.5147%" y="324" width="3.4971%" height="15" fill="rgb(207,120,37)"/><text x="42.7647%" y="334.50">for..</text></g><g><title>__call__ (thinc/model.py:288) (356 samples, 3.50%)</title><rect x="42.5147%" y="340" width="3.4971%" height="15" fill="rgb(227,98,0)"/><text x="42.7647%" y="350.50">__c..</text></g><g><title>forward (thinc/layers/expand_window.py:23) (19 samples, 0.19%)</title><rect x="45.8251%" y="356" width="0.1866%" height="15" fill="rgb(207,7,3)"/><text x="46.0751%" y="366.50"></text></g><g><title>forward (thinc/layers/residual.py:40) (363 samples, 3.57%)</title><rect x="42.4656%" y="292" width="3.5658%" height="15" fill="rgb(206,98,19)"/><text x="42.7156%" y="302.50">forw..</text></g><g><title>__call__ (thinc/model.py:288) (362 samples, 3.56%)</title><rect x="42.4754%" y="308" width="3.5560%" height="15" fill="rgb(217,5,26)"/><text x="42.7254%" y="318.50">__ca..</text></g><g><title>_list_forward (thinc/layers/with_array.py:76) (370 samples, 3.63%)</title><rect x="42.4361%" y="228" width="3.6346%" height="15" fill="rgb(235,190,38)"/><text x="42.6861%" y="238.50">_lis..</text></g><g><title>__call__ (thinc/model.py:288) (369 samples, 3.62%)</title><rect x="42.4460%" y="244" width="3.6248%" height="15" fill="rgb(247,86,24)"/><text x="42.6960%" y="254.50">__ca..</text></g><g><title>forward (thinc/layers/chain.py:54) (369 samples, 3.62%)</title><rect x="42.4460%" y="260" width="3.6248%" height="15" fill="rgb(205,101,16)"/><text x="42.6960%" y="270.50">forw..</text></g><g><title>__call__ (thinc/model.py:288) (368 samples, 3.61%)</title><rect x="42.4558%" y="276" width="3.6149%" height="15" fill="rgb(246,168,33)"/><text x="42.7058%" y="286.50">__ca..</text></g><g><title>forward (thinc/layers/chain.py:54) (661 samples, 6.49%)</title><rect x="39.7446%" y="180" width="6.4931%" height="15" fill="rgb(231,114,1)"/><text x="39.9946%" y="190.50">forward (..</text></g><g><title>__call__ (thinc/model.py:288) (660 samples, 6.48%)</title><rect x="39.7544%" y="196" width="6.4833%" height="15" fill="rgb(207,184,53)"/><text x="40.0044%" y="206.50">__call__..</text></g><g><title>forward (thinc/layers/with_array.py:40) (394 samples, 3.87%)</title><rect x="42.3674%" y="212" width="3.8703%" height="15" fill="rgb(224,95,51)"/><text x="42.6174%" y="222.50">forw..</text></g><g><title>predict (spacy/pipeline/tok2vec.py:121) (675 samples, 6.63%)</title><rect x="39.6169%" y="148" width="6.6306%" height="15" fill="rgb(212,188,45)"/><text x="39.8669%" y="158.50">predict (..</text></g><g><title>predict (thinc/model.py:312) (674 samples, 6.62%)</title><rect x="39.6267%" y="164" width="6.6208%" height="15" fill="rgb(223,154,38)"/><text x="39.8767%" y="174.50">predict (..</text></g><g><title>forward (spacy/ml/_precomputable_affine.py:22) (40 samples, 0.39%)</title><rect x="46.6306%" y="196" width="0.3929%" height="15" fill="rgb(251,22,52)"/><text x="46.8806%" y="206.50"></text></g><g><title>forward (spacy/ml/_precomputable_affine.py:24) (13 samples, 0.13%)</title><rect x="47.0432%" y="196" width="0.1277%" height="15" fill="rgb(229,209,22)"/><text x="47.2932%" y="206.50"></text></g><g><title>forward (spacy_legacy/layers/staticvectors_v1.py:42) (16 samples, 0.16%)</title><rect x="47.4263%" y="340" width="0.1572%" height="15" fill="rgb(234,138,34)"/><text x="47.6763%" y="350.50"></text></g><g><title>&lt;listcomp&gt; (spacy_legacy/layers/staticvectors_v1.py:42) (16 samples, 0.16%)</title><rect x="47.4263%" y="356" width="0.1572%" height="15" fill="rgb(212,95,11)"/><text x="47.6763%" y="366.50"></text></g><g><title>forward (spacy_legacy/layers/staticvectors_v1.py:45) (15 samples, 0.15%)</title><rect x="47.5835%" y="340" width="0.1473%" height="15" fill="rgb(240,179,47)"/><text x="47.8335%" y="350.50"></text></g><g><title>forward (thinc/layers/concatenate.py:44) (51 samples, 0.50%)</title><rect x="47.9764%" y="420" width="0.5010%" height="15" fill="rgb(240,163,11)"/><text x="48.2264%" y="430.50"></text></g><g><title>&lt;listcomp&gt; (thinc/layers/concatenate.py:44) (48 samples, 0.47%)</title><rect x="48.0059%" y="436" width="0.4715%" height="15" fill="rgb(236,37,12)"/><text x="48.2559%" y="446.50"></text></g><g><title>__call__ (thinc/model.py:288) (47 samples, 0.46%)</title><rect x="48.0157%" y="452" width="0.4617%" height="15" fill="rgb(232,164,16)"/><text x="48.2657%" y="462.50"></text></g><g><title>forward (thinc/layers/chain.py:54) (44 samples, 0.43%)</title><rect x="48.0452%" y="468" width="0.4322%" height="15" fill="rgb(244,205,15)"/><text x="48.2952%" y="478.50"></text></g><g><title>__call__ (thinc/model.py:288) (43 samples, 0.42%)</title><rect x="48.0550%" y="484" width="0.4224%" height="15" fill="rgb(223,117,47)"/><text x="48.3050%" y="494.50"></text></g><g><title>forward (thinc/layers/hashembed.py:71) (19 samples, 0.19%)</title><rect x="48.2908%" y="500" width="0.1866%" height="15" fill="rgb(244,107,35)"/><text x="48.5408%" y="510.50"></text></g><g><title>__call__ (thinc/model.py:288) (55 samples, 0.54%)</title><rect x="47.9764%" y="404" width="0.5403%" height="15" fill="rgb(205,140,8)"/><text x="48.2264%" y="414.50"></text></g><g><title>_ragged_forward (thinc/layers/with_array.py:90) (56 samples, 0.55%)</title><rect x="47.9764%" y="388" width="0.5501%" height="15" fill="rgb(228,84,46)"/><text x="48.2264%" y="398.50"></text></g><g><title>forward (thinc/layers/with_array.py:30) (58 samples, 0.57%)</title><rect x="47.9764%" y="372" width="0.5697%" height="15" fill="rgb(254,188,9)"/><text x="48.2264%" y="382.50"></text></g><g><title>forward (thinc/layers/chain.py:54) (82 samples, 0.81%)</title><rect x="47.7701%" y="340" width="0.8055%" height="15" fill="rgb(206,112,54)"/><text x="48.0201%" y="350.50"></text></g><g><title>__call__ (thinc/model.py:288) (80 samples, 0.79%)</title><rect x="47.7898%" y="356" width="0.7859%" height="15" fill="rgb(216,84,49)"/><text x="48.0398%" y="366.50"></text></g><g><title>forward (thinc/layers/concatenate.py:44) (127 samples, 1.25%)</title><rect x="47.3379%" y="292" width="1.2475%" height="15" fill="rgb(214,194,35)"/><text x="47.5879%" y="302.50"></text></g><g><title>&lt;listcomp&gt; (thinc/layers/concatenate.py:44) (126 samples, 1.24%)</title><rect x="47.3477%" y="308" width="1.2377%" height="15" fill="rgb(249,28,3)"/><text x="47.5977%" y="318.50"></text></g><g><title>__call__ (thinc/model.py:288) (126 samples, 1.24%)</title><rect x="47.3477%" y="324" width="1.2377%" height="15" fill="rgb(222,56,52)"/><text x="47.5977%" y="334.50"></text></g><g><title>_get_moments (thinc/layers/layernorm.py:76) (19 samples, 0.19%)</title><rect x="48.7623%" y="420" width="0.1866%" height="15" fill="rgb(245,217,50)"/><text x="49.0123%" y="430.50"></text></g><g><title>_get_moments (thinc/layers/layernorm.py:77) (20 samples, 0.20%)</title><rect x="48.9489%" y="420" width="0.1965%" height="15" fill="rgb(213,201,24)"/><text x="49.1989%" y="430.50"></text></g><g><title>forward (thinc/layers/layernorm.py:25) (46 samples, 0.45%)</title><rect x="48.7623%" y="404" width="0.4519%" height="15" fill="rgb(248,116,28)"/><text x="49.0123%" y="414.50"></text></g><g><title>forward (thinc/layers/maxout.py:49) (42 samples, 0.41%)</title><rect x="49.3124%" y="404" width="0.4126%" height="15" fill="rgb(219,72,43)"/><text x="49.5624%" y="414.50"></text></g><g><title>forward (thinc/layers/chain.py:54) (111 samples, 1.09%)</title><rect x="48.7132%" y="372" width="1.0904%" height="15" fill="rgb(209,138,14)"/><text x="48.9632%" y="382.50"></text></g><g><title>__call__ (thinc/model.py:288) (108 samples, 1.06%)</title><rect x="48.7426%" y="388" width="1.0609%" height="15" fill="rgb(222,18,33)"/><text x="48.9926%" y="398.50"></text></g><g><title>__call__ (thinc/model.py:288) (115 samples, 1.13%)</title><rect x="48.6837%" y="324" width="1.1297%" height="15" fill="rgb(213,199,7)"/><text x="48.9337%" y="334.50"></text></g><g><title>forward (thinc/layers/chain.py:54) (115 samples, 1.13%)</title><rect x="48.6837%" y="340" width="1.1297%" height="15" fill="rgb(250,110,10)"/><text x="48.9337%" y="350.50"></text></g><g><title>__call__ (thinc/model.py:288) (114 samples, 1.12%)</title><rect x="48.6935%" y="356" width="1.1198%" height="15" fill="rgb(248,123,6)"/><text x="48.9435%" y="366.50"></text></g><g><title>_ragged_forward (thinc/layers/with_array.py:90) (117 samples, 1.15%)</title><rect x="48.6739%" y="308" width="1.1493%" height="15" fill="rgb(206,91,31)"/><text x="48.9239%" y="318.50"></text></g><g><title>forward (thinc/layers/chain.py:54) (257 samples, 2.52%)</title><rect x="47.3379%" y="260" width="2.5246%" height="15" fill="rgb(211,154,13)"/><text x="47.5879%" y="270.50">fo..</text></g><g><title>__call__ (thinc/model.py:288) (257 samples, 2.52%)</title><rect x="47.3379%" y="276" width="2.5246%" height="15" fill="rgb(225,148,7)"/><text x="47.5879%" y="286.50">__..</text></g><g><title>forward (thinc/layers/with_array.py:30) (122 samples, 1.20%)</title><rect x="48.6640%" y="292" width="1.1984%" height="15" fill="rgb(220,160,43)"/><text x="48.9140%" y="302.50"></text></g><g><title>_mean (numpy/core/_methods.py:166) (11 samples, 0.11%)</title><rect x="50.1473%" y="500" width="0.1081%" height="15" fill="rgb(213,52,39)"/><text x="50.3973%" y="510.50"></text></g><g><title>_get_moments (thinc/layers/layernorm.py:76) (39 samples, 0.38%)</title><rect x="50.1081%" y="484" width="0.3831%" height="15" fill="rgb(243,137,7)"/><text x="50.3581%" y="494.50"></text></g><g><title>_mean (numpy/core/_methods.py:180) (11 samples, 0.11%)</title><rect x="50.3831%" y="500" width="0.1081%" height="15" fill="rgb(230,79,13)"/><text x="50.6331%" y="510.50"></text></g><g><title>_get_moments (thinc/layers/layernorm.py:77) (56 samples, 0.55%)</title><rect x="50.4912%" y="484" width="0.5501%" height="15" fill="rgb(247,105,23)"/><text x="50.7412%" y="494.50"></text></g><g><title>forward (thinc/layers/layernorm.py:25) (107 samples, 1.05%)</title><rect x="50.1081%" y="468" width="1.0511%" height="15" fill="rgb(223,179,41)"/><text x="50.3581%" y="478.50"></text></g><g><title>_get_moments (thinc/layers/layernorm.py:78) (12 samples, 0.12%)</title><rect x="51.0413%" y="484" width="0.1179%" height="15" fill="rgb(218,9,34)"/><text x="51.2913%" y="494.50"></text></g><g><title>asarray_f (thinc/backends/ops.py:509) (11 samples, 0.11%)</title><rect x="51.0511%" y="500" width="0.1081%" height="15" fill="rgb(222,106,8)"/><text x="51.3011%" y="510.50"></text></g><g><title>forward (thinc/layers/layernorm.py:26) (12 samples, 0.12%)</title><rect x="51.1591%" y="468" width="0.1179%" height="15" fill="rgb(211,220,0)"/><text x="51.4091%" y="478.50"></text></g><g><title>forward (thinc/layers/layernorm.py:27) (21 samples, 0.21%)</title><rect x="51.2770%" y="468" width="0.2063%" height="15" fill="rgb(229,52,16)"/><text x="51.5270%" y="478.50"></text></g><g><title>forward (thinc/layers/maxout.py:49) (170 samples, 1.67%)</title><rect x="51.6110%" y="468" width="1.6699%" height="15" fill="rgb(212,155,18)"/><text x="51.8610%" y="478.50"></text></g><g><title>forward (thinc/layers/maxout.py:50) (24 samples, 0.24%)</title><rect x="53.2809%" y="468" width="0.2358%" height="15" fill="rgb(242,21,14)"/><text x="53.5309%" y="478.50"></text></g><g><title>forward (thinc/layers/maxout.py:52) (20 samples, 0.20%)</title><rect x="53.5265%" y="468" width="0.1965%" height="15" fill="rgb(222,19,48)"/><text x="53.7765%" y="478.50"></text></g><g><title>forward (thinc/layers/chain.py:54) (373 samples, 3.66%)</title><rect x="50.0786%" y="436" width="3.6640%" height="15" fill="rgb(232,45,27)"/><text x="50.3286%" y="446.50">forw..</text></g><g><title>__call__ (thinc/model.py:288) (372 samples, 3.65%)</title><rect x="50.0884%" y="452" width="3.6542%" height="15" fill="rgb(249,103,42)"/><text x="50.3384%" y="462.50">__ca..</text></g><g><title>forward (thinc/layers/chain.py:54) (381 samples, 3.74%)</title><rect x="50.0589%" y="404" width="3.7426%" height="15" fill="rgb(246,81,33)"/><text x="50.3089%" y="414.50">forw..</text></g><g><title>__call__ (thinc/model.py:288) (381 samples, 3.74%)</title><rect x="50.0589%" y="420" width="3.7426%" height="15" fill="rgb(252,33,42)"/><text x="50.3089%" y="430.50">__ca..</text></g><g><title>forward (thinc/layers/residual.py:40) (391 samples, 3.84%)</title><rect x="50.0098%" y="340" width="3.8409%" height="15" fill="rgb(209,212,41)"/><text x="50.2598%" y="350.50">forw..</text></g><g><title>__call__ (thinc/model.py:288) (389 samples, 3.82%)</title><rect x="50.0295%" y="356" width="3.8212%" height="15" fill="rgb(207,154,6)"/><text x="50.2795%" y="366.50">__ca..</text></g><g><title>forward (thinc/layers/chain.py:54) (386 samples, 3.79%)</title><rect x="50.0589%" y="372" width="3.7917%" height="15" fill="rgb(223,64,47)"/><text x="50.3089%" y="382.50">forw..</text></g><g><title>__call__ (thinc/model.py:288) (386 samples, 3.79%)</title><rect x="50.0589%" y="388" width="3.7917%" height="15" fill="rgb(211,161,38)"/><text x="50.3089%" y="398.50">__ca..</text></g><g><title>_list_forward (thinc/layers/with_array.py:76) (402 samples, 3.95%)</title><rect x="49.9312%" y="276" width="3.9489%" height="15" fill="rgb(219,138,40)"/><text x="50.1812%" y="286.50">_lis..</text></g><g><title>__call__ (thinc/model.py:288) (402 samples, 3.95%)</title><rect x="49.9312%" y="292" width="3.9489%" height="15" fill="rgb(241,228,46)"/><text x="50.1812%" y="302.50">__ca..</text></g><g><title>forward (thinc/layers/chain.py:54) (400 samples, 3.93%)</title><rect x="49.9509%" y="308" width="3.9293%" height="15" fill="rgb(223,209,38)"/><text x="50.2009%" y="318.50">forw..</text></g><g><title>__call__ (thinc/model.py:288) (398 samples, 3.91%)</title><rect x="49.9705%" y="324" width="3.9096%" height="15" fill="rgb(236,164,45)"/><text x="50.2205%" y="334.50">__ca..</text></g><g><title>forward (thinc/layers/chain.py:54) (672 samples, 6.60%)</title><rect x="47.3183%" y="228" width="6.6012%" height="15" fill="rgb(231,15,5)"/><text x="47.5683%" y="238.50">forward (..</text></g><g><title>__call__ (thinc/model.py:288) (671 samples, 6.59%)</title><rect x="47.3281%" y="244" width="6.5914%" height="15" fill="rgb(252,35,15)"/><text x="47.5781%" y="254.50">__call__ ..</text></g><g><title>forward (thinc/layers/with_array.py:40) (411 samples, 4.04%)</title><rect x="49.8821%" y="260" width="4.0373%" height="15" fill="rgb(248,181,18)"/><text x="50.1321%" y="270.50">forw..</text></g><g><title>forward (thinc/layers/linear.py:35) (25 samples, 0.25%)</title><rect x="53.9489%" y="228" width="0.2456%" height="15" fill="rgb(233,39,42)"/><text x="54.1989%" y="238.50"></text></g><g><title>__call__ (thinc/model.py:288) (783 samples, 7.69%)</title><rect x="46.6208%" y="180" width="7.6916%" height="15" fill="rgb(238,110,33)"/><text x="46.8708%" y="190.50">__call__ (t..</text></g><g><title>forward (thinc/layers/chain.py:54) (725 samples, 7.12%)</title><rect x="47.1906%" y="196" width="7.1218%" height="15" fill="rgb(233,195,10)"/><text x="47.4406%" y="206.50">forward (t..</text></g><g><title>__call__ (thinc/model.py:288) (722 samples, 7.09%)</title><rect x="47.2200%" y="212" width="7.0923%" height="15" fill="rgb(254,105,3)"/><text x="47.4700%" y="222.50">__call__ (..</text></g><g><title>forward (spacy/ml/tb_framework.py:31) (817 samples, 8.03%)</title><rect x="46.3752%" y="164" width="8.0255%" height="15" fill="rgb(221,225,9)"/><text x="46.6252%" y="174.50">forward (sp..</text></g><g><title>affine (thinc/backends/ops.py:209) (15 samples, 0.15%)</title><rect x="54.5972%" y="260" width="0.1473%" height="15" fill="rgb(224,227,45)"/><text x="54.8472%" y="270.50"></text></g><g><title>forward (thinc/layers/softmax.py:34) (17 samples, 0.17%)</title><rect x="54.5874%" y="244" width="0.1670%" height="15" fill="rgb(229,198,43)"/><text x="54.8374%" y="254.50"></text></g><g><title>_list_forward (thinc/layers/with_array.py:76) (33 samples, 0.32%)</title><rect x="54.5678%" y="212" width="0.3242%" height="15" fill="rgb(206,209,35)"/><text x="54.8178%" y="222.50"></text></g><g><title>__call__ (thinc/model.py:288) (33 samples, 0.32%)</title><rect x="54.5678%" y="228" width="0.3242%" height="15" fill="rgb(245,195,53)"/><text x="54.8178%" y="238.50"></text></g><g><title>forward (thinc/layers/softmax.py:35) (14 samples, 0.14%)</title><rect x="54.7544%" y="244" width="0.1375%" height="15" fill="rgb(240,92,26)"/><text x="55.0044%" y="254.50"></text></g><g><title>predict (thinc/model.py:312) (878 samples, 8.62%)</title><rect x="46.3752%" y="148" width="8.6248%" height="15" fill="rgb(207,40,23)"/><text x="46.6252%" y="158.50">predict (thi..</text></g><g><title>forward (thinc/layers/chain.py:54) (61 samples, 0.60%)</title><rect x="54.4008%" y="164" width="0.5992%" height="15" fill="rgb(223,111,35)"/><text x="54.6508%" y="174.50"></text></g><g><title>__call__ (thinc/model.py:288) (61 samples, 0.60%)</title><rect x="54.4008%" y="180" width="0.5992%" height="15" fill="rgb(229,147,28)"/><text x="54.6508%" y="190.50"></text></g><g><title>forward (thinc/layers/with_array.py:40) (57 samples, 0.56%)</title><rect x="54.4401%" y="196" width="0.5599%" height="15" fill="rgb(211,29,28)"/><text x="54.6901%" y="206.50"></text></g><g><title>set_dropout_rate (thinc/model.py:765) (21 samples, 0.21%)</title><rect x="55.0098%" y="148" width="0.2063%" height="15" fill="rgb(228,72,33)"/><text x="55.2598%" y="158.50"></text></g><g><title>Similarity_between_words (SemanticText.py:179) (1,750 samples, 17.19%)</title><rect x="38.1041%" y="116" width="17.1906%" height="15" fill="rgb(205,214,31)"/><text x="38.3541%" y="126.50">Similarity_between_words (S..</text></g><g><title>__call__ (spacy/language.py:995) (1,718 samples, 16.88%)</title><rect x="38.4185%" y="132" width="16.8762%" height="15" fill="rgb(224,111,15)"/><text x="38.6685%" y="142.50">__call__ (spacy/language.p..</text></g><g><title>Semantic_Similarity (SemanticText.py:198) (3,569 samples, 35.06%)</title><rect x="20.5501%" y="84" width="35.0589%" height="15" fill="rgb(253,21,26)"/><text x="20.8001%" y="94.50">Semantic_Similarity (SemanticText.py:198)</text></g><g><title>Semantic_matching (SemanticText.py:184) (3,567 samples, 35.04%)</title><rect x="20.5697%" y="100" width="35.0393%" height="15" fill="rgb(245,139,43)"/><text x="20.8197%" y="110.50">Semantic_matching (SemanticText.py:184)</text></g><g><title>Similarity_between_words (SemanticText.py:180) (32 samples, 0.31%)</title><rect x="55.2947%" y="116" width="0.3143%" height="15" fill="rgb(252,170,7)"/><text x="55.5447%" y="126.50"></text></g><g><title>forward (thinc/layers/concatenate.py:44) (13 samples, 0.13%)</title><rect x="55.7760%" y="244" width="0.1277%" height="15" fill="rgb(231,118,14)"/><text x="56.0260%" y="254.50"></text></g><g><title>&lt;listcomp&gt; (thinc/layers/concatenate.py:44) (13 samples, 0.13%)</title><rect x="55.7760%" y="260" width="0.1277%" height="15" fill="rgb(238,83,0)"/><text x="56.0260%" y="270.50"></text></g><g><title>__call__ (thinc/model.py:288) (12 samples, 0.12%)</title><rect x="55.7859%" y="276" width="0.1179%" height="15" fill="rgb(221,39,39)"/><text x="56.0359%" y="286.50"></text></g><g><title>forward (thinc/layers/chain.py:54) (19 samples, 0.19%)</title><rect x="55.7760%" y="212" width="0.1866%" height="15" fill="rgb(222,119,46)"/><text x="56.0260%" y="222.50"></text></g><g><title>__call__ (thinc/model.py:288) (19 samples, 0.19%)</title><rect x="55.7760%" y="228" width="0.1866%" height="15" fill="rgb(222,165,49)"/><text x="56.0260%" y="238.50"></text></g><g><title>forward (thinc/layers/layernorm.py:25) (12 samples, 0.12%)</title><rect x="55.9823%" y="420" width="0.1179%" height="15" fill="rgb(219,113,52)"/><text x="56.2323%" y="430.50"></text></g><g><title>forward (thinc/layers/maxout.py:49) (15 samples, 0.15%)</title><rect x="56.1690%" y="420" width="0.1473%" height="15" fill="rgb(214,7,15)"/><text x="56.4190%" y="430.50"></text></g><g><title>forward (thinc/layers/chain.py:54) (41 samples, 0.40%)</title><rect x="55.9725%" y="388" width="0.4028%" height="15" fill="rgb(235,32,4)"/><text x="56.2225%" y="398.50"></text></g><g><title>__call__ (thinc/model.py:288) (40 samples, 0.39%)</title><rect x="55.9823%" y="404" width="0.3929%" height="15" fill="rgb(238,90,54)"/><text x="56.2323%" y="414.50"></text></g><g><title>forward (thinc/layers/residual.py:40) (42 samples, 0.41%)</title><rect x="55.9725%" y="292" width="0.4126%" height="15" fill="rgb(213,208,19)"/><text x="56.2225%" y="302.50"></text></g><g><title>__call__ (thinc/model.py:288) (42 samples, 0.41%)</title><rect x="55.9725%" y="308" width="0.4126%" height="15" fill="rgb(233,156,4)"/><text x="56.2225%" y="318.50"></text></g><g><title>forward (thinc/layers/chain.py:54) (42 samples, 0.41%)</title><rect x="55.9725%" y="324" width="0.4126%" height="15" fill="rgb(207,194,5)"/><text x="56.2225%" y="334.50"></text></g><g><title>__call__ (thinc/model.py:288) (42 samples, 0.41%)</title><rect x="55.9725%" y="340" width="0.4126%" height="15" fill="rgb(206,111,30)"/><text x="56.2225%" y="350.50"></text></g><g><title>forward (thinc/layers/chain.py:54) (42 samples, 0.41%)</title><rect x="55.9725%" y="356" width="0.4126%" height="15" fill="rgb(243,70,54)"/><text x="56.2225%" y="366.50"></text></g><g><title>__call__ (thinc/model.py:288) (42 samples, 0.41%)</title><rect x="55.9725%" y="372" width="0.4126%" height="15" fill="rgb(242,28,8)"/><text x="56.2225%" y="382.50"></text></g><g><title>predict (spacy/pipeline/tok2vec.py:121) (63 samples, 0.62%)</title><rect x="55.7760%" y="148" width="0.6189%" height="15" fill="rgb(219,106,18)"/><text x="56.0260%" y="158.50"></text></g><g><title>predict (thinc/model.py:312) (63 samples, 0.62%)</title><rect x="55.7760%" y="164" width="0.6189%" height="15" fill="rgb(244,222,10)"/><text x="56.0260%" y="174.50"></text></g><g><title>forward (thinc/layers/chain.py:54) (63 samples, 0.62%)</title><rect x="55.7760%" y="180" width="0.6189%" height="15" fill="rgb(236,179,52)"/><text x="56.0260%" y="190.50"></text></g><g><title>__call__ (thinc/model.py:288) (63 samples, 0.62%)</title><rect x="55.7760%" y="196" width="0.6189%" height="15" fill="rgb(213,23,39)"/><text x="56.0260%" y="206.50"></text></g><g><title>forward (thinc/layers/with_array.py:40) (44 samples, 0.43%)</title><rect x="55.9627%" y="212" width="0.4322%" height="15" fill="rgb(238,48,10)"/><text x="56.2127%" y="222.50"></text></g><g><title>_list_forward (thinc/layers/with_array.py:76) (43 samples, 0.42%)</title><rect x="55.9725%" y="228" width="0.4224%" height="15" fill="rgb(251,196,23)"/><text x="56.2225%" y="238.50"></text></g><g><title>__call__ (thinc/model.py:288) (43 samples, 0.42%)</title><rect x="55.9725%" y="244" width="0.4224%" height="15" fill="rgb(250,152,24)"/><text x="56.2225%" y="254.50"></text></g><g><title>forward (thinc/layers/chain.py:54) (43 samples, 0.42%)</title><rect x="55.9725%" y="260" width="0.4224%" height="15" fill="rgb(209,150,17)"/><text x="56.2225%" y="270.50"></text></g><g><title>__call__ (thinc/model.py:288) (43 samples, 0.42%)</title><rect x="55.9725%" y="276" width="0.4224%" height="15" fill="rgb(234,202,34)"/><text x="56.2225%" y="286.50"></text></g><g><title>forward (thinc/layers/concatenate.py:44) (11 samples, 0.11%)</title><rect x="56.4538%" y="292" width="0.1081%" height="15" fill="rgb(253,148,53)"/><text x="56.7038%" y="302.50"></text></g><g><title>&lt;listcomp&gt; (thinc/layers/concatenate.py:44) (11 samples, 0.11%)</title><rect x="56.4538%" y="308" width="0.1081%" height="15" fill="rgb(218,129,16)"/><text x="56.7038%" y="318.50"></text></g><g><title>__call__ (thinc/model.py:288) (11 samples, 0.11%)</title><rect x="56.4538%" y="324" width="0.1081%" height="15" fill="rgb(216,85,19)"/><text x="56.7038%" y="334.50"></text></g><g><title>forward (thinc/layers/chain.py:54) (20 samples, 0.20%)</title><rect x="56.4538%" y="260" width="0.1965%" height="15" fill="rgb(235,228,7)"/><text x="56.7038%" y="270.50"></text></g><g><title>__call__ (thinc/model.py:288) (20 samples, 0.20%)</title><rect x="56.4538%" y="276" width="0.1965%" height="15" fill="rgb(245,175,0)"/><text x="56.7038%" y="286.50"></text></g><g><title>forward (thinc/layers/maxout.py:49) (11 samples, 0.11%)</title><rect x="56.8075%" y="468" width="0.1081%" height="15" fill="rgb(208,168,36)"/><text x="57.0575%" y="478.50"></text></g><g><title>forward (thinc/layers/chain.py:54) (29 samples, 0.28%)</title><rect x="56.6798%" y="436" width="0.2849%" height="15" fill="rgb(246,171,24)"/><text x="56.9298%" y="446.50"></text></g><g><title>__call__ (thinc/model.py:288) (29 samples, 0.28%)</title><rect x="56.6798%" y="452" width="0.2849%" height="15" fill="rgb(215,142,24)"/><text x="56.9298%" y="462.50"></text></g><g><title>forward (thinc/layers/chain.py:54) (30 samples, 0.29%)</title><rect x="56.6798%" y="404" width="0.2947%" height="15" fill="rgb(250,187,7)"/><text x="56.9298%" y="414.50"></text></g><g><title>__call__ (thinc/model.py:288) (30 samples, 0.29%)</title><rect x="56.6798%" y="420" width="0.2947%" height="15" fill="rgb(228,66,33)"/><text x="56.9298%" y="430.50"></text></g><g><title>_list_forward (thinc/layers/with_array.py:76) (35 samples, 0.34%)</title><rect x="56.6699%" y="276" width="0.3438%" height="15" fill="rgb(234,215,21)"/><text x="56.9199%" y="286.50"></text></g><g><title>__call__ (thinc/model.py:288) (35 samples, 0.34%)</title><rect x="56.6699%" y="292" width="0.3438%" height="15" fill="rgb(222,191,20)"/><text x="56.9199%" y="302.50"></text></g><g><title>forward (thinc/layers/chain.py:54) (35 samples, 0.34%)</title><rect x="56.6699%" y="308" width="0.3438%" height="15" fill="rgb(245,79,54)"/><text x="56.9199%" y="318.50"></text></g><g><title>__call__ (thinc/model.py:288) (35 samples, 0.34%)</title><rect x="56.6699%" y="324" width="0.3438%" height="15" fill="rgb(240,10,37)"/><text x="56.9199%" y="334.50"></text></g><g><title>forward (thinc/layers/residual.py:40) (34 samples, 0.33%)</title><rect x="56.6798%" y="340" width="0.3340%" height="15" fill="rgb(214,192,32)"/><text x="56.9298%" y="350.50"></text></g><g><title>__call__ (thinc/model.py:288) (34 samples, 0.33%)</title><rect x="56.6798%" y="356" width="0.3340%" height="15" fill="rgb(209,36,54)"/><text x="56.9298%" y="366.50"></text></g><g><title>forward (thinc/layers/chain.py:54) (34 samples, 0.33%)</title><rect x="56.6798%" y="372" width="0.3340%" height="15" fill="rgb(220,10,11)"/><text x="56.9298%" y="382.50"></text></g><g><title>__call__ (thinc/model.py:288) (34 samples, 0.33%)</title><rect x="56.6798%" y="388" width="0.3340%" height="15" fill="rgb(221,106,17)"/><text x="56.9298%" y="398.50"></text></g><g><title>forward (thinc/layers/chain.py:54) (58 samples, 0.57%)</title><rect x="56.4538%" y="228" width="0.5697%" height="15" fill="rgb(251,142,44)"/><text x="56.7038%" y="238.50"></text></g><g><title>__call__ (thinc/model.py:288) (58 samples, 0.57%)</title><rect x="56.4538%" y="244" width="0.5697%" height="15" fill="rgb(238,13,15)"/><text x="56.7038%" y="254.50"></text></g><g><title>forward (thinc/layers/with_array.py:40) (38 samples, 0.37%)</title><rect x="56.6503%" y="260" width="0.3733%" height="15" fill="rgb(208,107,27)"/><text x="56.9003%" y="270.50"></text></g><g><title>__call__ (thinc/model.py:288) (65 samples, 0.64%)</title><rect x="56.4244%" y="180" width="0.6385%" height="15" fill="rgb(205,136,37)"/><text x="56.6744%" y="190.50"></text></g><g><title>forward (thinc/layers/chain.py:54) (62 samples, 0.61%)</title><rect x="56.4538%" y="196" width="0.6090%" height="15" fill="rgb(250,205,27)"/><text x="56.7038%" y="206.50"></text></g><g><title>__call__ (thinc/model.py:288) (62 samples, 0.61%)</title><rect x="56.4538%" y="212" width="0.6090%" height="15" fill="rgb(210,80,43)"/><text x="56.7038%" y="222.50"></text></g><g><title>predict (thinc/model.py:312) (70 samples, 0.69%)</title><rect x="56.4047%" y="148" width="0.6876%" height="15" fill="rgb(247,160,36)"/><text x="56.6547%" y="158.50"></text></g><g><title>forward (spacy/ml/tb_framework.py:31) (70 samples, 0.69%)</title><rect x="56.4047%" y="164" width="0.6876%" height="15" fill="rgb(234,13,49)"/><text x="56.6547%" y="174.50"></text></g><g><title>Similarity_between_words (SemanticText.py:178) (154 samples, 1.51%)</title><rect x="55.6090%" y="116" width="1.5128%" height="15" fill="rgb(234,122,0)"/><text x="55.8590%" y="126.50"></text></g><g><title>__call__ (spacy/language.py:995) (151 samples, 1.48%)</title><rect x="55.6385%" y="132" width="1.4833%" height="15" fill="rgb(207,146,38)"/><text x="55.8885%" y="142.50"></text></g><g><title>forward (thinc/layers/concatenate.py:44) (13 samples, 0.13%)</title><rect x="57.2692%" y="244" width="0.1277%" height="15" fill="rgb(207,177,25)"/><text x="57.5192%" y="254.50"></text></g><g><title>&lt;listcomp&gt; (thinc/layers/concatenate.py:44) (13 samples, 0.13%)</title><rect x="57.2692%" y="260" width="0.1277%" height="15" fill="rgb(211,178,42)"/><text x="57.5192%" y="270.50"></text></g><g><title>__call__ (thinc/model.py:288) (13 samples, 0.13%)</title><rect x="57.2692%" y="276" width="0.1277%" height="15" fill="rgb(230,69,54)"/><text x="57.5192%" y="286.50"></text></g><g><title>forward (thinc/layers/chain.py:54) (15 samples, 0.15%)</title><rect x="57.4165%" y="324" width="0.1473%" height="15" fill="rgb(214,135,41)"/><text x="57.6665%" y="334.50"></text></g><g><title>__call__ (thinc/model.py:288) (15 samples, 0.15%)</title><rect x="57.4165%" y="340" width="0.1473%" height="15" fill="rgb(237,67,25)"/><text x="57.6665%" y="350.50"></text></g><g><title>forward (thinc/layers/chain.py:54) (31 samples, 0.30%)</title><rect x="57.2692%" y="212" width="0.3045%" height="15" fill="rgb(222,189,50)"/><text x="57.5192%" y="222.50"></text></g><g><title>__call__ (thinc/model.py:288) (31 samples, 0.30%)</title><rect x="57.2692%" y="228" width="0.3045%" height="15" fill="rgb(245,148,34)"/><text x="57.5192%" y="238.50"></text></g><g><title>forward (thinc/layers/with_array.py:30) (16 samples, 0.16%)</title><rect x="57.4165%" y="244" width="0.1572%" height="15" fill="rgb(222,29,6)"/><text x="57.6665%" y="254.50"></text></g><g><title>_ragged_forward (thinc/layers/with_array.py:90) (16 samples, 0.16%)</title><rect x="57.4165%" y="260" width="0.1572%" height="15" fill="rgb(221,189,43)"/><text x="57.6665%" y="270.50"></text></g><g><title>__call__ (thinc/model.py:288) (16 samples, 0.16%)</title><rect x="57.4165%" y="276" width="0.1572%" height="15" fill="rgb(207,36,27)"/><text x="57.6665%" y="286.50"></text></g><g><title>forward (thinc/layers/chain.py:54) (16 samples, 0.16%)</title><rect x="57.4165%" y="292" width="0.1572%" height="15" fill="rgb(217,90,24)"/><text x="57.6665%" y="302.50"></text></g><g><title>__call__ (thinc/model.py:288) (16 samples, 0.16%)</title><rect x="57.4165%" y="308" width="0.1572%" height="15" fill="rgb(224,66,35)"/><text x="57.6665%" y="318.50"></text></g><g><title>forward (thinc/layers/layernorm.py:25) (12 samples, 0.12%)</title><rect x="57.6031%" y="420" width="0.1179%" height="15" fill="rgb(221,13,50)"/><text x="57.8531%" y="430.50"></text></g><g><title>forward (thinc/layers/maxout.py:49) (17 samples, 0.17%)</title><rect x="57.7603%" y="420" width="0.1670%" height="15" fill="rgb(236,68,49)"/><text x="58.0103%" y="430.50"></text></g><g><title>forward (thinc/layers/chain.py:54) (39 samples, 0.38%)</title><rect x="57.5933%" y="356" width="0.3831%" height="15" fill="rgb(229,146,28)"/><text x="57.8433%" y="366.50"></text></g><g><title>__call__ (thinc/model.py:288) (39 samples, 0.38%)</title><rect x="57.5933%" y="372" width="0.3831%" height="15" fill="rgb(225,31,38)"/><text x="57.8433%" y="382.50"></text></g><g><title>forward (thinc/layers/chain.py:54) (39 samples, 0.38%)</title><rect x="57.5933%" y="388" width="0.3831%" height="15" fill="rgb(250,208,3)"/><text x="57.8433%" y="398.50"></text></g><g><title>__call__ (thinc/model.py:288) (38 samples, 0.37%)</title><rect x="57.6031%" y="404" width="0.3733%" height="15" fill="rgb(246,54,23)"/><text x="57.8531%" y="414.50"></text></g><g><title>_list_forward (thinc/layers/with_array.py:76) (42 samples, 0.41%)</title><rect x="57.5737%" y="228" width="0.4126%" height="15" fill="rgb(243,76,11)"/><text x="57.8237%" y="238.50"></text></g><g><title>__call__ (thinc/model.py:288) (42 samples, 0.41%)</title><rect x="57.5737%" y="244" width="0.4126%" height="15" fill="rgb(245,21,50)"/><text x="57.8237%" y="254.50"></text></g><g><title>forward (thinc/layers/chain.py:54) (41 samples, 0.40%)</title><rect x="57.5835%" y="260" width="0.4028%" height="15" fill="rgb(228,9,43)"/><text x="57.8335%" y="270.50"></text></g><g><title>__call__ (thinc/model.py:288) (41 samples, 0.40%)</title><rect x="57.5835%" y="276" width="0.4028%" height="15" fill="rgb(208,100,47)"/><text x="57.8335%" y="286.50"></text></g><g><title>forward (thinc/layers/residual.py:40) (41 samples, 0.40%)</title><rect x="57.5835%" y="292" width="0.4028%" height="15" fill="rgb(232,26,8)"/><text x="57.8335%" y="302.50"></text></g><g><title>__call__ (thinc/model.py:288) (41 samples, 0.40%)</title><rect x="57.5835%" y="308" width="0.4028%" height="15" fill="rgb(216,166,38)"/><text x="57.8335%" y="318.50"></text></g><g><title>forward (thinc/layers/chain.py:54) (41 samples, 0.40%)</title><rect x="57.5835%" y="324" width="0.4028%" height="15" fill="rgb(251,202,51)"/><text x="57.8335%" y="334.50"></text></g><g><title>__call__ (thinc/model.py:288) (41 samples, 0.40%)</title><rect x="57.5835%" y="340" width="0.4028%" height="15" fill="rgb(254,216,34)"/><text x="57.8335%" y="350.50"></text></g><g><title>predict (spacy/pipeline/tok2vec.py:121) (75 samples, 0.74%)</title><rect x="57.2593%" y="148" width="0.7367%" height="15" fill="rgb(251,32,27)"/><text x="57.5093%" y="158.50"></text></g><g><title>predict (thinc/model.py:312) (75 samples, 0.74%)</title><rect x="57.2593%" y="164" width="0.7367%" height="15" fill="rgb(208,127,28)"/><text x="57.5093%" y="174.50"></text></g><g><title>forward (thinc/layers/chain.py:54) (74 samples, 0.73%)</title><rect x="57.2692%" y="180" width="0.7269%" height="15" fill="rgb(224,137,22)"/><text x="57.5192%" y="190.50"></text></g><g><title>__call__ (thinc/model.py:288) (74 samples, 0.73%)</title><rect x="57.2692%" y="196" width="0.7269%" height="15" fill="rgb(254,70,32)"/><text x="57.5192%" y="206.50"></text></g><g><title>forward (thinc/layers/with_array.py:40) (43 samples, 0.42%)</title><rect x="57.5737%" y="212" width="0.4224%" height="15" fill="rgb(229,75,37)"/><text x="57.8237%" y="222.50"></text></g><g><title>forward (thinc/layers/concatenate.py:44) (13 samples, 0.13%)</title><rect x="58.0943%" y="292" width="0.1277%" height="15" fill="rgb(252,64,23)"/><text x="58.3443%" y="302.50"></text></g><g><title>&lt;listcomp&gt; (thinc/layers/concatenate.py:44) (13 samples, 0.13%)</title><rect x="58.0943%" y="308" width="0.1277%" height="15" fill="rgb(232,162,48)"/><text x="58.3443%" y="318.50"></text></g><g><title>__call__ (thinc/model.py:288) (13 samples, 0.13%)</title><rect x="58.0943%" y="324" width="0.1277%" height="15" fill="rgb(246,160,12)"/><text x="58.3443%" y="334.50"></text></g><g><title>forward (thinc/layers/chain.py:54) (24 samples, 0.24%)</title><rect x="58.0845%" y="260" width="0.2358%" height="15" fill="rgb(247,166,0)"/><text x="58.3345%" y="270.50"></text></g><g><title>__call__ (thinc/model.py:288) (23 samples, 0.23%)</title><rect x="58.0943%" y="276" width="0.2259%" height="15" fill="rgb(249,219,21)"/><text x="58.3443%" y="286.50"></text></g><g><title>forward (thinc/layers/maxout.py:49) (19 samples, 0.19%)</title><rect x="58.4479%" y="468" width="0.1866%" height="15" fill="rgb(205,209,3)"/><text x="58.6979%" y="478.50"></text></g><g><title>forward (thinc/layers/chain.py:54) (34 samples, 0.33%)</title><rect x="58.3301%" y="404" width="0.3340%" height="15" fill="rgb(243,44,1)"/><text x="58.5801%" y="414.50"></text></g><g><title>__call__ (thinc/model.py:288) (34 samples, 0.33%)</title><rect x="58.3301%" y="420" width="0.3340%" height="15" fill="rgb(206,159,16)"/><text x="58.5801%" y="430.50"></text></g><g><title>forward (thinc/layers/chain.py:54) (34 samples, 0.33%)</title><rect x="58.3301%" y="436" width="0.3340%" height="15" fill="rgb(244,77,30)"/><text x="58.5801%" y="446.50"></text></g><g><title>__call__ (thinc/model.py:288) (34 samples, 0.33%)</title><rect x="58.3301%" y="452" width="0.3340%" height="15" fill="rgb(218,69,12)"/><text x="58.5801%" y="462.50"></text></g><g><title>forward (thinc/layers/chain.py:54) (61 samples, 0.60%)</title><rect x="58.0845%" y="228" width="0.5992%" height="15" fill="rgb(212,87,7)"/><text x="58.3345%" y="238.50"></text></g><g><title>__call__ (thinc/model.py:288) (61 samples, 0.60%)</title><rect x="58.0845%" y="244" width="0.5992%" height="15" fill="rgb(245,114,25)"/><text x="58.3345%" y="254.50"></text></g><g><title>forward (thinc/layers/with_array.py:40) (37 samples, 0.36%)</title><rect x="58.3202%" y="260" width="0.3635%" height="15" fill="rgb(210,61,42)"/><text x="58.5702%" y="270.50"></text></g><g><title>_list_forward (thinc/layers/with_array.py:76) (37 samples, 0.36%)</title><rect x="58.3202%" y="276" width="0.3635%" height="15" fill="rgb(211,52,33)"/><text x="58.5702%" y="286.50"></text></g><g><title>__call__ (thinc/model.py:288) (37 samples, 0.36%)</title><rect x="58.3202%" y="292" width="0.3635%" height="15" fill="rgb(234,58,33)"/><text x="58.5702%" y="302.50"></text></g><g><title>forward (thinc/layers/chain.py:54) (37 samples, 0.36%)</title><rect x="58.3202%" y="308" width="0.3635%" height="15" fill="rgb(220,115,36)"/><text x="58.5702%" y="318.50"></text></g><g><title>__call__ (thinc/model.py:288) (37 samples, 0.36%)</title><rect x="58.3202%" y="324" width="0.3635%" height="15" fill="rgb(243,153,54)"/><text x="58.5702%" y="334.50"></text></g><g><title>forward (thinc/layers/residual.py:40) (37 samples, 0.36%)</title><rect x="58.3202%" y="340" width="0.3635%" height="15" fill="rgb(251,47,18)"/><text x="58.5702%" y="350.50"></text></g><g><title>__call__ (thinc/model.py:288) (37 samples, 0.36%)</title><rect x="58.3202%" y="356" width="0.3635%" height="15" fill="rgb(242,102,42)"/><text x="58.5702%" y="366.50"></text></g><g><title>forward (thinc/layers/chain.py:54) (37 samples, 0.36%)</title><rect x="58.3202%" y="372" width="0.3635%" height="15" fill="rgb(234,31,38)"/><text x="58.5702%" y="382.50"></text></g><g><title>__call__ (thinc/model.py:288) (36 samples, 0.35%)</title><rect x="58.3301%" y="388" width="0.3536%" height="15" fill="rgb(221,117,51)"/><text x="58.5801%" y="398.50"></text></g><g><title>forward (spacy/ml/tb_framework.py:31) (73 samples, 0.72%)</title><rect x="58.0157%" y="164" width="0.7171%" height="15" fill="rgb(212,20,18)"/><text x="58.2657%" y="174.50"></text></g><g><title>__call__ (thinc/model.py:288) (71 samples, 0.70%)</title><rect x="58.0354%" y="180" width="0.6974%" height="15" fill="rgb(245,133,36)"/><text x="58.2854%" y="190.50"></text></g><g><title>forward (thinc/layers/chain.py:54) (66 samples, 0.65%)</title><rect x="58.0845%" y="196" width="0.6483%" height="15" fill="rgb(212,6,19)"/><text x="58.3345%" y="206.50"></text></g><g><title>__call__ (thinc/model.py:288) (66 samples, 0.65%)</title><rect x="58.0845%" y="212" width="0.6483%" height="15" fill="rgb(218,1,36)"/><text x="58.3345%" y="222.50"></text></g><g><title>predict (thinc/model.py:312) (79 samples, 0.78%)</title><rect x="58.0157%" y="148" width="0.7760%" height="15" fill="rgb(246,84,54)"/><text x="58.2657%" y="158.50"></text></g><g><title>Similarity_between_words (SemanticText.py:179) (171 samples, 1.68%)</title><rect x="57.1218%" y="116" width="1.6798%" height="15" fill="rgb(242,110,6)"/><text x="57.3718%" y="126.50"></text></g><g><title>__call__ (spacy/language.py:995) (170 samples, 1.67%)</title><rect x="57.1316%" y="132" width="1.6699%" height="15" fill="rgb(214,47,5)"/><text x="57.3816%" y="142.50"></text></g><g><title>Semantic_Similarity (SemanticText.py:201) (330 samples, 3.24%)</title><rect x="55.6090%" y="84" width="3.2417%" height="15" fill="rgb(218,159,25)"/><text x="55.8590%" y="94.50">Sem..</text></g><g><title>Semantic_matching (SemanticText.py:184) (330 samples, 3.24%)</title><rect x="55.6090%" y="100" width="3.2417%" height="15" fill="rgb(215,211,28)"/><text x="55.8590%" y="110.50">Sem..</text></g><g><title>&lt;module&gt; (SemanticText.py:243) (4,082 samples, 40.10%)</title><rect x="18.7819%" y="68" width="40.0982%" height="15" fill="rgb(238,59,32)"/><text x="19.0319%" y="78.50">&lt;module&gt; (SemanticText.py:243)</text></g><g><title>Semantic_Similarity (SemanticText.py:167) (182 samples, 1.79%)</title><rect x="58.8900%" y="84" width="1.7878%" height="15" fill="rgb(226,82,3)"/><text x="59.1400%" y="94.50">S..</text></g><g><title>NLCS (SemanticText.py:69) (181 samples, 1.78%)</title><rect x="58.8998%" y="100" width="1.7780%" height="15" fill="rgb(240,164,32)"/><text x="59.1498%" y="110.50">N..</text></g><g><title>NLCS (SemanticText.py:69) (174 samples, 1.71%)</title><rect x="58.9686%" y="116" width="1.7092%" height="15" fill="rgb(232,46,7)"/><text x="59.2186%" y="126.50"></text></g><g><title>NLCS (SemanticText.py:69) (171 samples, 1.68%)</title><rect x="58.9980%" y="132" width="1.6798%" height="15" fill="rgb(229,129,53)"/><text x="59.2480%" y="142.50"></text></g><g><title>NLCS (SemanticText.py:69) (168 samples, 1.65%)</title><rect x="59.0275%" y="148" width="1.6503%" height="15" fill="rgb(234,188,29)"/><text x="59.2775%" y="158.50"></text></g><g><title>NLCS (SemanticText.py:69) (167 samples, 1.64%)</title><rect x="59.0373%" y="164" width="1.6405%" height="15" fill="rgb(246,141,4)"/><text x="59.2873%" y="174.50"></text></g><g><title>NLCS (SemanticText.py:69) (163 samples, 1.60%)</title><rect x="59.0766%" y="180" width="1.6012%" height="15" fill="rgb(229,23,39)"/><text x="59.3266%" y="190.50"></text></g><g><title>NLCS (SemanticText.py:69) (154 samples, 1.51%)</title><rect x="59.1650%" y="196" width="1.5128%" height="15" fill="rgb(206,12,3)"/><text x="59.4150%" y="206.50"></text></g><g><title>NLCS (SemanticText.py:69) (144 samples, 1.41%)</title><rect x="59.2633%" y="212" width="1.4145%" height="15" fill="rgb(252,226,20)"/><text x="59.5133%" y="222.50"></text></g><g><title>NLCS (SemanticText.py:69) (132 samples, 1.30%)</title><rect x="59.3811%" y="228" width="1.2967%" height="15" fill="rgb(216,123,35)"/><text x="59.6311%" y="238.50"></text></g><g><title>NLCS (SemanticText.py:69) (116 samples, 1.14%)</title><rect x="59.5383%" y="244" width="1.1395%" height="15" fill="rgb(212,68,40)"/><text x="59.7883%" y="254.50"></text></g><g><title>NLCS (SemanticText.py:69) (102 samples, 1.00%)</title><rect x="59.6758%" y="260" width="1.0020%" height="15" fill="rgb(254,125,32)"/><text x="59.9258%" y="270.50"></text></g><g><title>NLCS (SemanticText.py:69) (84 samples, 0.83%)</title><rect x="59.8527%" y="276" width="0.8251%" height="15" fill="rgb(253,97,22)"/><text x="60.1027%" y="286.50"></text></g><g><title>NLCS (SemanticText.py:69) (69 samples, 0.68%)</title><rect x="60.0000%" y="292" width="0.6778%" height="15" fill="rgb(241,101,14)"/><text x="60.2500%" y="302.50"></text></g><g><title>NLCS (SemanticText.py:69) (56 samples, 0.55%)</title><rect x="60.1277%" y="308" width="0.5501%" height="15" fill="rgb(238,103,29)"/><text x="60.3777%" y="318.50"></text></g><g><title>NLCS (SemanticText.py:69) (40 samples, 0.39%)</title><rect x="60.2849%" y="324" width="0.3929%" height="15" fill="rgb(233,195,47)"/><text x="60.5349%" y="334.50"></text></g><g><title>NLCS (SemanticText.py:69) (24 samples, 0.24%)</title><rect x="60.4420%" y="340" width="0.2358%" height="15" fill="rgb(246,218,30)"/><text x="60.6920%" y="350.50"></text></g><g><title>NLCS (SemanticText.py:69) (15 samples, 0.15%)</title><rect x="60.5305%" y="356" width="0.1473%" height="15" fill="rgb(219,145,47)"/><text x="60.7805%" y="366.50"></text></g><g><title>__call__ (spacy/language.py:983) (14 samples, 0.14%)</title><rect x="60.7957%" y="132" width="0.1375%" height="15" fill="rgb(243,12,26)"/><text x="61.0457%" y="142.50"></text></g><g><title>make_doc (spacy/language.py:1065) (14 samples, 0.14%)</title><rect x="60.7957%" y="148" width="0.1375%" height="15" fill="rgb(214,87,16)"/><text x="61.0457%" y="158.50"></text></g><g><title>match (spacy/pipeline/attributeruler.py:108) (23 samples, 0.23%)</title><rect x="61.8959%" y="164" width="0.2259%" height="15" fill="rgb(208,99,42)"/><text x="62.1459%" y="174.50"></text></g><g><title>__call__ (spacy/pipeline/attributeruler.py:101) (26 samples, 0.26%)</title><rect x="61.8861%" y="148" width="0.2554%" height="15" fill="rgb(253,99,2)"/><text x="62.1361%" y="158.50"></text></g><g><title>forward (spacy_legacy/layers/staticvectors_v1.py:42) (13 samples, 0.13%)</title><rect x="62.5639%" y="292" width="0.1277%" height="15" fill="rgb(220,168,23)"/><text x="62.8139%" y="302.50"></text></g><g><title>&lt;listcomp&gt; (spacy_legacy/layers/staticvectors_v1.py:42) (13 samples, 0.13%)</title><rect x="62.5639%" y="308" width="0.1277%" height="15" fill="rgb(242,38,24)"/><text x="62.8139%" y="318.50"></text></g><g><title>forward (spacy_legacy/layers/staticvectors_v1.py:45) (23 samples, 0.23%)</title><rect x="62.6916%" y="292" width="0.2259%" height="15" fill="rgb(225,182,9)"/><text x="62.9416%" y="302.50"></text></g><g><title>forward (thinc/layers/hashembed.py:70) (15 samples, 0.15%)</title><rect x="63.3301%" y="452" width="0.1473%" height="15" fill="rgb(243,178,37)"/><text x="63.5801%" y="462.50"></text></g><g><title>forward (thinc/layers/hashembed.py:71) (15 samples, 0.15%)</title><rect x="63.4774%" y="452" width="0.1473%" height="15" fill="rgb(232,139,19)"/><text x="63.7274%" y="462.50"></text></g><g><title>forward (thinc/layers/chain.py:54) (47 samples, 0.46%)</title><rect x="63.1729%" y="420" width="0.4617%" height="15" fill="rgb(225,201,24)"/><text x="63.4229%" y="430.50"></text></g><g><title>__call__ (thinc/model.py:288) (46 samples, 0.45%)</title><rect x="63.1827%" y="436" width="0.4519%" height="15" fill="rgb(221,47,46)"/><text x="63.4327%" y="446.50"></text></g><g><title>forward (thinc/layers/concatenate.py:44) (50 samples, 0.49%)</title><rect x="63.1532%" y="372" width="0.4912%" height="15" fill="rgb(249,23,13)"/><text x="63.4032%" y="382.50"></text></g><g><title>&lt;listcomp&gt; (thinc/layers/concatenate.py:44) (50 samples, 0.49%)</title><rect x="63.1532%" y="388" width="0.4912%" height="15" fill="rgb(219,9,5)"/><text x="63.4032%" y="398.50"></text></g><g><title>__call__ (thinc/model.py:288) (50 samples, 0.49%)</title><rect x="63.1532%" y="404" width="0.4912%" height="15" fill="rgb(254,171,16)"/><text x="63.4032%" y="414.50"></text></g><g><title>_ragged_forward (thinc/layers/with_array.py:90) (55 samples, 0.54%)</title><rect x="63.1532%" y="340" width="0.5403%" height="15" fill="rgb(230,171,20)"/><text x="63.4032%" y="350.50"></text></g><g><title>__call__ (thinc/model.py:288) (55 samples, 0.54%)</title><rect x="63.1532%" y="356" width="0.5403%" height="15" fill="rgb(210,71,41)"/><text x="63.4032%" y="366.50"></text></g><g><title>forward (thinc/layers/with_array.py:30) (59 samples, 0.58%)</title><rect x="63.1336%" y="324" width="0.5796%" height="15" fill="rgb(206,173,20)"/><text x="63.3836%" y="334.50"></text></g><g><title>forward (thinc/layers/concatenate.py:44) (131 samples, 1.29%)</title><rect x="62.4460%" y="244" width="1.2868%" height="15" fill="rgb(233,88,34)"/><text x="62.6960%" y="254.50"></text></g><g><title>&lt;listcomp&gt; (thinc/layers/concatenate.py:44) (130 samples, 1.28%)</title><rect x="62.4558%" y="260" width="1.2770%" height="15" fill="rgb(223,209,46)"/><text x="62.7058%" y="270.50"></text></g><g><title>__call__ (thinc/model.py:288) (129 samples, 1.27%)</title><rect x="62.4656%" y="276" width="1.2672%" height="15" fill="rgb(250,43,18)"/><text x="62.7156%" y="286.50"></text></g><g><title>forward (thinc/layers/chain.py:54) (72 samples, 0.71%)</title><rect x="63.0255%" y="292" width="0.7073%" height="15" fill="rgb(208,13,10)"/><text x="63.2755%" y="302.50"></text></g><g><title>__call__ (thinc/model.py:288) (72 samples, 0.71%)</title><rect x="63.0255%" y="308" width="0.7073%" height="15" fill="rgb(212,200,36)"/><text x="63.2755%" y="318.50"></text></g><g><title>_get_moments (thinc/layers/layernorm.py:76) (16 samples, 0.16%)</title><rect x="63.8900%" y="372" width="0.1572%" height="15" fill="rgb(225,90,30)"/><text x="64.1400%" y="382.50"></text></g><g><title>_get_moments (thinc/layers/layernorm.py:77) (14 samples, 0.14%)</title><rect x="64.0472%" y="372" width="0.1375%" height="15" fill="rgb(236,182,39)"/><text x="64.2972%" y="382.50"></text></g><g><title>forward (thinc/layers/layernorm.py:25) (35 samples, 0.34%)</title><rect x="63.8900%" y="356" width="0.3438%" height="15" fill="rgb(212,144,35)"/><text x="64.1400%" y="366.50"></text></g><g><title>forward (thinc/layers/maxout.py:49) (44 samples, 0.43%)</title><rect x="64.3910%" y="356" width="0.4322%" height="15" fill="rgb(228,63,44)"/><text x="64.6410%" y="366.50"></text></g><g><title>_ragged_forward (thinc/layers/with_array.py:90) (109 samples, 1.07%)</title><rect x="63.8605%" y="260" width="1.0707%" height="15" fill="rgb(228,109,6)"/><text x="64.1105%" y="270.50"></text></g><g><title>__call__ (thinc/model.py:288) (108 samples, 1.06%)</title><rect x="63.8703%" y="276" width="1.0609%" height="15" fill="rgb(238,117,24)"/><text x="64.1203%" y="286.50"></text></g><g><title>forward (thinc/layers/chain.py:54) (108 samples, 1.06%)</title><rect x="63.8703%" y="292" width="1.0609%" height="15" fill="rgb(242,26,26)"/><text x="64.1203%" y="302.50"></text></g><g><title>__call__ (thinc/model.py:288) (108 samples, 1.06%)</title><rect x="63.8703%" y="308" width="1.0609%" height="15" fill="rgb(221,92,48)"/><text x="64.1203%" y="318.50"></text></g><g><title>forward (thinc/layers/chain.py:54) (108 samples, 1.06%)</title><rect x="63.8703%" y="324" width="1.0609%" height="15" fill="rgb(209,209,32)"/><text x="64.1203%" y="334.50"></text></g><g><title>__call__ (thinc/model.py:288) (107 samples, 1.05%)</title><rect x="63.8802%" y="340" width="1.0511%" height="15" fill="rgb(221,70,22)"/><text x="64.1302%" y="350.50"></text></g><g><title>forward (thinc/layers/with_array.py:30) (113 samples, 1.11%)</title><rect x="63.8507%" y="244" width="1.1100%" height="15" fill="rgb(248,145,5)"/><text x="64.1007%" y="254.50"></text></g><g><title>forward (thinc/layers/chain.py:54) (260 samples, 2.55%)</title><rect x="62.4165%" y="212" width="2.5540%" height="15" fill="rgb(226,116,26)"/><text x="62.6665%" y="222.50">fo..</text></g><g><title>__call__ (thinc/model.py:288) (259 samples, 2.54%)</title><rect x="62.4263%" y="228" width="2.5442%" height="15" fill="rgb(244,5,17)"/><text x="62.6763%" y="238.50">__..</text></g><g><title>_mean (numpy/core/_methods.py:178) (13 samples, 0.13%)</title><rect x="65.4617%" y="452" width="0.1277%" height="15" fill="rgb(252,159,33)"/><text x="65.7117%" y="462.50"></text></g><g><title>_get_moments (thinc/layers/layernorm.py:76) (36 samples, 0.35%)</title><rect x="65.3045%" y="436" width="0.3536%" height="15" fill="rgb(206,71,0)"/><text x="65.5545%" y="446.50"></text></g><g><title>_get_moments (thinc/layers/layernorm.py:77) (46 samples, 0.45%)</title><rect x="65.6582%" y="436" width="0.4519%" height="15" fill="rgb(233,118,54)"/><text x="65.9082%" y="446.50"></text></g><g><title>forward (thinc/layers/layernorm.py:25) (90 samples, 0.88%)</title><rect x="65.2947%" y="420" width="0.8841%" height="15" fill="rgb(234,83,48)"/><text x="65.5447%" y="430.50"></text></g><g><title>forward (thinc/layers/layernorm.py:27) (21 samples, 0.21%)</title><rect x="66.2770%" y="420" width="0.2063%" height="15" fill="rgb(228,3,54)"/><text x="66.5270%" y="430.50"></text></g><g><title>forward (thinc/layers/maxout.py:49) (176 samples, 1.73%)</title><rect x="66.5619%" y="420" width="1.7289%" height="15" fill="rgb(226,155,13)"/><text x="66.8119%" y="430.50"></text></g><g><title>forward (thinc/layers/maxout.py:50) (21 samples, 0.21%)</title><rect x="68.2908%" y="420" width="0.2063%" height="15" fill="rgb(241,28,37)"/><text x="68.5408%" y="430.50"></text></g><g><title>forward (thinc/layers/chain.py:54) (349 samples, 3.43%)</title><rect x="65.1965%" y="388" width="3.4283%" height="15" fill="rgb(233,93,10)"/><text x="65.4465%" y="398.50">for..</text></g><g><title>__call__ (thinc/model.py:288) (344 samples, 3.38%)</title><rect x="65.2456%" y="404" width="3.3792%" height="15" fill="rgb(225,113,19)"/><text x="65.4956%" y="414.50">__c..</text></g><g><title>forward (thinc/layers/maxout.py:52) (11 samples, 0.11%)</title><rect x="68.5167%" y="420" width="0.1081%" height="15" fill="rgb(241,2,18)"/><text x="68.7667%" y="430.50"></text></g><g><title>forward (thinc/layers/chain.py:54) (359 samples, 3.53%)</title><rect x="65.1375%" y="356" width="3.5265%" height="15" fill="rgb(228,207,21)"/><text x="65.3875%" y="366.50">for..</text></g><g><title>__call__ (thinc/model.py:288) (356 samples, 3.50%)</title><rect x="65.1670%" y="372" width="3.4971%" height="15" fill="rgb(213,211,35)"/><text x="65.4170%" y="382.50">__c..</text></g><g><title>__call__ (thinc/model.py:288) (368 samples, 3.61%)</title><rect x="65.1277%" y="308" width="3.6149%" height="15" fill="rgb(209,83,10)"/><text x="65.3777%" y="318.50">__ca..</text></g><g><title>forward (thinc/layers/chain.py:54) (368 samples, 3.61%)</title><rect x="65.1277%" y="324" width="3.6149%" height="15" fill="rgb(209,164,1)"/><text x="65.3777%" y="334.50">forw..</text></g><g><title>__call__ (thinc/model.py:288) (368 samples, 3.61%)</title><rect x="65.1277%" y="340" width="3.6149%" height="15" fill="rgb(213,184,43)"/><text x="65.3777%" y="350.50">__ca..</text></g><g><title>forward (thinc/layers/residual.py:40) (370 samples, 3.63%)</title><rect x="65.1179%" y="292" width="3.6346%" height="15" fill="rgb(231,61,34)"/><text x="65.3679%" y="302.50">forw..</text></g><g><title>forward (thinc/layers/chain.py:54) (374 samples, 3.67%)</title><rect x="65.0982%" y="260" width="3.6739%" height="15" fill="rgb(235,75,3)"/><text x="65.3482%" y="270.50">forw..</text></g><g><title>__call__ (thinc/model.py:288) (374 samples, 3.67%)</title><rect x="65.0982%" y="276" width="3.6739%" height="15" fill="rgb(220,106,47)"/><text x="65.3482%" y="286.50">__ca..</text></g><g><title>_list_forward (thinc/layers/with_array.py:76) (375 samples, 3.68%)</title><rect x="65.0982%" y="228" width="3.6837%" height="15" fill="rgb(210,196,33)"/><text x="65.3482%" y="238.50">_lis..</text></g><g><title>__call__ (thinc/model.py:288) (375 samples, 3.68%)</title><rect x="65.0982%" y="244" width="3.6837%" height="15" fill="rgb(229,154,42)"/><text x="65.3482%" y="254.50">__ca..</text></g><g><title>predict (spacy/pipeline/tok2vec.py:121) (672 samples, 6.60%)</title><rect x="62.2888%" y="148" width="6.6012%" height="15" fill="rgb(228,114,26)"/><text x="62.5388%" y="158.50">predict (..</text></g><g><title>predict (thinc/model.py:312) (670 samples, 6.58%)</title><rect x="62.3084%" y="164" width="6.5815%" height="15" fill="rgb(208,144,1)"/><text x="62.5584%" y="174.50">predict (..</text></g><g><title>forward (thinc/layers/chain.py:54) (659 samples, 6.47%)</title><rect x="62.4165%" y="180" width="6.4735%" height="15" fill="rgb(239,112,37)"/><text x="62.6665%" y="190.50">forward ..</text></g><g><title>__call__ (thinc/model.py:288) (659 samples, 6.47%)</title><rect x="62.4165%" y="196" width="6.4735%" height="15" fill="rgb(210,96,50)"/><text x="62.6665%" y="206.50">__call__..</text></g><g><title>forward (thinc/layers/with_array.py:40) (399 samples, 3.92%)</title><rect x="64.9705%" y="212" width="3.9194%" height="15" fill="rgb(222,178,2)"/><text x="65.2205%" y="222.50">forw..</text></g><g><title>forward (spacy/ml/_precomputable_affine.py:22) (37 samples, 0.36%)</title><rect x="69.3026%" y="196" width="0.3635%" height="15" fill="rgb(226,74,18)"/><text x="69.5526%" y="206.50"></text></g><g><title>forward (spacy/ml/_precomputable_affine.py:24) (13 samples, 0.13%)</title><rect x="69.6857%" y="196" width="0.1277%" height="15" fill="rgb(225,67,54)"/><text x="69.9357%" y="206.50"></text></g><g><title>forward (spacy_legacy/layers/staticvectors_v1.py:42) (17 samples, 0.17%)</title><rect x="69.9705%" y="340" width="0.1670%" height="15" fill="rgb(251,92,32)"/><text x="70.2205%" y="350.50"></text></g><g><title>&lt;listcomp&gt; (spacy_legacy/layers/staticvectors_v1.py:42) (17 samples, 0.17%)</title><rect x="69.9705%" y="356" width="0.1670%" height="15" fill="rgb(228,149,22)"/><text x="70.2205%" y="366.50"></text></g><g><title>forward (spacy_legacy/layers/staticvectors_v1.py:45) (14 samples, 0.14%)</title><rect x="70.1375%" y="340" width="0.1375%" height="15" fill="rgb(243,54,13)"/><text x="70.3875%" y="350.50"></text></g><g><title>forward (thinc/layers/hashembed.py:70) (21 samples, 0.21%)</title><rect x="70.6680%" y="500" width="0.2063%" height="15" fill="rgb(243,180,28)"/><text x="70.9180%" y="510.50"></text></g><g><title>forward (thinc/layers/chain.py:54) (46 samples, 0.45%)</title><rect x="70.5206%" y="468" width="0.4519%" height="15" fill="rgb(208,167,24)"/><text x="70.7706%" y="478.50"></text></g><g><title>__call__ (thinc/model.py:288) (45 samples, 0.44%)</title><rect x="70.5305%" y="484" width="0.4420%" height="15" fill="rgb(245,73,45)"/><text x="70.7805%" y="494.50"></text></g><g><title>forward (thinc/layers/concatenate.py:44) (47 samples, 0.46%)</title><rect x="70.5206%" y="420" width="0.4617%" height="15" fill="rgb(237,203,48)"/><text x="70.7706%" y="430.50"></text></g><g><title>&lt;listcomp&gt; (thinc/layers/concatenate.py:44) (47 samples, 0.46%)</title><rect x="70.5206%" y="436" width="0.4617%" height="15" fill="rgb(211,197,16)"/><text x="70.7706%" y="446.50"></text></g><g><title>__call__ (thinc/model.py:288) (47 samples, 0.46%)</title><rect x="70.5206%" y="452" width="0.4617%" height="15" fill="rgb(243,99,51)"/><text x="70.7706%" y="462.50"></text></g><g><title>_ragged_forward (thinc/layers/with_array.py:90) (60 samples, 0.59%)</title><rect x="70.5108%" y="388" width="0.5894%" height="15" fill="rgb(215,123,29)"/><text x="70.7608%" y="398.50"></text></g><g><title>__call__ (thinc/model.py:288) (59 samples, 0.58%)</title><rect x="70.5206%" y="404" width="0.5796%" height="15" fill="rgb(239,186,37)"/><text x="70.7706%" y="414.50"></text></g><g><title>forward (thinc/layers/concatenate.py:50) (11 samples, 0.11%)</title><rect x="70.9921%" y="420" width="0.1081%" height="15" fill="rgb(252,136,39)"/><text x="71.2421%" y="430.50"></text></g><g><title>forward (thinc/layers/with_array.py:30) (61 samples, 0.60%)</title><rect x="70.5108%" y="372" width="0.5992%" height="15" fill="rgb(223,213,32)"/><text x="70.7608%" y="382.50"></text></g><g><title>forward (thinc/layers/chain.py:54) (82 samples, 0.81%)</title><rect x="70.3242%" y="340" width="0.8055%" height="15" fill="rgb(233,115,5)"/><text x="70.5742%" y="350.50"></text></g><g><title>__call__ (thinc/model.py:288) (82 samples, 0.81%)</title><rect x="70.3242%" y="356" width="0.8055%" height="15" fill="rgb(207,226,44)"/><text x="70.5742%" y="366.50"></text></g><g><title>forward (thinc/layers/concatenate.py:44) (131 samples, 1.29%)</title><rect x="69.8625%" y="292" width="1.2868%" height="15" fill="rgb(208,126,0)"/><text x="70.1125%" y="302.50"></text></g><g><title>&lt;listcomp&gt; (thinc/layers/concatenate.py:44) (129 samples, 1.27%)</title><rect x="69.8821%" y="308" width="1.2672%" height="15" fill="rgb(244,66,21)"/><text x="70.1321%" y="318.50"></text></g><g><title>__call__ (thinc/model.py:288) (127 samples, 1.25%)</title><rect x="69.9018%" y="324" width="1.2475%" height="15" fill="rgb(222,97,12)"/><text x="70.1518%" y="334.50"></text></g><g><title>_get_moments (thinc/layers/layernorm.py:76) (15 samples, 0.15%)</title><rect x="71.3163%" y="420" width="0.1473%" height="15" fill="rgb(219,213,19)"/><text x="71.5663%" y="430.50"></text></g><g><title>_get_moments (thinc/layers/layernorm.py:77) (17 samples, 0.17%)</title><rect x="71.4637%" y="420" width="0.1670%" height="15" fill="rgb(252,169,30)"/><text x="71.7137%" y="430.50"></text></g><g><title>forward (thinc/layers/layernorm.py:25) (40 samples, 0.39%)</title><rect x="71.3065%" y="404" width="0.3929%" height="15" fill="rgb(206,32,51)"/><text x="71.5565%" y="414.50"></text></g><g><title>forward (thinc/layers/maxout.py:49) (57 samples, 0.56%)</title><rect x="71.8173%" y="404" width="0.5599%" height="15" fill="rgb(250,172,42)"/><text x="72.0673%" y="414.50"></text></g><g><title>forward (thinc/layers/chain.py:54) (263 samples, 2.58%)</title><rect x="69.8625%" y="260" width="2.5835%" height="15" fill="rgb(209,34,43)"/><text x="70.1125%" y="270.50">fo..</text></g><g><title>__call__ (thinc/model.py:288) (263 samples, 2.58%)</title><rect x="69.8625%" y="276" width="2.5835%" height="15" fill="rgb(223,11,35)"/><text x="70.1125%" y="286.50">__..</text></g><g><title>forward (thinc/layers/with_array.py:30) (119 samples, 1.17%)</title><rect x="71.2770%" y="292" width="1.1690%" height="15" fill="rgb(251,219,26)"/><text x="71.5270%" y="302.50"></text></g><g><title>_ragged_forward (thinc/layers/with_array.py:90) (119 samples, 1.17%)</title><rect x="71.2770%" y="308" width="1.1690%" height="15" fill="rgb(231,119,3)"/><text x="71.5270%" y="318.50"></text></g><g><title>__call__ (thinc/model.py:288) (118 samples, 1.16%)</title><rect x="71.2868%" y="324" width="1.1591%" height="15" fill="rgb(216,97,11)"/><text x="71.5368%" y="334.50"></text></g><g><title>forward (thinc/layers/chain.py:54) (118 samples, 1.16%)</title><rect x="71.2868%" y="340" width="1.1591%" height="15" fill="rgb(223,59,9)"/><text x="71.5368%" y="350.50"></text></g><g><title>__call__ (thinc/model.py:288) (117 samples, 1.15%)</title><rect x="71.2967%" y="356" width="1.1493%" height="15" fill="rgb(233,93,31)"/><text x="71.5467%" y="366.50"></text></g><g><title>forward (thinc/layers/chain.py:54) (116 samples, 1.14%)</title><rect x="71.3065%" y="372" width="1.1395%" height="15" fill="rgb(239,81,33)"/><text x="71.5565%" y="382.50"></text></g><g><title>__call__ (thinc/model.py:288) (116 samples, 1.14%)</title><rect x="71.3065%" y="388" width="1.1395%" height="15" fill="rgb(213,120,34)"/><text x="71.5565%" y="398.50"></text></g><g><title>_mean (numpy/core/_methods.py:178) (11 samples, 0.11%)</title><rect x="72.8782%" y="500" width="0.1081%" height="15" fill="rgb(243,49,53)"/><text x="73.1282%" y="510.50"></text></g><g><title>_mean (numpy/core/_methods.py:180) (14 samples, 0.14%)</title><rect x="72.9862%" y="500" width="0.1375%" height="15" fill="rgb(247,216,33)"/><text x="73.2362%" y="510.50"></text></g><g><title>_get_moments (thinc/layers/layernorm.py:76) (40 samples, 0.39%)</title><rect x="72.7407%" y="484" width="0.3929%" height="15" fill="rgb(226,26,14)"/><text x="72.9907%" y="494.50"></text></g><g><title>_get_moments (thinc/layers/layernorm.py:77) (53 samples, 0.52%)</title><rect x="73.1336%" y="484" width="0.5206%" height="15" fill="rgb(215,49,53)"/><text x="73.3836%" y="494.50"></text></g><g><title>asarray_f (thinc/backends/ops.py:509) (16 samples, 0.16%)</title><rect x="73.6640%" y="500" width="0.1572%" height="15" fill="rgb(245,162,40)"/><text x="73.9140%" y="510.50"></text></g><g><title>forward (thinc/layers/layernorm.py:25) (112 samples, 1.10%)</title><rect x="72.7308%" y="468" width="1.1002%" height="15" fill="rgb(229,68,17)"/><text x="72.9808%" y="478.50"></text></g><g><title>_get_moments (thinc/layers/layernorm.py:78) (18 samples, 0.18%)</title><rect x="73.6542%" y="484" width="0.1768%" height="15" fill="rgb(213,182,10)"/><text x="73.9042%" y="494.50"></text></g><g><title>forward (thinc/layers/layernorm.py:26) (13 samples, 0.13%)</title><rect x="73.8310%" y="468" width="0.1277%" height="15" fill="rgb(245,125,30)"/><text x="74.0810%" y="478.50"></text></g><g><title>forward (thinc/layers/layernorm.py:27) (13 samples, 0.13%)</title><rect x="73.9587%" y="468" width="0.1277%" height="15" fill="rgb(232,202,2)"/><text x="74.2087%" y="478.50"></text></g><g><title>forward (thinc/layers/maxout.py:49) (157 samples, 1.54%)</title><rect x="74.1356%" y="468" width="1.5422%" height="15" fill="rgb(237,140,51)"/><text x="74.3856%" y="478.50"></text></g><g><title>forward (thinc/layers/maxout.py:50) (17 samples, 0.17%)</title><rect x="75.6778%" y="468" width="0.1670%" height="15" fill="rgb(236,157,25)"/><text x="75.9278%" y="478.50"></text></g><g><title>forward (thinc/layers/maxout.py:52) (19 samples, 0.19%)</title><rect x="75.8939%" y="468" width="0.1866%" height="15" fill="rgb(219,209,0)"/><text x="76.1439%" y="478.50"></text></g><g><title>forward (thinc/layers/chain.py:54) (348 samples, 3.42%)</title><rect x="72.6916%" y="436" width="3.4185%" height="15" fill="rgb(240,116,54)"/><text x="72.9416%" y="446.50">for..</text></g><g><title>__call__ (thinc/model.py:288) (347 samples, 3.41%)</title><rect x="72.7014%" y="452" width="3.4086%" height="15" fill="rgb(216,10,36)"/><text x="72.9514%" y="462.50">__c..</text></g><g><title>forward (thinc/layers/chain.py:54) (359 samples, 3.53%)</title><rect x="72.6621%" y="404" width="3.5265%" height="15" fill="rgb(222,72,44)"/><text x="72.9121%" y="414.50">for..</text></g><g><title>__call__ (thinc/model.py:288) (358 samples, 3.52%)</title><rect x="72.6719%" y="420" width="3.5167%" height="15" fill="rgb(232,159,9)"/><text x="72.9219%" y="430.50">__c..</text></g><g><title>forward (thinc/layers/residual.py:40) (375 samples, 3.68%)</title><rect x="72.6031%" y="340" width="3.6837%" height="15" fill="rgb(210,39,32)"/><text x="72.8531%" y="350.50">forw..</text></g><g><title>__call__ (thinc/model.py:288) (373 samples, 3.66%)</title><rect x="72.6228%" y="356" width="3.6640%" height="15" fill="rgb(216,194,45)"/><text x="72.8728%" y="366.50">__ca..</text></g><g><title>forward (thinc/layers/chain.py:54) (373 samples, 3.66%)</title><rect x="72.6228%" y="372" width="3.6640%" height="15" fill="rgb(218,18,35)"/><text x="72.8728%" y="382.50">forw..</text></g><g><title>__call__ (thinc/model.py:288) (371 samples, 3.64%)</title><rect x="72.6424%" y="388" width="3.6444%" height="15" fill="rgb(207,83,51)"/><text x="72.8924%" y="398.50">__ca..</text></g><g><title>_list_forward (thinc/layers/with_array.py:76) (381 samples, 3.74%)</title><rect x="72.5540%" y="276" width="3.7426%" height="15" fill="rgb(225,63,43)"/><text x="72.8040%" y="286.50">_lis..</text></g><g><title>__call__ (thinc/model.py:288) (381 samples, 3.74%)</title><rect x="72.5540%" y="292" width="3.7426%" height="15" fill="rgb(207,57,36)"/><text x="72.8040%" y="302.50">__ca..</text></g><g><title>forward (thinc/layers/chain.py:54) (381 samples, 3.74%)</title><rect x="72.5540%" y="308" width="3.7426%" height="15" fill="rgb(216,99,33)"/><text x="72.8040%" y="318.50">forw..</text></g><g><title>__call__ (thinc/model.py:288) (381 samples, 3.74%)</title><rect x="72.5540%" y="324" width="3.7426%" height="15" fill="rgb(225,42,16)"/><text x="72.8040%" y="334.50">__ca..</text></g><g><title>forward (thinc/layers/chain.py:54) (663 samples, 6.51%)</title><rect x="69.8527%" y="228" width="6.5128%" height="15" fill="rgb(220,201,45)"/><text x="70.1027%" y="238.50">forward (..</text></g><g><title>__call__ (thinc/model.py:288) (663 samples, 6.51%)</title><rect x="69.8527%" y="244" width="6.5128%" height="15" fill="rgb(225,33,4)"/><text x="70.1027%" y="254.50">__call__ ..</text></g><g><title>forward (thinc/layers/with_array.py:40) (399 samples, 3.92%)</title><rect x="72.4460%" y="260" width="3.9194%" height="15" fill="rgb(224,33,50)"/><text x="72.6960%" y="270.50">forw..</text></g><g><title>forward (thinc/layers/linear.py:35) (23 samples, 0.23%)</title><rect x="76.3752%" y="228" width="0.2259%" height="15" fill="rgb(246,198,51)"/><text x="76.6252%" y="238.50"></text></g><g><title>__call__ (thinc/model.py:288) (766 samples, 7.52%)</title><rect x="69.2534%" y="180" width="7.5246%" height="15" fill="rgb(205,22,4)"/><text x="69.5034%" y="190.50">__call__ (..</text></g><g><title>forward (thinc/layers/chain.py:54) (707 samples, 6.94%)</title><rect x="69.8330%" y="196" width="6.9450%" height="15" fill="rgb(206,3,8)"/><text x="70.0830%" y="206.50">forward (..</text></g><g><title>__call__ (thinc/model.py:288) (706 samples, 6.94%)</title><rect x="69.8428%" y="212" width="6.9352%" height="15" fill="rgb(251,23,15)"/><text x="70.0928%" y="222.50">__call__ ..</text></g><g><title>forward (spacy/ml/tb_framework.py:31) (808 samples, 7.94%)</title><rect x="68.9980%" y="164" width="7.9371%" height="15" fill="rgb(252,88,28)"/><text x="69.2480%" y="174.50">forward (sp..</text></g><g><title>forward (thinc/layers/softmax.py:34) (11 samples, 0.11%)</title><rect x="77.0923%" y="244" width="0.1081%" height="15" fill="rgb(212,127,14)"/><text x="77.3423%" y="254.50"></text></g><g><title>_list_forward (thinc/layers/with_array.py:76) (28 samples, 0.28%)</title><rect x="77.0432%" y="212" width="0.2750%" height="15" fill="rgb(247,145,37)"/><text x="77.2932%" y="222.50"></text></g><g><title>__call__ (thinc/model.py:288) (28 samples, 0.28%)</title><rect x="77.0432%" y="228" width="0.2750%" height="15" fill="rgb(209,117,53)"/><text x="77.2932%" y="238.50"></text></g><g><title>forward (thinc/layers/softmax.py:35) (12 samples, 0.12%)</title><rect x="77.2004%" y="244" width="0.1179%" height="15" fill="rgb(212,90,42)"/><text x="77.4504%" y="254.50"></text></g><g><title>predict (thinc/model.py:312) (858 samples, 8.43%)</title><rect x="68.9784%" y="148" width="8.4283%" height="15" fill="rgb(218,164,37)"/><text x="69.2284%" y="158.50">predict (thi..</text></g><g><title>forward (thinc/layers/chain.py:54) (46 samples, 0.45%)</title><rect x="76.9548%" y="164" width="0.4519%" height="15" fill="rgb(246,65,34)"/><text x="77.2048%" y="174.50"></text></g><g><title>__call__ (thinc/model.py:288) (45 samples, 0.44%)</title><rect x="76.9646%" y="180" width="0.4420%" height="15" fill="rgb(231,100,33)"/><text x="77.2146%" y="190.50"></text></g><g><title>forward (thinc/layers/with_array.py:40) (44 samples, 0.43%)</title><rect x="76.9745%" y="196" width="0.4322%" height="15" fill="rgb(228,126,14)"/><text x="77.2245%" y="206.50"></text></g><g><title>set_dropout_rate (thinc/model.py:765) (19 samples, 0.19%)</title><rect x="77.4165%" y="148" width="0.1866%" height="15" fill="rgb(215,173,21)"/><text x="77.6665%" y="158.50"></text></g><g><title>set_dropout_rate (thinc/model.py:767) (11 samples, 0.11%)</title><rect x="77.6031%" y="148" width="0.1081%" height="15" fill="rgb(210,6,40)"/><text x="77.8531%" y="158.50"></text></g><g><title>Similarity_between_words (SemanticText.py:178) (1,725 samples, 16.94%)</title><rect x="60.7859%" y="116" width="16.9450%" height="15" fill="rgb(212,48,18)"/><text x="61.0359%" y="126.50">Similarity_between_words (..</text></g><g><title>__call__ (spacy/language.py:995) (1,696 samples, 16.66%)</title><rect x="61.0707%" y="132" width="16.6601%" height="15" fill="rgb(230,214,11)"/><text x="61.3207%" y="142.50">__call__ (spacy/language.p..</text></g><g><title>__call__ (spacy/language.py:983) (13 samples, 0.13%)</title><rect x="77.7308%" y="132" width="0.1277%" height="15" fill="rgb(254,105,39)"/><text x="77.9808%" y="142.50"></text></g><g><title>make_doc (spacy/language.py:1065) (11 samples, 0.11%)</title><rect x="77.7505%" y="148" width="0.1081%" height="15" fill="rgb(245,158,5)"/><text x="78.0005%" y="158.50"></text></g><g><title>match (spacy/pipeline/attributeruler.py:108) (23 samples, 0.23%)</title><rect x="78.9587%" y="164" width="0.2259%" height="15" fill="rgb(249,208,11)"/><text x="79.2087%" y="174.50"></text></g><g><title>__call__ (spacy/pipeline/attributeruler.py:101) (27 samples, 0.27%)</title><rect x="78.9489%" y="148" width="0.2652%" height="15" fill="rgb(210,39,28)"/><text x="79.1989%" y="158.50"></text></g><g><title>forward (spacy_legacy/layers/staticvectors_v1.py:42) (20 samples, 0.20%)</title><rect x="79.6758%" y="292" width="0.1965%" height="15" fill="rgb(211,56,53)"/><text x="79.9258%" y="302.50"></text></g><g><title>&lt;listcomp&gt; (spacy_legacy/layers/staticvectors_v1.py:42) (20 samples, 0.20%)</title><rect x="79.6758%" y="308" width="0.1965%" height="15" fill="rgb(226,201,30)"/><text x="79.9258%" y="318.50"></text></g><g><title>forward (spacy_legacy/layers/staticvectors_v1.py:45) (29 samples, 0.28%)</title><rect x="79.8723%" y="292" width="0.2849%" height="15" fill="rgb(239,101,34)"/><text x="80.1223%" y="302.50"></text></g><g><title>forward (thinc/layers/hashembed.py:70) (15 samples, 0.15%)</title><rect x="80.5697%" y="452" width="0.1473%" height="15" fill="rgb(226,209,5)"/><text x="80.8197%" y="462.50"></text></g><g><title>forward (thinc/layers/hashembed.py:71) (20 samples, 0.20%)</title><rect x="80.7171%" y="452" width="0.1965%" height="15" fill="rgb(250,105,47)"/><text x="80.9671%" y="462.50"></text></g><g><title>_sum (numpy/core/_methods.py:47) (12 samples, 0.12%)</title><rect x="80.7957%" y="468" width="0.1179%" height="15" fill="rgb(230,72,3)"/><text x="81.0457%" y="478.50"></text></g><g><title>forward (thinc/layers/chain.py:54) (47 samples, 0.46%)</title><rect x="80.4617%" y="420" width="0.4617%" height="15" fill="rgb(232,218,39)"/><text x="80.7117%" y="430.50"></text></g><g><title>__call__ (thinc/model.py:288) (47 samples, 0.46%)</title><rect x="80.4617%" y="436" width="0.4617%" height="15" fill="rgb(248,166,6)"/><text x="80.7117%" y="446.50"></text></g><g><title>forward (thinc/layers/concatenate.py:44) (50 samples, 0.49%)</title><rect x="80.4420%" y="372" width="0.4912%" height="15" fill="rgb(247,89,20)"/><text x="80.6920%" y="382.50"></text></g><g><title>&lt;listcomp&gt; (thinc/layers/concatenate.py:44) (50 samples, 0.49%)</title><rect x="80.4420%" y="388" width="0.4912%" height="15" fill="rgb(248,130,54)"/><text x="80.6920%" y="398.50"></text></g><g><title>__call__ (thinc/model.py:288) (49 samples, 0.48%)</title><rect x="80.4519%" y="404" width="0.4813%" height="15" fill="rgb(234,196,4)"/><text x="80.7019%" y="414.50"></text></g><g><title>_ragged_forward (thinc/layers/with_array.py:90) (58 samples, 0.57%)</title><rect x="80.4322%" y="340" width="0.5697%" height="15" fill="rgb(250,143,31)"/><text x="80.6822%" y="350.50"></text></g><g><title>__call__ (thinc/model.py:288) (57 samples, 0.56%)</title><rect x="80.4420%" y="356" width="0.5599%" height="15" fill="rgb(211,110,34)"/><text x="80.6920%" y="366.50"></text></g><g><title>forward (thinc/layers/chain.py:54) (80 samples, 0.79%)</title><rect x="80.2456%" y="292" width="0.7859%" height="15" fill="rgb(215,124,48)"/><text x="80.4956%" y="302.50"></text></g><g><title>__call__ (thinc/model.py:288) (80 samples, 0.79%)</title><rect x="80.2456%" y="308" width="0.7859%" height="15" fill="rgb(216,46,13)"/><text x="80.4956%" y="318.50"></text></g><g><title>forward (thinc/layers/with_array.py:30) (64 samples, 0.63%)</title><rect x="80.4028%" y="324" width="0.6287%" height="15" fill="rgb(205,184,25)"/><text x="80.6528%" y="334.50"></text></g><g><title>forward (thinc/layers/concatenate.py:44) (151 samples, 1.48%)</title><rect x="79.5580%" y="244" width="1.4833%" height="15" fill="rgb(228,1,10)"/><text x="79.8080%" y="254.50"></text></g><g><title>&lt;listcomp&gt; (thinc/layers/concatenate.py:44) (150 samples, 1.47%)</title><rect x="79.5678%" y="260" width="1.4735%" height="15" fill="rgb(213,116,27)"/><text x="79.8178%" y="270.50"></text></g><g><title>__call__ (thinc/model.py:288) (148 samples, 1.45%)</title><rect x="79.5874%" y="276" width="1.4538%" height="15" fill="rgb(241,95,50)"/><text x="79.8374%" y="286.50"></text></g><g><title>_get_moments (thinc/layers/layernorm.py:76) (18 samples, 0.18%)</title><rect x="81.2181%" y="372" width="0.1768%" height="15" fill="rgb(238,48,32)"/><text x="81.4681%" y="382.50"></text></g><g><title>_get_moments (thinc/layers/layernorm.py:77) (11 samples, 0.11%)</title><rect x="81.3949%" y="372" width="0.1081%" height="15" fill="rgb(235,113,49)"/><text x="81.6449%" y="382.50"></text></g><g><title>forward (thinc/layers/layernorm.py:25) (33 samples, 0.32%)</title><rect x="81.2181%" y="356" width="0.3242%" height="15" fill="rgb(205,127,43)"/><text x="81.4681%" y="366.50"></text></g><g><title>forward (thinc/layers/maxout.py:49) (36 samples, 0.35%)</title><rect x="81.6601%" y="356" width="0.3536%" height="15" fill="rgb(250,162,2)"/><text x="81.9101%" y="366.50"></text></g><g><title>_ragged_forward (thinc/layers/with_array.py:90) (91 samples, 0.89%)</title><rect x="81.1984%" y="260" width="0.8939%" height="15" fill="rgb(220,13,41)"/><text x="81.4484%" y="270.50"></text></g><g><title>__call__ (thinc/model.py:288) (90 samples, 0.88%)</title><rect x="81.2083%" y="276" width="0.8841%" height="15" fill="rgb(249,221,25)"/><text x="81.4583%" y="286.50"></text></g><g><title>forward (thinc/layers/chain.py:54) (90 samples, 0.88%)</title><rect x="81.2083%" y="292" width="0.8841%" height="15" fill="rgb(215,208,19)"/><text x="81.4583%" y="302.50"></text></g><g><title>__call__ (thinc/model.py:288) (89 samples, 0.87%)</title><rect x="81.2181%" y="308" width="0.8743%" height="15" fill="rgb(236,175,2)"/><text x="81.4681%" y="318.50"></text></g><g><title>forward (thinc/layers/chain.py:54) (89 samples, 0.87%)</title><rect x="81.2181%" y="324" width="0.8743%" height="15" fill="rgb(241,52,2)"/><text x="81.4681%" y="334.50"></text></g><g><title>__call__ (thinc/model.py:288) (89 samples, 0.87%)</title><rect x="81.2181%" y="340" width="0.8743%" height="15" fill="rgb(248,140,14)"/><text x="81.4681%" y="350.50"></text></g><g><title>forward (thinc/layers/chain.py:54) (265 samples, 2.60%)</title><rect x="79.5285%" y="212" width="2.6031%" height="15" fill="rgb(253,22,42)"/><text x="79.7785%" y="222.50">fo..</text></g><g><title>__call__ (thinc/model.py:288) (263 samples, 2.58%)</title><rect x="79.5481%" y="228" width="2.5835%" height="15" fill="rgb(234,61,47)"/><text x="79.7981%" y="238.50">__..</text></g><g><title>forward (thinc/layers/with_array.py:30) (96 samples, 0.94%)</title><rect x="81.1886%" y="244" width="0.9430%" height="15" fill="rgb(208,226,15)"/><text x="81.4386%" y="254.50"></text></g><g><title>_get_moments (thinc/layers/layernorm.py:76) (34 samples, 0.33%)</title><rect x="82.3969%" y="436" width="0.3340%" height="15" fill="rgb(217,221,4)"/><text x="82.6469%" y="446.50"></text></g><g><title>_get_moments (thinc/layers/layernorm.py:77) (54 samples, 0.53%)</title><rect x="82.7308%" y="436" width="0.5305%" height="15" fill="rgb(212,174,34)"/><text x="82.9808%" y="446.50"></text></g><g><title>forward (thinc/layers/layernorm.py:25) (99 samples, 0.97%)</title><rect x="82.3969%" y="420" width="0.9725%" height="15" fill="rgb(253,83,4)"/><text x="82.6469%" y="430.50"></text></g><g><title>_get_moments (thinc/layers/layernorm.py:78) (11 samples, 0.11%)</title><rect x="83.2613%" y="436" width="0.1081%" height="15" fill="rgb(250,195,49)"/><text x="83.5113%" y="446.50"></text></g><g><title>forward (thinc/layers/layernorm.py:26) (13 samples, 0.13%)</title><rect x="83.3694%" y="420" width="0.1277%" height="15" fill="rgb(241,192,25)"/><text x="83.6194%" y="430.50"></text></g><g><title>forward (thinc/layers/layernorm.py:27) (14 samples, 0.14%)</title><rect x="83.4971%" y="420" width="0.1375%" height="15" fill="rgb(208,124,10)"/><text x="83.7471%" y="430.50"></text></g><g><title>forward (thinc/layers/maxout.py:49) (173 samples, 1.70%)</title><rect x="83.7132%" y="420" width="1.6994%" height="15" fill="rgb(222,33,0)"/><text x="83.9632%" y="430.50"></text></g><g><title>forward (thinc/layers/maxout.py:50) (16 samples, 0.16%)</title><rect x="85.4126%" y="420" width="0.1572%" height="15" fill="rgb(234,209,28)"/><text x="85.6626%" y="430.50"></text></g><g><title>forward (thinc/layers/maxout.py:52) (16 samples, 0.16%)</title><rect x="85.6189%" y="420" width="0.1572%" height="15" fill="rgb(224,11,23)"/><text x="85.8689%" y="430.50"></text></g><g><title>forward (thinc/layers/chain.py:54) (351 samples, 3.45%)</title><rect x="82.3379%" y="388" width="3.4479%" height="15" fill="rgb(232,99,1)"/><text x="82.5879%" y="398.50">for..</text></g><g><title>__call__ (thinc/model.py:288) (348 samples, 3.42%)</title><rect x="82.3674%" y="404" width="3.4185%" height="15" fill="rgb(237,95,45)"/><text x="82.6174%" y="414.50">__c..</text></g><g><title>forward (thinc/layers/chain.py:54) (357 samples, 3.51%)</title><rect x="82.3084%" y="356" width="3.5069%" height="15" fill="rgb(208,109,11)"/><text x="82.5584%" y="366.50">for..</text></g><g><title>__call__ (thinc/model.py:288) (356 samples, 3.50%)</title><rect x="82.3183%" y="372" width="3.4971%" height="15" fill="rgb(216,190,48)"/><text x="82.5683%" y="382.50">__c..</text></g><g><title>forward (thinc/layers/residual.py:40) (370 samples, 3.63%)</title><rect x="82.2790%" y="292" width="3.6346%" height="15" fill="rgb(251,171,36)"/><text x="82.5290%" y="302.50">forw..</text></g><g><title>__call__ (thinc/model.py:288) (370 samples, 3.63%)</title><rect x="82.2790%" y="308" width="3.6346%" height="15" fill="rgb(230,62,22)"/><text x="82.5290%" y="318.50">__ca..</text></g><g><title>forward (thinc/layers/chain.py:54) (369 samples, 3.62%)</title><rect x="82.2888%" y="324" width="3.6248%" height="15" fill="rgb(225,114,35)"/><text x="82.5388%" y="334.50">forw..</text></g><g><title>__call__ (thinc/model.py:288) (368 samples, 3.61%)</title><rect x="82.2986%" y="340" width="3.6149%" height="15" fill="rgb(215,118,42)"/><text x="82.5486%" y="350.50">__ca..</text></g><g><title>forward (thinc/layers/chain.py:54) (376 samples, 3.69%)</title><rect x="82.2593%" y="260" width="3.6935%" height="15" fill="rgb(243,119,21)"/><text x="82.5093%" y="270.50">forw..</text></g><g><title>__call__ (thinc/model.py:288) (376 samples, 3.69%)</title><rect x="82.2593%" y="276" width="3.6935%" height="15" fill="rgb(252,177,53)"/><text x="82.5093%" y="286.50">__ca..</text></g><g><title>_list_forward (thinc/layers/with_array.py:76) (378 samples, 3.71%)</title><rect x="82.2495%" y="228" width="3.7132%" height="15" fill="rgb(237,209,29)"/><text x="82.4995%" y="238.50">_lis..</text></g><g><title>__call__ (thinc/model.py:288) (377 samples, 3.70%)</title><rect x="82.2593%" y="244" width="3.7033%" height="15" fill="rgb(212,65,23)"/><text x="82.5093%" y="254.50">__ca..</text></g><g><title>predict (spacy/pipeline/tok2vec.py:121) (681 samples, 6.69%)</title><rect x="79.3615%" y="148" width="6.6896%" height="15" fill="rgb(230,222,46)"/><text x="79.6115%" y="158.50">predict (..</text></g><g><title>predict (thinc/model.py:312) (681 samples, 6.69%)</title><rect x="79.3615%" y="164" width="6.6896%" height="15" fill="rgb(215,135,32)"/><text x="79.6115%" y="174.50">predict (..</text></g><g><title>forward (thinc/layers/chain.py:54) (665 samples, 6.53%)</title><rect x="79.5187%" y="180" width="6.5324%" height="15" fill="rgb(246,101,22)"/><text x="79.7687%" y="190.50">forward (..</text></g><g><title>__call__ (thinc/model.py:288) (665 samples, 6.53%)</title><rect x="79.5187%" y="196" width="6.5324%" height="15" fill="rgb(206,107,13)"/><text x="79.7687%" y="206.50">__call__ ..</text></g><g><title>forward (thinc/layers/with_array.py:40) (398 samples, 3.91%)</title><rect x="82.1415%" y="212" width="3.9096%" height="15" fill="rgb(250,100,44)"/><text x="82.3915%" y="222.50">forw..</text></g><g><title>forward (spacy/ml/_precomputable_affine.py:22) (43 samples, 0.42%)</title><rect x="86.4833%" y="196" width="0.4224%" height="15" fill="rgb(231,147,38)"/><text x="86.7333%" y="206.50"></text></g><g><title>forward (spacy/ml/_precomputable_affine.py:24) (14 samples, 0.14%)</title><rect x="86.9155%" y="196" width="0.1375%" height="15" fill="rgb(229,8,40)"/><text x="87.1655%" y="206.50"></text></g><g><title>vstack (&lt;__array_function__ internals&gt;:5) (11 samples, 0.11%)</title><rect x="86.9450%" y="212" width="0.1081%" height="15" fill="rgb(221,135,30)"/><text x="87.1950%" y="222.50"></text></g><g><title>forward (spacy_legacy/layers/staticvectors_v1.py:42) (13 samples, 0.13%)</title><rect x="87.1807%" y="340" width="0.1277%" height="15" fill="rgb(249,193,18)"/><text x="87.4307%" y="350.50"></text></g><g><title>&lt;listcomp&gt; (spacy_legacy/layers/staticvectors_v1.py:42) (12 samples, 0.12%)</title><rect x="87.1906%" y="356" width="0.1179%" height="15" fill="rgb(209,133,39)"/><text x="87.4406%" y="366.50"></text></g><g><title>forward (spacy_legacy/layers/staticvectors_v1.py:45) (18 samples, 0.18%)</title><rect x="87.3084%" y="340" width="0.1768%" height="15" fill="rgb(232,100,14)"/><text x="87.5584%" y="350.50"></text></g><g><title>forward (thinc/layers/hashembed.py:71) (22 samples, 0.22%)</title><rect x="88.0059%" y="500" width="0.2161%" height="15" fill="rgb(224,185,1)"/><text x="88.2559%" y="510.50"></text></g><g><title>_sum (numpy/core/_methods.py:47) (11 samples, 0.11%)</title><rect x="88.1139%" y="516" width="0.1081%" height="15" fill="rgb(223,139,8)"/><text x="88.3639%" y="526.50"></text></g><g><title>forward (thinc/layers/concatenate.py:44) (49 samples, 0.48%)</title><rect x="87.7505%" y="420" width="0.4813%" height="15" fill="rgb(232,213,38)"/><text x="88.0005%" y="430.50"></text></g><g><title>&lt;listcomp&gt; (thinc/layers/concatenate.py:44) (46 samples, 0.45%)</title><rect x="87.7800%" y="436" width="0.4519%" height="15" fill="rgb(207,94,22)"/><text x="88.0300%" y="446.50"></text></g><g><title>__call__ (thinc/model.py:288) (46 samples, 0.45%)</title><rect x="87.7800%" y="452" width="0.4519%" height="15" fill="rgb(219,183,54)"/><text x="88.0300%" y="462.50"></text></g><g><title>forward (thinc/layers/chain.py:54) (45 samples, 0.44%)</title><rect x="87.7898%" y="468" width="0.4420%" height="15" fill="rgb(216,185,54)"/><text x="88.0398%" y="478.50"></text></g><g><title>__call__ (thinc/model.py:288) (44 samples, 0.43%)</title><rect x="87.7996%" y="484" width="0.4322%" height="15" fill="rgb(254,217,39)"/><text x="88.0496%" y="494.50"></text></g><g><title>__call__ (thinc/model.py:288) (53 samples, 0.52%)</title><rect x="87.7505%" y="404" width="0.5206%" height="15" fill="rgb(240,178,23)"/><text x="88.0005%" y="414.50"></text></g><g><title>forward (thinc/layers/with_array.py:30) (60 samples, 0.59%)</title><rect x="87.7112%" y="372" width="0.5894%" height="15" fill="rgb(218,11,47)"/><text x="87.9612%" y="382.50"></text></g><g><title>_ragged_forward (thinc/layers/with_array.py:90) (59 samples, 0.58%)</title><rect x="87.7210%" y="388" width="0.5796%" height="15" fill="rgb(218,51,51)"/><text x="87.9710%" y="398.50"></text></g><g><title>forward (thinc/layers/concatenate.py:44) (125 samples, 1.23%)</title><rect x="87.1022%" y="292" width="1.2279%" height="15" fill="rgb(238,126,27)"/><text x="87.3522%" y="302.50"></text></g><g><title>&lt;listcomp&gt; (thinc/layers/concatenate.py:44) (124 samples, 1.22%)</title><rect x="87.1120%" y="308" width="1.2181%" height="15" fill="rgb(249,202,22)"/><text x="87.3620%" y="318.50"></text></g><g><title>__call__ (thinc/model.py:288) (123 samples, 1.21%)</title><rect x="87.1218%" y="324" width="1.2083%" height="15" fill="rgb(254,195,49)"/><text x="87.3718%" y="334.50"></text></g><g><title>forward (thinc/layers/chain.py:54) (82 samples, 0.81%)</title><rect x="87.5246%" y="340" width="0.8055%" height="15" fill="rgb(208,123,14)"/><text x="87.7746%" y="350.50"></text></g><g><title>__call__ (thinc/model.py:288) (81 samples, 0.80%)</title><rect x="87.5344%" y="356" width="0.7957%" height="15" fill="rgb(224,200,8)"/><text x="87.7844%" y="366.50"></text></g><g><title>_get_moments (thinc/layers/layernorm.py:76) (13 samples, 0.13%)</title><rect x="88.4479%" y="420" width="0.1277%" height="15" fill="rgb(217,61,36)"/><text x="88.6979%" y="430.50"></text></g><g><title>_get_moments (thinc/layers/layernorm.py:77) (14 samples, 0.14%)</title><rect x="88.5756%" y="420" width="0.1375%" height="15" fill="rgb(206,35,45)"/><text x="88.8256%" y="430.50"></text></g><g><title>forward (thinc/layers/layernorm.py:25) (33 samples, 0.32%)</title><rect x="88.4479%" y="404" width="0.3242%" height="15" fill="rgb(217,65,33)"/><text x="88.6979%" y="414.50"></text></g><g><title>forward (thinc/layers/maxout.py:49) (52 samples, 0.51%)</title><rect x="88.8605%" y="404" width="0.5108%" height="15" fill="rgb(222,158,48)"/><text x="89.1105%" y="414.50"></text></g><g><title>forward (thinc/layers/chain.py:54) (102 samples, 1.00%)</title><rect x="88.4381%" y="372" width="1.0020%" height="15" fill="rgb(254,2,54)"/><text x="88.6881%" y="382.50"></text></g><g><title>__call__ (thinc/model.py:288) (102 samples, 1.00%)</title><rect x="88.4381%" y="388" width="1.0020%" height="15" fill="rgb(250,143,38)"/><text x="88.6881%" y="398.50"></text></g><g><title>_ragged_forward (thinc/layers/with_array.py:90) (105 samples, 1.03%)</title><rect x="88.4283%" y="308" width="1.0314%" height="15" fill="rgb(248,25,0)"/><text x="88.6783%" y="318.50"></text></g><g><title>__call__ (thinc/model.py:288) (105 samples, 1.03%)</title><rect x="88.4283%" y="324" width="1.0314%" height="15" fill="rgb(206,152,27)"/><text x="88.6783%" y="334.50"></text></g><g><title>forward (thinc/layers/chain.py:54) (105 samples, 1.03%)</title><rect x="88.4283%" y="340" width="1.0314%" height="15" fill="rgb(240,77,30)"/><text x="88.6783%" y="350.50"></text></g><g><title>__call__ (thinc/model.py:288) (105 samples, 1.03%)</title><rect x="88.4283%" y="356" width="1.0314%" height="15" fill="rgb(231,5,3)"/><text x="88.6783%" y="366.50"></text></g><g><title>forward (thinc/layers/chain.py:54) (241 samples, 2.37%)</title><rect x="87.1022%" y="260" width="2.3674%" height="15" fill="rgb(207,226,32)"/><text x="87.3522%" y="270.50">fo..</text></g><g><title>__call__ (thinc/model.py:288) (241 samples, 2.37%)</title><rect x="87.1022%" y="276" width="2.3674%" height="15" fill="rgb(222,207,47)"/><text x="87.3522%" y="286.50">__..</text></g><g><title>forward (thinc/layers/with_array.py:30) (106 samples, 1.04%)</title><rect x="88.4283%" y="292" width="1.0413%" height="15" fill="rgb(229,115,45)"/><text x="88.6783%" y="302.50"></text></g><g><title>_get_moments (thinc/layers/layernorm.py:76) (40 samples, 0.39%)</title><rect x="89.7250%" y="484" width="0.3929%" height="15" fill="rgb(224,191,6)"/><text x="89.9750%" y="494.50"></text></g><g><title>_mean (numpy/core/_methods.py:180) (12 samples, 0.12%)</title><rect x="90.0000%" y="500" width="0.1179%" height="15" fill="rgb(230,227,24)"/><text x="90.2500%" y="510.50"></text></g><g><title>_get_moments (thinc/layers/layernorm.py:77) (49 samples, 0.48%)</title><rect x="90.1179%" y="484" width="0.4813%" height="15" fill="rgb(228,80,19)"/><text x="90.3679%" y="494.50"></text></g><g><title>forward (thinc/layers/layernorm.py:25) (96 samples, 0.94%)</title><rect x="89.7250%" y="468" width="0.9430%" height="15" fill="rgb(247,229,0)"/><text x="89.9750%" y="478.50"></text></g><g><title>forward (thinc/layers/layernorm.py:26) (17 samples, 0.17%)</title><rect x="90.6680%" y="468" width="0.1670%" height="15" fill="rgb(237,194,15)"/><text x="90.9180%" y="478.50"></text></g><g><title>forward (thinc/layers/layernorm.py:27) (16 samples, 0.16%)</title><rect x="90.8350%" y="468" width="0.1572%" height="15" fill="rgb(219,203,20)"/><text x="91.0850%" y="478.50"></text></g><g><title>forward (thinc/layers/maxout.py:49) (173 samples, 1.70%)</title><rect x="91.0707%" y="468" width="1.6994%" height="15" fill="rgb(234,128,8)"/><text x="91.3207%" y="478.50"></text></g><g><title>forward (thinc/layers/maxout.py:50) (17 samples, 0.17%)</title><rect x="92.7701%" y="468" width="0.1670%" height="15" fill="rgb(248,202,8)"/><text x="93.0201%" y="478.50"></text></g><g><title>forward (thinc/layers/chain.py:54) (346 samples, 3.40%)</title><rect x="89.6758%" y="436" width="3.3988%" height="15" fill="rgb(206,104,37)"/><text x="89.9258%" y="446.50">for..</text></g><g><title>__call__ (thinc/model.py:288) (345 samples, 3.39%)</title><rect x="89.6857%" y="452" width="3.3890%" height="15" fill="rgb(223,8,27)"/><text x="89.9357%" y="462.50">__c..</text></g><g><title>forward (thinc/layers/maxout.py:52) (11 samples, 0.11%)</title><rect x="92.9666%" y="468" width="0.1081%" height="15" fill="rgb(216,217,28)"/><text x="93.2166%" y="478.50"></text></g><g><title>forward (thinc/layers/chain.py:54) (354 samples, 3.48%)</title><rect x="89.6464%" y="404" width="3.4774%" height="15" fill="rgb(249,199,1)"/><text x="89.8964%" y="414.50">for..</text></g><g><title>__call__ (thinc/model.py:288) (352 samples, 3.46%)</title><rect x="89.6660%" y="420" width="3.4578%" height="15" fill="rgb(240,85,17)"/><text x="89.9160%" y="430.50">__c..</text></g><g><title>forward (thinc/layers/chain.py:54) (366 samples, 3.60%)</title><rect x="89.6267%" y="372" width="3.5953%" height="15" fill="rgb(206,108,45)"/><text x="89.8767%" y="382.50">forw..</text></g><g><title>__call__ (thinc/model.py:288) (364 samples, 3.58%)</title><rect x="89.6464%" y="388" width="3.5756%" height="15" fill="rgb(245,210,41)"/><text x="89.8964%" y="398.50">__ca..</text></g><g><title>forward (thinc/layers/residual.py:40) (368 samples, 3.61%)</title><rect x="89.6169%" y="340" width="3.6149%" height="15" fill="rgb(206,13,37)"/><text x="89.8669%" y="350.50">forw..</text></g><g><title>__call__ (thinc/model.py:288) (368 samples, 3.61%)</title><rect x="89.6169%" y="356" width="3.6149%" height="15" fill="rgb(250,61,18)"/><text x="89.8669%" y="366.50">__ca..</text></g><g><title>forward (thinc/layers/chain.py:54) (372 samples, 3.65%)</title><rect x="89.6071%" y="308" width="3.6542%" height="15" fill="rgb(235,172,48)"/><text x="89.8571%" y="318.50">forw..</text></g><g><title>__call__ (thinc/model.py:288) (372 samples, 3.65%)</title><rect x="89.6071%" y="324" width="3.6542%" height="15" fill="rgb(249,201,17)"/><text x="89.8571%" y="334.50">__ca..</text></g><g><title>_list_forward (thinc/layers/with_array.py:76) (376 samples, 3.69%)</title><rect x="89.5776%" y="276" width="3.6935%" height="15" fill="rgb(219,208,6)"/><text x="89.8276%" y="286.50">_lis..</text></g><g><title>__call__ (thinc/model.py:288) (376 samples, 3.69%)</title><rect x="89.5776%" y="292" width="3.6935%" height="15" fill="rgb(248,31,23)"/><text x="89.8276%" y="302.50">__ca..</text></g><g><title>forward (thinc/layers/chain.py:54) (638 samples, 6.27%)</title><rect x="87.0923%" y="228" width="6.2672%" height="15" fill="rgb(245,15,42)"/><text x="87.3423%" y="238.50">forward ..</text></g><g><title>__call__ (thinc/model.py:288) (637 samples, 6.26%)</title><rect x="87.1022%" y="244" width="6.2574%" height="15" fill="rgb(222,217,39)"/><text x="87.3522%" y="254.50">__call__..</text></g><g><title>forward (thinc/layers/with_array.py:40) (396 samples, 3.89%)</title><rect x="89.4695%" y="260" width="3.8900%" height="15" fill="rgb(210,219,27)"/><text x="89.7195%" y="270.50">forw..</text></g><g><title>forward (thinc/layers/linear.py:35) (15 samples, 0.15%)</title><rect x="93.3694%" y="228" width="0.1473%" height="15" fill="rgb(252,166,36)"/><text x="93.6194%" y="238.50"></text></g><g><title>__call__ (thinc/model.py:288) (735 samples, 7.22%)</title><rect x="86.4145%" y="180" width="7.2200%" height="15" fill="rgb(245,132,34)"/><text x="86.6645%" y="190.50">__call__ (..</text></g><g><title>forward (thinc/layers/chain.py:54) (670 samples, 6.58%)</title><rect x="87.0530%" y="196" width="6.5815%" height="15" fill="rgb(236,54,3)"/><text x="87.3030%" y="206.50">forward (..</text></g><g><title>__call__ (thinc/model.py:288) (668 samples, 6.56%)</title><rect x="87.0727%" y="212" width="6.5619%" height="15" fill="rgb(241,173,43)"/><text x="87.3227%" y="222.50">__call__ ..</text></g><g><title>forward (spacy/ml/tb_framework.py:31) (780 samples, 7.66%)</title><rect x="86.1591%" y="164" width="7.6621%" height="15" fill="rgb(215,190,9)"/><text x="86.4091%" y="174.50">forward (s..</text></g><g><title>_list_forward (thinc/layers/with_array.py:76) (28 samples, 0.28%)</title><rect x="93.8802%" y="212" width="0.2750%" height="15" fill="rgb(242,101,16)"/><text x="94.1302%" y="222.50"></text></g><g><title>__call__ (thinc/model.py:288) (27 samples, 0.27%)</title><rect x="93.8900%" y="228" width="0.2652%" height="15" fill="rgb(223,190,21)"/><text x="94.1400%" y="238.50"></text></g><g><title>forward (thinc/layers/softmax.py:35) (17 samples, 0.17%)</title><rect x="93.9882%" y="244" width="0.1670%" height="15" fill="rgb(215,228,25)"/><text x="94.2382%" y="254.50"></text></g><g><title>predict (thinc/model.py:312) (818 samples, 8.04%)</title><rect x="86.1591%" y="148" width="8.0354%" height="15" fill="rgb(225,36,22)"/><text x="86.4091%" y="158.50">predict (th..</text></g><g><title>forward (thinc/layers/chain.py:54) (37 samples, 0.36%)</title><rect x="93.8310%" y="164" width="0.3635%" height="15" fill="rgb(251,106,46)"/><text x="94.0810%" y="174.50"></text></g><g><title>__call__ (thinc/model.py:288) (35 samples, 0.34%)</title><rect x="93.8507%" y="180" width="0.3438%" height="15" fill="rgb(208,90,1)"/><text x="94.1007%" y="190.50"></text></g><g><title>forward (thinc/layers/with_array.py:40) (35 samples, 0.34%)</title><rect x="93.8507%" y="196" width="0.3438%" height="15" fill="rgb(243,10,4)"/><text x="94.1007%" y="206.50"></text></g><g><title>set_dropout_rate (thinc/model.py:765) (20 samples, 0.20%)</title><rect x="94.2043%" y="148" width="0.1965%" height="15" fill="rgb(212,137,27)"/><text x="94.4543%" y="158.50"></text></g><g><title>set_dropout_rate (thinc/model.py:767) (12 samples, 0.12%)</title><rect x="94.4106%" y="148" width="0.1179%" height="15" fill="rgb(231,220,49)"/><text x="94.6606%" y="158.50"></text></g><g><title>Similarity_between_words (SemanticText.py:179) (1,712 samples, 16.82%)</title><rect x="77.7308%" y="116" width="16.8173%" height="15" fill="rgb(237,96,20)"/><text x="77.9808%" y="126.50">Similarity_between_words (..</text></g><g><title>__call__ (spacy/language.py:995) (1,684 samples, 16.54%)</title><rect x="78.0059%" y="132" width="16.5422%" height="15" fill="rgb(239,229,30)"/><text x="78.2559%" y="142.50">__call__ (spacy/language.p..</text></g><g><title>Semantic_Similarity (SemanticText.py:198) (3,484 samples, 34.22%)</title><rect x="60.7662%" y="84" width="34.2240%" height="15" fill="rgb(219,65,33)"/><text x="61.0162%" y="94.50">Semantic_Similarity (SemanticText.py:198)</text></g><g><title>Semantic_matching (SemanticText.py:184) (3,483 samples, 34.21%)</title><rect x="60.7760%" y="100" width="34.2141%" height="15" fill="rgb(243,134,7)"/><text x="61.0260%" y="110.50">Semantic_matching (SemanticText.py:184)</text></g><g><title>Similarity_between_words (SemanticText.py:180) (45 samples, 0.44%)</title><rect x="94.5481%" y="116" width="0.4420%" height="15" fill="rgb(216,177,54)"/><text x="94.7981%" y="126.50"></text></g><g><title>forward (thinc/layers/chain.py:54) (20 samples, 0.20%)</title><rect x="95.1965%" y="212" width="0.1965%" height="15" fill="rgb(211,160,20)"/><text x="95.4465%" y="222.50"></text></g><g><title>__call__ (thinc/model.py:288) (19 samples, 0.19%)</title><rect x="95.2063%" y="228" width="0.1866%" height="15" fill="rgb(239,85,39)"/><text x="95.4563%" y="238.50"></text></g><g><title>forward (thinc/layers/with_array.py:30) (11 samples, 0.11%)</title><rect x="95.2849%" y="244" width="0.1081%" height="15" fill="rgb(232,125,22)"/><text x="95.5349%" y="254.50"></text></g><g><title>_ragged_forward (thinc/layers/with_array.py:90) (11 samples, 0.11%)</title><rect x="95.2849%" y="260" width="0.1081%" height="15" fill="rgb(244,57,34)"/><text x="95.5349%" y="270.50"></text></g><g><title>__call__ (thinc/model.py:288) (11 samples, 0.11%)</title><rect x="95.2849%" y="276" width="0.1081%" height="15" fill="rgb(214,203,32)"/><text x="95.5349%" y="286.50"></text></g><g><title>forward (thinc/layers/chain.py:54) (11 samples, 0.11%)</title><rect x="95.2849%" y="292" width="0.1081%" height="15" fill="rgb(207,58,43)"/><text x="95.5349%" y="302.50"></text></g><g><title>__call__ (thinc/model.py:288) (11 samples, 0.11%)</title><rect x="95.2849%" y="308" width="0.1081%" height="15" fill="rgb(215,193,15)"/><text x="95.5349%" y="318.50"></text></g><g><title>forward (thinc/layers/layernorm.py:25) (12 samples, 0.12%)</title><rect x="95.4224%" y="420" width="0.1179%" height="15" fill="rgb(232,15,44)"/><text x="95.6724%" y="430.50"></text></g><g><title>forward (thinc/layers/maxout.py:49) (18 samples, 0.18%)</title><rect x="95.5894%" y="420" width="0.1768%" height="15" fill="rgb(212,3,48)"/><text x="95.8394%" y="430.50"></text></g><g><title>forward (thinc/layers/chain.py:54) (39 samples, 0.38%)</title><rect x="95.4028%" y="388" width="0.3831%" height="15" fill="rgb(218,128,7)"/><text x="95.6528%" y="398.50"></text></g><g><title>__call__ (thinc/model.py:288) (38 samples, 0.37%)</title><rect x="95.4126%" y="404" width="0.3733%" height="15" fill="rgb(226,216,39)"/><text x="95.6626%" y="414.50"></text></g><g><title>forward (thinc/layers/chain.py:54) (40 samples, 0.39%)</title><rect x="95.4028%" y="356" width="0.3929%" height="15" fill="rgb(243,47,51)"/><text x="95.6528%" y="366.50"></text></g><g><title>__call__ (thinc/model.py:288) (40 samples, 0.39%)</title><rect x="95.4028%" y="372" width="0.3929%" height="15" fill="rgb(241,183,40)"/><text x="95.6528%" y="382.50"></text></g><g><title>predict (spacy/pipeline/tok2vec.py:121) (66 samples, 0.65%)</title><rect x="95.1768%" y="148" width="0.6483%" height="15" fill="rgb(231,217,32)"/><text x="95.4268%" y="158.50"></text></g><g><title>predict (thinc/model.py:312) (66 samples, 0.65%)</title><rect x="95.1768%" y="164" width="0.6483%" height="15" fill="rgb(229,61,38)"/><text x="95.4268%" y="174.50"></text></g><g><title>forward (thinc/layers/chain.py:54) (64 samples, 0.63%)</title><rect x="95.1965%" y="180" width="0.6287%" height="15" fill="rgb(225,210,5)"/><text x="95.4465%" y="190.50"></text></g><g><title>__call__ (thinc/model.py:288) (64 samples, 0.63%)</title><rect x="95.1965%" y="196" width="0.6287%" height="15" fill="rgb(231,79,45)"/><text x="95.4465%" y="206.50"></text></g><g><title>forward (thinc/layers/with_array.py:40) (44 samples, 0.43%)</title><rect x="95.3929%" y="212" width="0.4322%" height="15" fill="rgb(224,100,7)"/><text x="95.6429%" y="222.50"></text></g><g><title>_list_forward (thinc/layers/with_array.py:76) (44 samples, 0.43%)</title><rect x="95.3929%" y="228" width="0.4322%" height="15" fill="rgb(241,198,18)"/><text x="95.6429%" y="238.50"></text></g><g><title>__call__ (thinc/model.py:288) (44 samples, 0.43%)</title><rect x="95.3929%" y="244" width="0.4322%" height="15" fill="rgb(252,97,53)"/><text x="95.6429%" y="254.50"></text></g><g><title>forward (thinc/layers/chain.py:54) (44 samples, 0.43%)</title><rect x="95.3929%" y="260" width="0.4322%" height="15" fill="rgb(220,88,7)"/><text x="95.6429%" y="270.50"></text></g><g><title>__call__ (thinc/model.py:288) (44 samples, 0.43%)</title><rect x="95.3929%" y="276" width="0.4322%" height="15" fill="rgb(213,176,14)"/><text x="95.6429%" y="286.50"></text></g><g><title>forward (thinc/layers/residual.py:40) (44 samples, 0.43%)</title><rect x="95.3929%" y="292" width="0.4322%" height="15" fill="rgb(246,73,7)"/><text x="95.6429%" y="302.50"></text></g><g><title>__call__ (thinc/model.py:288) (43 samples, 0.42%)</title><rect x="95.4028%" y="308" width="0.4224%" height="15" fill="rgb(245,64,36)"/><text x="95.6528%" y="318.50"></text></g><g><title>forward (thinc/layers/chain.py:54) (43 samples, 0.42%)</title><rect x="95.4028%" y="324" width="0.4224%" height="15" fill="rgb(245,80,10)"/><text x="95.6528%" y="334.50"></text></g><g><title>__call__ (thinc/model.py:288) (43 samples, 0.42%)</title><rect x="95.4028%" y="340" width="0.4224%" height="15" fill="rgb(232,107,50)"/><text x="95.6528%" y="350.50"></text></g><g><title>forward (thinc/layers/concatenate.py:44) (14 samples, 0.14%)</title><rect x="95.9037%" y="292" width="0.1375%" height="15" fill="rgb(253,3,0)"/><text x="96.1537%" y="302.50"></text></g><g><title>&lt;listcomp&gt; (thinc/layers/concatenate.py:44) (14 samples, 0.14%)</title><rect x="95.9037%" y="308" width="0.1375%" height="15" fill="rgb(212,99,53)"/><text x="96.1537%" y="318.50"></text></g><g><title>__call__ (thinc/model.py:288) (14 samples, 0.14%)</title><rect x="95.9037%" y="324" width="0.1375%" height="15" fill="rgb(249,111,54)"/><text x="96.1537%" y="334.50"></text></g><g><title>forward (thinc/layers/chain.py:54) (13 samples, 0.13%)</title><rect x="95.9136%" y="340" width="0.1277%" height="15" fill="rgb(249,55,30)"/><text x="96.1636%" y="350.50"></text></g><g><title>__call__ (thinc/model.py:288) (13 samples, 0.13%)</title><rect x="95.9136%" y="356" width="0.1277%" height="15" fill="rgb(237,47,42)"/><text x="96.1636%" y="366.50"></text></g><g><title>forward (thinc/layers/chain.py:54) (28 samples, 0.28%)</title><rect x="95.9037%" y="260" width="0.2750%" height="15" fill="rgb(211,20,18)"/><text x="96.1537%" y="270.50"></text></g><g><title>__call__ (thinc/model.py:288) (28 samples, 0.28%)</title><rect x="95.9037%" y="276" width="0.2750%" height="15" fill="rgb(231,203,46)"/><text x="96.1537%" y="286.50"></text></g><g><title>forward (thinc/layers/layernorm.py:25) (13 samples, 0.13%)</title><rect x="96.1984%" y="468" width="0.1277%" height="15" fill="rgb(237,142,3)"/><text x="96.4484%" y="478.50"></text></g><g><title>forward (thinc/layers/maxout.py:49) (11 samples, 0.11%)</title><rect x="96.3851%" y="468" width="0.1081%" height="15" fill="rgb(241,107,1)"/><text x="96.6351%" y="478.50"></text></g><g><title>forward (thinc/layers/chain.py:54) (63 samples, 0.62%)</title><rect x="95.8939%" y="228" width="0.6189%" height="15" fill="rgb(229,83,13)"/><text x="96.1439%" y="238.50"></text></g><g><title>__call__ (thinc/model.py:288) (62 samples, 0.61%)</title><rect x="95.9037%" y="244" width="0.6090%" height="15" fill="rgb(241,91,40)"/><text x="96.1537%" y="254.50"></text></g><g><title>forward (thinc/layers/with_array.py:40) (34 samples, 0.33%)</title><rect x="96.1788%" y="260" width="0.3340%" height="15" fill="rgb(225,3,45)"/><text x="96.4288%" y="270.50"></text></g><g><title>_list_forward (thinc/layers/with_array.py:76) (33 samples, 0.32%)</title><rect x="96.1886%" y="276" width="0.3242%" height="15" fill="rgb(244,223,14)"/><text x="96.4386%" y="286.50"></text></g><g><title>__call__ (thinc/model.py:288) (33 samples, 0.32%)</title><rect x="96.1886%" y="292" width="0.3242%" height="15" fill="rgb(224,124,37)"/><text x="96.4386%" y="302.50"></text></g><g><title>forward (thinc/layers/chain.py:54) (33 samples, 0.32%)</title><rect x="96.1886%" y="308" width="0.3242%" height="15" fill="rgb(251,171,30)"/><text x="96.4386%" y="318.50"></text></g><g><title>__call__ (thinc/model.py:288) (33 samples, 0.32%)</title><rect x="96.1886%" y="324" width="0.3242%" height="15" fill="rgb(236,46,54)"/><text x="96.4386%" y="334.50"></text></g><g><title>forward (thinc/layers/residual.py:40) (33 samples, 0.32%)</title><rect x="96.1886%" y="340" width="0.3242%" height="15" fill="rgb(245,213,5)"/><text x="96.4386%" y="350.50"></text></g><g><title>__call__ (thinc/model.py:288) (33 samples, 0.32%)</title><rect x="96.1886%" y="356" width="0.3242%" height="15" fill="rgb(230,144,27)"/><text x="96.4386%" y="366.50"></text></g><g><title>forward (thinc/layers/chain.py:54) (33 samples, 0.32%)</title><rect x="96.1886%" y="372" width="0.3242%" height="15" fill="rgb(220,86,6)"/><text x="96.4386%" y="382.50"></text></g><g><title>__call__ (thinc/model.py:288) (33 samples, 0.32%)</title><rect x="96.1886%" y="388" width="0.3242%" height="15" fill="rgb(240,20,13)"/><text x="96.4386%" y="398.50"></text></g><g><title>forward (thinc/layers/chain.py:54) (33 samples, 0.32%)</title><rect x="96.1886%" y="404" width="0.3242%" height="15" fill="rgb(217,89,34)"/><text x="96.4386%" y="414.50"></text></g><g><title>__call__ (thinc/model.py:288) (32 samples, 0.31%)</title><rect x="96.1984%" y="420" width="0.3143%" height="15" fill="rgb(229,13,5)"/><text x="96.4484%" y="430.50"></text></g><g><title>forward (thinc/layers/chain.py:54) (32 samples, 0.31%)</title><rect x="96.1984%" y="436" width="0.3143%" height="15" fill="rgb(244,67,35)"/><text x="96.4484%" y="446.50"></text></g><g><title>__call__ (thinc/model.py:288) (32 samples, 0.31%)</title><rect x="96.1984%" y="452" width="0.3143%" height="15" fill="rgb(221,40,2)"/><text x="96.4484%" y="462.50"></text></g><g><title>__call__ (thinc/model.py:288) (74 samples, 0.73%)</title><rect x="95.8251%" y="180" width="0.7269%" height="15" fill="rgb(237,157,21)"/><text x="96.0751%" y="190.50"></text></g><g><title>forward (thinc/layers/chain.py:54) (67 samples, 0.66%)</title><rect x="95.8939%" y="196" width="0.6582%" height="15" fill="rgb(222,94,11)"/><text x="96.1439%" y="206.50"></text></g><g><title>__call__ (thinc/model.py:288) (67 samples, 0.66%)</title><rect x="95.8939%" y="212" width="0.6582%" height="15" fill="rgb(249,113,6)"/><text x="96.1439%" y="222.50"></text></g><g><title>forward (spacy/ml/tb_framework.py:31) (78 samples, 0.77%)</title><rect x="95.8251%" y="164" width="0.7662%" height="15" fill="rgb(238,137,36)"/><text x="96.0751%" y="174.50"></text></g><g><title>predict (thinc/model.py:312) (82 samples, 0.81%)</title><rect x="95.8251%" y="148" width="0.8055%" height="15" fill="rgb(210,102,26)"/><text x="96.0751%" y="158.50"></text></g><g><title>Similarity_between_words (SemanticText.py:178) (169 samples, 1.66%)</title><rect x="94.9902%" y="116" width="1.6601%" height="15" fill="rgb(218,30,30)"/><text x="95.2402%" y="126.50"></text></g><g><title>__call__ (spacy/language.py:995) (166 samples, 1.63%)</title><rect x="95.0196%" y="132" width="1.6306%" height="15" fill="rgb(214,67,26)"/><text x="95.2696%" y="142.50"></text></g><g><title>forward (thinc/layers/concatenate.py:44) (15 samples, 0.15%)</title><rect x="96.7780%" y="244" width="0.1473%" height="15" fill="rgb(251,9,53)"/><text x="97.0280%" y="254.50"></text></g><g><title>&lt;listcomp&gt; (thinc/layers/concatenate.py:44) (15 samples, 0.15%)</title><rect x="96.7780%" y="260" width="0.1473%" height="15" fill="rgb(228,204,25)"/><text x="97.0280%" y="270.50"></text></g><g><title>__call__ (thinc/model.py:288) (14 samples, 0.14%)</title><rect x="96.7878%" y="276" width="0.1375%" height="15" fill="rgb(207,153,8)"/><text x="97.0378%" y="286.50"></text></g><g><title>forward (thinc/layers/chain.py:54) (27 samples, 0.27%)</title><rect x="96.7780%" y="212" width="0.2652%" height="15" fill="rgb(242,9,16)"/><text x="97.0280%" y="222.50"></text></g><g><title>__call__ (thinc/model.py:288) (27 samples, 0.27%)</title><rect x="96.7780%" y="228" width="0.2652%" height="15" fill="rgb(217,211,10)"/><text x="97.0280%" y="238.50"></text></g><g><title>forward (thinc/layers/layernorm.py:25) (11 samples, 0.11%)</title><rect x="97.0629%" y="420" width="0.1081%" height="15" fill="rgb(219,228,52)"/><text x="97.3129%" y="430.50"></text></g><g><title>forward (thinc/layers/maxout.py:49) (16 samples, 0.16%)</title><rect x="97.2004%" y="420" width="0.1572%" height="15" fill="rgb(231,92,29)"/><text x="97.4504%" y="430.50"></text></g><g><title>forward (thinc/layers/chain.py:54) (35 samples, 0.34%)</title><rect x="97.0629%" y="356" width="0.3438%" height="15" fill="rgb(232,8,23)"/><text x="97.3129%" y="366.50"></text></g><g><title>__call__ (thinc/model.py:288) (35 samples, 0.34%)</title><rect x="97.0629%" y="372" width="0.3438%" height="15" fill="rgb(216,211,34)"/><text x="97.3129%" y="382.50"></text></g><g><title>forward (thinc/layers/chain.py:54) (35 samples, 0.34%)</title><rect x="97.0629%" y="388" width="0.3438%" height="15" fill="rgb(236,151,0)"/><text x="97.3129%" y="398.50"></text></g><g><title>__call__ (thinc/model.py:288) (35 samples, 0.34%)</title><rect x="97.0629%" y="404" width="0.3438%" height="15" fill="rgb(209,168,3)"/><text x="97.3129%" y="414.50"></text></g><g><title>predict (spacy/pipeline/tok2vec.py:121) (67 samples, 0.66%)</title><rect x="96.7780%" y="148" width="0.6582%" height="15" fill="rgb(208,129,28)"/><text x="97.0280%" y="158.50"></text></g><g><title>predict (thinc/model.py:312) (67 samples, 0.66%)</title><rect x="96.7780%" y="164" width="0.6582%" height="15" fill="rgb(229,78,22)"/><text x="97.0280%" y="174.50"></text></g><g><title>forward (thinc/layers/chain.py:54) (67 samples, 0.66%)</title><rect x="96.7780%" y="180" width="0.6582%" height="15" fill="rgb(228,187,13)"/><text x="97.0280%" y="190.50"></text></g><g><title>__call__ (thinc/model.py:288) (67 samples, 0.66%)</title><rect x="96.7780%" y="196" width="0.6582%" height="15" fill="rgb(240,119,24)"/><text x="97.0280%" y="206.50"></text></g><g><title>forward (thinc/layers/with_array.py:40) (40 samples, 0.39%)</title><rect x="97.0432%" y="212" width="0.3929%" height="15" fill="rgb(209,194,42)"/><text x="97.2932%" y="222.50"></text></g><g><title>_list_forward (thinc/layers/with_array.py:76) (39 samples, 0.38%)</title><rect x="97.0530%" y="228" width="0.3831%" height="15" fill="rgb(247,200,46)"/><text x="97.3030%" y="238.50"></text></g><g><title>__call__ (thinc/model.py:288) (39 samples, 0.38%)</title><rect x="97.0530%" y="244" width="0.3831%" height="15" fill="rgb(218,76,16)"/><text x="97.3030%" y="254.50"></text></g><g><title>forward (thinc/layers/chain.py:54) (39 samples, 0.38%)</title><rect x="97.0530%" y="260" width="0.3831%" height="15" fill="rgb(225,21,48)"/><text x="97.3030%" y="270.50"></text></g><g><title>__call__ (thinc/model.py:288) (39 samples, 0.38%)</title><rect x="97.0530%" y="276" width="0.3831%" height="15" fill="rgb(239,223,50)"/><text x="97.3030%" y="286.50"></text></g><g><title>forward (thinc/layers/residual.py:40) (39 samples, 0.38%)</title><rect x="97.0530%" y="292" width="0.3831%" height="15" fill="rgb(244,45,21)"/><text x="97.3030%" y="302.50"></text></g><g><title>__call__ (thinc/model.py:288) (39 samples, 0.38%)</title><rect x="97.0530%" y="308" width="0.3831%" height="15" fill="rgb(232,33,43)"/><text x="97.3030%" y="318.50"></text></g><g><title>forward (thinc/layers/chain.py:54) (38 samples, 0.37%)</title><rect x="97.0629%" y="324" width="0.3733%" height="15" fill="rgb(209,8,3)"/><text x="97.3129%" y="334.50"></text></g><g><title>__call__ (thinc/model.py:288) (38 samples, 0.37%)</title><rect x="97.0629%" y="340" width="0.3733%" height="15" fill="rgb(214,25,53)"/><text x="97.3129%" y="350.50"></text></g><g><title>forward (thinc/layers/concatenate.py:44) (11 samples, 0.11%)</title><rect x="97.5835%" y="292" width="0.1081%" height="15" fill="rgb(254,186,54)"/><text x="97.8335%" y="302.50"></text></g><g><title>&lt;listcomp&gt; (thinc/layers/concatenate.py:44) (11 samples, 0.11%)</title><rect x="97.5835%" y="308" width="0.1081%" height="15" fill="rgb(208,174,49)"/><text x="97.8335%" y="318.50"></text></g><g><title>__call__ (thinc/model.py:288) (11 samples, 0.11%)</title><rect x="97.5835%" y="324" width="0.1081%" height="15" fill="rgb(233,191,51)"/><text x="97.8335%" y="334.50"></text></g><g><title>forward (thinc/layers/chain.py:54) (16 samples, 0.16%)</title><rect x="97.5835%" y="260" width="0.1572%" height="15" fill="rgb(222,134,10)"/><text x="97.8335%" y="270.50"></text></g><g><title>__call__ (thinc/model.py:288) (16 samples, 0.16%)</title><rect x="97.5835%" y="276" width="0.1572%" height="15" fill="rgb(230,226,20)"/><text x="97.8335%" y="286.50"></text></g><g><title>forward (thinc/layers/layernorm.py:25) (11 samples, 0.11%)</title><rect x="97.7505%" y="468" width="0.1081%" height="15" fill="rgb(251,111,25)"/><text x="98.0005%" y="478.50"></text></g><g><title>forward (thinc/layers/chain.py:54) (23 samples, 0.23%)</title><rect x="97.7407%" y="308" width="0.2259%" height="15" fill="rgb(224,40,46)"/><text x="97.9907%" y="318.50"></text></g><g><title>__call__ (thinc/model.py:288) (23 samples, 0.23%)</title><rect x="97.7407%" y="324" width="0.2259%" height="15" fill="rgb(236,108,47)"/><text x="97.9907%" y="334.50"></text></g><g><title>forward (thinc/layers/residual.py:40) (23 samples, 0.23%)</title><rect x="97.7407%" y="340" width="0.2259%" height="15" fill="rgb(234,93,0)"/><text x="97.9907%" y="350.50"></text></g><g><title>__call__ (thinc/model.py:288) (23 samples, 0.23%)</title><rect x="97.7407%" y="356" width="0.2259%" height="15" fill="rgb(224,213,32)"/><text x="97.9907%" y="366.50"></text></g><g><title>forward (thinc/layers/chain.py:54) (23 samples, 0.23%)</title><rect x="97.7407%" y="372" width="0.2259%" height="15" fill="rgb(251,11,48)"/><text x="97.9907%" y="382.50"></text></g><g><title>__call__ (thinc/model.py:288) (22 samples, 0.22%)</title><rect x="97.7505%" y="388" width="0.2161%" height="15" fill="rgb(236,173,5)"/><text x="98.0005%" y="398.50"></text></g><g><title>forward (thinc/layers/chain.py:54) (22 samples, 0.22%)</title><rect x="97.7505%" y="404" width="0.2161%" height="15" fill="rgb(230,95,12)"/><text x="98.0005%" y="414.50"></text></g><g><title>__call__ (thinc/model.py:288) (22 samples, 0.22%)</title><rect x="97.7505%" y="420" width="0.2161%" height="15" fill="rgb(232,209,1)"/><text x="98.0005%" y="430.50"></text></g><g><title>forward (thinc/layers/chain.py:54) (22 samples, 0.22%)</title><rect x="97.7505%" y="436" width="0.2161%" height="15" fill="rgb(232,6,1)"/><text x="98.0005%" y="446.50"></text></g><g><title>__call__ (thinc/model.py:288) (22 samples, 0.22%)</title><rect x="97.7505%" y="452" width="0.2161%" height="15" fill="rgb(210,224,50)"/><text x="98.0005%" y="462.50"></text></g><g><title>_list_forward (thinc/layers/with_array.py:76) (24 samples, 0.24%)</title><rect x="97.7407%" y="276" width="0.2358%" height="15" fill="rgb(228,127,35)"/><text x="97.9907%" y="286.50"></text></g><g><title>__call__ (thinc/model.py:288) (24 samples, 0.24%)</title><rect x="97.7407%" y="292" width="0.2358%" height="15" fill="rgb(245,102,45)"/><text x="97.9907%" y="302.50"></text></g><g><title>forward (thinc/layers/chain.py:54) (41 samples, 0.40%)</title><rect x="97.5835%" y="228" width="0.4028%" height="15" fill="rgb(214,1,49)"/><text x="97.8335%" y="238.50"></text></g><g><title>__call__ (thinc/model.py:288) (41 samples, 0.40%)</title><rect x="97.5835%" y="244" width="0.4028%" height="15" fill="rgb(226,163,40)"/><text x="97.8335%" y="254.50"></text></g><g><title>forward (thinc/layers/with_array.py:40) (25 samples, 0.25%)</title><rect x="97.7407%" y="260" width="0.2456%" height="15" fill="rgb(239,212,28)"/><text x="97.9907%" y="270.50"></text></g><g><title>__call__ (thinc/model.py:288) (51 samples, 0.50%)</title><rect x="97.4951%" y="180" width="0.5010%" height="15" fill="rgb(220,20,13)"/><text x="97.7451%" y="190.50"></text></g><g><title>forward (thinc/layers/chain.py:54) (42 samples, 0.41%)</title><rect x="97.5835%" y="196" width="0.4126%" height="15" fill="rgb(210,164,35)"/><text x="97.8335%" y="206.50"></text></g><g><title>__call__ (thinc/model.py:288) (42 samples, 0.41%)</title><rect x="97.5835%" y="212" width="0.4126%" height="15" fill="rgb(248,109,41)"/><text x="97.8335%" y="222.50"></text></g><g><title>forward (spacy/ml/tb_framework.py:31) (57 samples, 0.56%)</title><rect x="97.4460%" y="164" width="0.5599%" height="15" fill="rgb(238,23,50)"/><text x="97.6960%" y="174.50"></text></g><g><title>Similarity_between_words (SemanticText.py:179) (142 samples, 1.39%)</title><rect x="96.6503%" y="116" width="1.3949%" height="15" fill="rgb(211,48,49)"/><text x="96.9003%" y="126.50"></text></g><g><title>__call__ (spacy/language.py:995) (142 samples, 1.39%)</title><rect x="96.6503%" y="132" width="1.3949%" height="15" fill="rgb(223,36,21)"/><text x="96.9003%" y="142.50"></text></g><g><title>predict (thinc/model.py:312) (61 samples, 0.60%)</title><rect x="97.4460%" y="148" width="0.5992%" height="15" fill="rgb(207,123,46)"/><text x="97.6960%" y="158.50"></text></g><g><title>Semantic_Similarity (SemanticText.py:201) (317 samples, 3.11%)</title><rect x="94.9902%" y="84" width="3.1139%" height="15" fill="rgb(240,218,32)"/><text x="95.2402%" y="94.50">Sem..</text></g><g><title>Semantic_matching (SemanticText.py:184) (317 samples, 3.11%)</title><rect x="94.9902%" y="100" width="3.1139%" height="15" fill="rgb(252,5,43)"/><text x="95.2402%" y="110.50">Sem..</text></g><g><title>&lt;module&gt; (SemanticText.py:244) (3,996 samples, 39.25%)</title><rect x="58.8802%" y="68" width="39.2534%" height="15" fill="rgb(252,84,19)"/><text x="59.1302%" y="78.50">&lt;module&gt; (SemanticText.py:244)</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:657) (12 samples, 0.12%)</title><rect x="98.1434%" y="724" width="0.1179%" height="15" fill="rgb(243,152,39)"/><text x="98.3934%" y="734.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:556) (12 samples, 0.12%)</title><rect x="98.1434%" y="740" width="0.1179%" height="15" fill="rgb(234,160,15)"/><text x="98.3934%" y="750.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;:1101) (12 samples, 0.12%)</title><rect x="98.1434%" y="756" width="0.1179%" height="15" fill="rgb(237,34,20)"/><text x="98.3934%" y="766.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (12 samples, 0.12%)</title><rect x="98.1434%" y="772" width="0.1179%" height="15" fill="rgb(229,97,13)"/><text x="98.3934%" y="782.50"></text></g><g><title>&lt;module&gt; (thinc/config.py:10) (31 samples, 0.30%)</title><rect x="98.1336%" y="404" width="0.3045%" height="15" fill="rgb(234,71,50)"/><text x="98.3836%" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (31 samples, 0.30%)</title><rect x="98.1336%" y="420" width="0.3045%" height="15" fill="rgb(253,155,4)"/><text x="98.3836%" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:975) (31 samples, 0.30%)</title><rect x="98.1336%" y="436" width="0.3045%" height="15" fill="rgb(222,185,37)"/><text x="98.3836%" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:671) (31 samples, 0.30%)</title><rect x="98.1336%" y="452" width="0.3045%" height="15" fill="rgb(251,177,13)"/><text x="98.3836%" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1109) (31 samples, 0.30%)</title><rect x="98.1336%" y="468" width="0.3045%" height="15" fill="rgb(250,179,40)"/><text x="98.3836%" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (31 samples, 0.30%)</title><rect x="98.1336%" y="484" width="0.3045%" height="15" fill="rgb(242,44,2)"/><text x="98.3836%" y="494.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1042) (31 samples, 0.30%)</title><rect x="98.1336%" y="500" width="0.3045%" height="15" fill="rgb(216,177,13)"/><text x="98.3836%" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (31 samples, 0.30%)</title><rect x="98.1336%" y="516" width="0.3045%" height="15" fill="rgb(216,106,43)"/><text x="98.3836%" y="526.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (31 samples, 0.30%)</title><rect x="98.1336%" y="532" width="0.3045%" height="15" fill="rgb(216,183,2)"/><text x="98.3836%" y="542.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:975) (31 samples, 0.30%)</title><rect x="98.1336%" y="548" width="0.3045%" height="15" fill="rgb(249,75,3)"/><text x="98.3836%" y="558.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:671) (30 samples, 0.29%)</title><rect x="98.1434%" y="564" width="0.2947%" height="15" fill="rgb(219,67,39)"/><text x="98.3934%" y="574.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1109) (30 samples, 0.29%)</title><rect x="98.1434%" y="580" width="0.2947%" height="15" fill="rgb(253,228,2)"/><text x="98.3934%" y="590.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (30 samples, 0.29%)</title><rect x="98.1434%" y="596" width="0.2947%" height="15" fill="rgb(235,138,27)"/><text x="98.3934%" y="606.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (30 samples, 0.29%)</title><rect x="98.1434%" y="612" width="0.2947%" height="15" fill="rgb(236,97,51)"/><text x="98.3934%" y="622.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:975) (30 samples, 0.29%)</title><rect x="98.1434%" y="628" width="0.2947%" height="15" fill="rgb(240,80,30)"/><text x="98.3934%" y="638.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:671) (30 samples, 0.29%)</title><rect x="98.1434%" y="644" width="0.2947%" height="15" fill="rgb(230,178,19)"/><text x="98.3934%" y="654.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1109) (30 samples, 0.29%)</title><rect x="98.1434%" y="660" width="0.2947%" height="15" fill="rgb(210,190,27)"/><text x="98.3934%" y="670.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (30 samples, 0.29%)</title><rect x="98.1434%" y="676" width="0.2947%" height="15" fill="rgb(222,107,31)"/><text x="98.3934%" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (30 samples, 0.29%)</title><rect x="98.1434%" y="692" width="0.2947%" height="15" fill="rgb(216,127,34)"/><text x="98.3934%" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:975) (30 samples, 0.29%)</title><rect x="98.1434%" y="708" width="0.2947%" height="15" fill="rgb(234,116,52)"/><text x="98.3934%" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:671) (18 samples, 0.18%)</title><rect x="98.2613%" y="724" width="0.1768%" height="15" fill="rgb(222,124,15)"/><text x="98.5113%" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1109) (18 samples, 0.18%)</title><rect x="98.2613%" y="740" width="0.1768%" height="15" fill="rgb(231,179,28)"/><text x="98.5113%" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (18 samples, 0.18%)</title><rect x="98.2613%" y="756" width="0.1768%" height="15" fill="rgb(226,93,45)"/><text x="98.5113%" y="766.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (17 samples, 0.17%)</title><rect x="98.2711%" y="772" width="0.1670%" height="15" fill="rgb(215,8,51)"/><text x="98.5211%" y="782.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:975) (17 samples, 0.17%)</title><rect x="98.2711%" y="788" width="0.1670%" height="15" fill="rgb(223,106,5)"/><text x="98.5211%" y="798.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:671) (12 samples, 0.12%)</title><rect x="98.3202%" y="804" width="0.1179%" height="15" fill="rgb(250,191,5)"/><text x="98.5702%" y="814.50"></text></g><g><title>&lt;module&gt; (thinc/config.py:14) (12 samples, 0.12%)</title><rect x="98.4676%" y="404" width="0.1179%" height="15" fill="rgb(242,132,44)"/><text x="98.7176%" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (12 samples, 0.12%)</title><rect x="98.4676%" y="420" width="0.1179%" height="15" fill="rgb(251,152,29)"/><text x="98.7176%" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:975) (12 samples, 0.12%)</title><rect x="98.4676%" y="436" width="0.1179%" height="15" fill="rgb(218,179,5)"/><text x="98.7176%" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:671) (12 samples, 0.12%)</title><rect x="98.4676%" y="452" width="0.1179%" height="15" fill="rgb(227,67,19)"/><text x="98.7176%" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:783) (12 samples, 0.12%)</title><rect x="98.4676%" y="468" width="0.1179%" height="15" fill="rgb(233,119,31)"/><text x="98.7176%" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (12 samples, 0.12%)</title><rect x="98.4676%" y="484" width="0.1179%" height="15" fill="rgb(241,120,22)"/><text x="98.7176%" y="494.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:961) (49 samples, 0.48%)</title><rect x="98.1336%" y="196" width="0.4813%" height="15" fill="rgb(224,102,30)"/><text x="98.3836%" y="206.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (49 samples, 0.48%)</title><rect x="98.1336%" y="212" width="0.4813%" height="15" fill="rgb(210,164,37)"/><text x="98.3836%" y="222.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (49 samples, 0.48%)</title><rect x="98.1336%" y="228" width="0.4813%" height="15" fill="rgb(226,191,16)"/><text x="98.3836%" y="238.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:975) (49 samples, 0.48%)</title><rect x="98.1336%" y="244" width="0.4813%" height="15" fill="rgb(214,40,45)"/><text x="98.3836%" y="254.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:671) (49 samples, 0.48%)</title><rect x="98.1336%" y="260" width="0.4813%" height="15" fill="rgb(244,29,26)"/><text x="98.3836%" y="270.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:783) (49 samples, 0.48%)</title><rect x="98.1336%" y="276" width="0.4813%" height="15" fill="rgb(216,16,5)"/><text x="98.3836%" y="286.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (49 samples, 0.48%)</title><rect x="98.1336%" y="292" width="0.4813%" height="15" fill="rgb(249,76,35)"/><text x="98.3836%" y="302.50"></text></g><g><title>&lt;module&gt; (thinc/__init__.py:5) (49 samples, 0.48%)</title><rect x="98.1336%" y="308" width="0.4813%" height="15" fill="rgb(207,11,44)"/><text x="98.3836%" y="318.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (49 samples, 0.48%)</title><rect x="98.1336%" y="324" width="0.4813%" height="15" fill="rgb(228,190,49)"/><text x="98.3836%" y="334.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:975) (49 samples, 0.48%)</title><rect x="98.1336%" y="340" width="0.4813%" height="15" fill="rgb(214,173,12)"/><text x="98.3836%" y="350.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:671) (49 samples, 0.48%)</title><rect x="98.1336%" y="356" width="0.4813%" height="15" fill="rgb(218,26,35)"/><text x="98.3836%" y="366.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:783) (49 samples, 0.48%)</title><rect x="98.1336%" y="372" width="0.4813%" height="15" fill="rgb(220,200,19)"/><text x="98.3836%" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (49 samples, 0.48%)</title><rect x="98.1336%" y="388" width="0.4813%" height="15" fill="rgb(239,95,49)"/><text x="98.3836%" y="398.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:961) (15 samples, 0.15%)</title><rect x="98.6935%" y="740" width="0.1473%" height="15" fill="rgb(235,85,53)"/><text x="98.9435%" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (15 samples, 0.15%)</title><rect x="98.6935%" y="756" width="0.1473%" height="15" fill="rgb(233,133,31)"/><text x="98.9435%" y="766.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (15 samples, 0.15%)</title><rect x="98.6935%" y="772" width="0.1473%" height="15" fill="rgb(218,25,20)"/><text x="98.9435%" y="782.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:975) (15 samples, 0.15%)</title><rect x="98.6935%" y="788" width="0.1473%" height="15" fill="rgb(252,210,38)"/><text x="98.9435%" y="798.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:671) (15 samples, 0.15%)</title><rect x="98.6935%" y="804" width="0.1473%" height="15" fill="rgb(242,134,21)"/><text x="98.9435%" y="814.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:783) (15 samples, 0.15%)</title><rect x="98.6935%" y="820" width="0.1473%" height="15" fill="rgb(213,28,48)"/><text x="98.9435%" y="830.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (15 samples, 0.15%)</title><rect x="98.6935%" y="836" width="0.1473%" height="15" fill="rgb(250,196,2)"/><text x="98.9435%" y="846.50"></text></g><g><title>&lt;module&gt; (blis/__init__.py:3) (15 samples, 0.15%)</title><rect x="98.6935%" y="852" width="0.1473%" height="15" fill="rgb(227,5,17)"/><text x="98.9435%" y="862.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (15 samples, 0.15%)</title><rect x="98.6935%" y="868" width="0.1473%" height="15" fill="rgb(221,226,24)"/><text x="98.9435%" y="878.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:975) (15 samples, 0.15%)</title><rect x="98.6935%" y="884" width="0.1473%" height="15" fill="rgb(211,5,48)"/><text x="98.9435%" y="894.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:671) (12 samples, 0.12%)</title><rect x="98.7230%" y="900" width="0.1179%" height="15" fill="rgb(219,150,6)"/><text x="98.9730%" y="910.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1109) (12 samples, 0.12%)</title><rect x="98.7230%" y="916" width="0.1179%" height="15" fill="rgb(251,46,16)"/><text x="98.9730%" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (12 samples, 0.12%)</title><rect x="98.7230%" y="932" width="0.1179%" height="15" fill="rgb(220,204,40)"/><text x="98.9730%" y="942.50"></text></g><g><title>&lt;module&gt; (thinc/api.py:2) (26 samples, 0.26%)</title><rect x="98.6149%" y="260" width="0.2554%" height="15" fill="rgb(211,85,2)"/><text x="98.8649%" y="270.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (26 samples, 0.26%)</title><rect x="98.6149%" y="276" width="0.2554%" height="15" fill="rgb(229,17,7)"/><text x="98.8649%" y="286.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:975) (26 samples, 0.26%)</title><rect x="98.6149%" y="292" width="0.2554%" height="15" fill="rgb(239,72,28)"/><text x="98.8649%" y="302.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:671) (26 samples, 0.26%)</title><rect x="98.6149%" y="308" width="0.2554%" height="15" fill="rgb(230,47,54)"/><text x="98.8649%" y="318.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:783) (26 samples, 0.26%)</title><rect x="98.6149%" y="324" width="0.2554%" height="15" fill="rgb(214,50,8)"/><text x="98.8649%" y="334.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (26 samples, 0.26%)</title><rect x="98.6149%" y="340" width="0.2554%" height="15" fill="rgb(216,198,43)"/><text x="98.8649%" y="350.50"></text></g><g><title>&lt;module&gt; (thinc/initializers.py:4) (26 samples, 0.26%)</title><rect x="98.6149%" y="356" width="0.2554%" height="15" fill="rgb(234,20,35)"/><text x="98.8649%" y="366.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (26 samples, 0.26%)</title><rect x="98.6149%" y="372" width="0.2554%" height="15" fill="rgb(254,45,19)"/><text x="98.8649%" y="382.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:975) (25 samples, 0.25%)</title><rect x="98.6248%" y="388" width="0.2456%" height="15" fill="rgb(219,14,44)"/><text x="98.8748%" y="398.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:671) (25 samples, 0.25%)</title><rect x="98.6248%" y="404" width="0.2456%" height="15" fill="rgb(217,220,26)"/><text x="98.8748%" y="414.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:783) (25 samples, 0.25%)</title><rect x="98.6248%" y="420" width="0.2456%" height="15" fill="rgb(213,158,28)"/><text x="98.8748%" y="430.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (25 samples, 0.25%)</title><rect x="98.6248%" y="436" width="0.2456%" height="15" fill="rgb(252,51,52)"/><text x="98.8748%" y="446.50"></text></g><g><title>&lt;module&gt; (thinc/backends/__init__.py:8) (24 samples, 0.24%)</title><rect x="98.6346%" y="452" width="0.2358%" height="15" fill="rgb(246,89,16)"/><text x="98.8846%" y="462.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (24 samples, 0.24%)</title><rect x="98.6346%" y="468" width="0.2358%" height="15" fill="rgb(216,158,49)"/><text x="98.8846%" y="478.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:975) (24 samples, 0.24%)</title><rect x="98.6346%" y="484" width="0.2358%" height="15" fill="rgb(236,107,19)"/><text x="98.8846%" y="494.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:671) (24 samples, 0.24%)</title><rect x="98.6346%" y="500" width="0.2358%" height="15" fill="rgb(228,185,30)"/><text x="98.8846%" y="510.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:783) (24 samples, 0.24%)</title><rect x="98.6346%" y="516" width="0.2358%" height="15" fill="rgb(246,134,8)"/><text x="98.8846%" y="526.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (24 samples, 0.24%)</title><rect x="98.6346%" y="532" width="0.2358%" height="15" fill="rgb(214,143,50)"/><text x="98.8846%" y="542.50"></text></g><g><title>&lt;module&gt; (thinc/backends/cupy_ops.py:18) (24 samples, 0.24%)</title><rect x="98.6346%" y="548" width="0.2358%" height="15" fill="rgb(228,75,8)"/><text x="98.8846%" y="558.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (24 samples, 0.24%)</title><rect x="98.6346%" y="564" width="0.2358%" height="15" fill="rgb(207,175,4)"/><text x="98.8846%" y="574.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:975) (24 samples, 0.24%)</title><rect x="98.6346%" y="580" width="0.2358%" height="15" fill="rgb(205,108,24)"/><text x="98.8846%" y="590.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:671) (22 samples, 0.22%)</title><rect x="98.6542%" y="596" width="0.2161%" height="15" fill="rgb(244,120,49)"/><text x="98.9042%" y="606.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1109) (22 samples, 0.22%)</title><rect x="98.6542%" y="612" width="0.2161%" height="15" fill="rgb(223,47,38)"/><text x="98.9042%" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (22 samples, 0.22%)</title><rect x="98.6542%" y="628" width="0.2161%" height="15" fill="rgb(229,179,11)"/><text x="98.9042%" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (22 samples, 0.22%)</title><rect x="98.6542%" y="644" width="0.2161%" height="15" fill="rgb(231,122,1)"/><text x="98.9042%" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:975) (19 samples, 0.19%)</title><rect x="98.6837%" y="660" width="0.1866%" height="15" fill="rgb(245,119,9)"/><text x="98.9337%" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:671) (18 samples, 0.18%)</title><rect x="98.6935%" y="676" width="0.1768%" height="15" fill="rgb(241,163,25)"/><text x="98.9435%" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1109) (18 samples, 0.18%)</title><rect x="98.6935%" y="692" width="0.1768%" height="15" fill="rgb(217,214,3)"/><text x="98.9435%" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (18 samples, 0.18%)</title><rect x="98.6935%" y="708" width="0.1768%" height="15" fill="rgb(240,86,28)"/><text x="98.9435%" y="718.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (18 samples, 0.18%)</title><rect x="98.6935%" y="724" width="0.1768%" height="15" fill="rgb(215,47,9)"/><text x="98.9435%" y="734.50"></text></g><g><title>&lt;module&gt; (spacy/__init__.py:10) (86 samples, 0.84%)</title><rect x="98.1336%" y="164" width="0.8448%" height="15" fill="rgb(252,25,45)"/><text x="98.3836%" y="174.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (86 samples, 0.84%)</title><rect x="98.1336%" y="180" width="0.8448%" height="15" fill="rgb(251,164,9)"/><text x="98.3836%" y="190.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:975) (37 samples, 0.36%)</title><rect x="98.6149%" y="196" width="0.3635%" height="15" fill="rgb(233,194,0)"/><text x="98.8649%" y="206.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:671) (37 samples, 0.36%)</title><rect x="98.6149%" y="212" width="0.3635%" height="15" fill="rgb(249,111,24)"/><text x="98.8649%" y="222.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:783) (37 samples, 0.36%)</title><rect x="98.6149%" y="228" width="0.3635%" height="15" fill="rgb(250,223,3)"/><text x="98.8649%" y="238.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (37 samples, 0.36%)</title><rect x="98.6149%" y="244" width="0.3635%" height="15" fill="rgb(236,178,37)"/><text x="98.8649%" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1109) (12 samples, 0.12%)</title><rect x="99.0570%" y="612" width="0.1179%" height="15" fill="rgb(241,158,50)"/><text x="99.3070%" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (12 samples, 0.12%)</title><rect x="99.0570%" y="628" width="0.1179%" height="15" fill="rgb(213,121,41)"/><text x="99.3070%" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (12 samples, 0.12%)</title><rect x="99.0570%" y="644" width="0.1179%" height="15" fill="rgb(240,92,3)"/><text x="99.3070%" y="654.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (16 samples, 0.16%)</title><rect x="99.0275%" y="564" width="0.1572%" height="15" fill="rgb(205,123,3)"/><text x="99.2775%" y="574.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:975) (16 samples, 0.16%)</title><rect x="99.0275%" y="580" width="0.1572%" height="15" fill="rgb(205,97,47)"/><text x="99.2775%" y="590.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:671) (13 samples, 0.13%)</title><rect x="99.0570%" y="596" width="0.1277%" height="15" fill="rgb(247,152,14)"/><text x="99.3070%" y="606.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1109) (21 samples, 0.21%)</title><rect x="99.0275%" y="532" width="0.2063%" height="15" fill="rgb(248,195,53)"/><text x="99.2775%" y="542.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (21 samples, 0.21%)</title><rect x="99.0275%" y="548" width="0.2063%" height="15" fill="rgb(226,201,16)"/><text x="99.2775%" y="558.50"></text></g><g><title>&lt;module&gt; (spacy/training/__init__.py:11) (15 samples, 0.15%)</title><rect x="99.2633%" y="564" width="0.1473%" height="15" fill="rgb(205,98,0)"/><text x="99.5133%" y="574.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (15 samples, 0.15%)</title><rect x="99.2633%" y="580" width="0.1473%" height="15" fill="rgb(214,191,48)"/><text x="99.5133%" y="590.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:975) (15 samples, 0.15%)</title><rect x="99.2633%" y="596" width="0.1473%" height="15" fill="rgb(237,112,39)"/><text x="99.5133%" y="606.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:671) (15 samples, 0.15%)</title><rect x="99.2633%" y="612" width="0.1473%" height="15" fill="rgb(247,203,27)"/><text x="99.5133%" y="622.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:783) (15 samples, 0.15%)</title><rect x="99.2633%" y="628" width="0.1473%" height="15" fill="rgb(235,124,28)"/><text x="99.5133%" y="638.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (15 samples, 0.15%)</title><rect x="99.2633%" y="644" width="0.1473%" height="15" fill="rgb(208,207,46)"/><text x="99.5133%" y="654.50"></text></g><g><title>&lt;module&gt; (spacy/training/callbacks.py:3) (15 samples, 0.15%)</title><rect x="99.2633%" y="660" width="0.1473%" height="15" fill="rgb(234,176,4)"/><text x="99.5133%" y="670.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (15 samples, 0.15%)</title><rect x="99.2633%" y="676" width="0.1473%" height="15" fill="rgb(230,133,28)"/><text x="99.5133%" y="686.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:975) (15 samples, 0.15%)</title><rect x="99.2633%" y="692" width="0.1473%" height="15" fill="rgb(211,137,40)"/><text x="99.5133%" y="702.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:671) (15 samples, 0.15%)</title><rect x="99.2633%" y="708" width="0.1473%" height="15" fill="rgb(254,35,13)"/><text x="99.5133%" y="718.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:783) (14 samples, 0.14%)</title><rect x="99.2731%" y="724" width="0.1375%" height="15" fill="rgb(225,49,51)"/><text x="99.5231%" y="734.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (14 samples, 0.14%)</title><rect x="99.2731%" y="740" width="0.1375%" height="15" fill="rgb(251,10,15)"/><text x="99.5231%" y="750.50"></text></g><g><title>&lt;module&gt; (spacy/pipeline/__init__.py:1) (43 samples, 0.42%)</title><rect x="98.9980%" y="292" width="0.4224%" height="15" fill="rgb(228,207,15)"/><text x="99.2480%" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (43 samples, 0.42%)</title><rect x="98.9980%" y="308" width="0.4224%" height="15" fill="rgb(241,99,19)"/><text x="99.2480%" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:975) (43 samples, 0.42%)</title><rect x="98.9980%" y="324" width="0.4224%" height="15" fill="rgb(207,104,49)"/><text x="99.2480%" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:671) (43 samples, 0.42%)</title><rect x="98.9980%" y="340" width="0.4224%" height="15" fill="rgb(234,99,18)"/><text x="99.2480%" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:783) (43 samples, 0.42%)</title><rect x="98.9980%" y="356" width="0.4224%" height="15" fill="rgb(213,191,49)"/><text x="99.2480%" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (43 samples, 0.42%)</title><rect x="98.9980%" y="372" width="0.4224%" height="15" fill="rgb(210,226,19)"/><text x="99.2480%" y="382.50"></text></g><g><title>&lt;module&gt; (spacy/pipeline/attributeruler.py:6) (43 samples, 0.42%)</title><rect x="98.9980%" y="388" width="0.4224%" height="15" fill="rgb(229,97,18)"/><text x="99.2480%" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (43 samples, 0.42%)</title><rect x="98.9980%" y="404" width="0.4224%" height="15" fill="rgb(211,167,15)"/><text x="99.2480%" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:975) (43 samples, 0.42%)</title><rect x="98.9980%" y="420" width="0.4224%" height="15" fill="rgb(210,169,34)"/><text x="99.2480%" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:671) (42 samples, 0.41%)</title><rect x="99.0079%" y="436" width="0.4126%" height="15" fill="rgb(241,121,31)"/><text x="99.2579%" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1109) (42 samples, 0.41%)</title><rect x="99.0079%" y="452" width="0.4126%" height="15" fill="rgb(232,40,11)"/><text x="99.2579%" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (42 samples, 0.41%)</title><rect x="99.0079%" y="468" width="0.4126%" height="15" fill="rgb(205,86,26)"/><text x="99.2579%" y="478.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (42 samples, 0.41%)</title><rect x="99.0079%" y="484" width="0.4126%" height="15" fill="rgb(231,126,28)"/><text x="99.2579%" y="494.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:975) (42 samples, 0.41%)</title><rect x="99.0079%" y="500" width="0.4126%" height="15" fill="rgb(219,221,18)"/><text x="99.2579%" y="510.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:671) (40 samples, 0.39%)</title><rect x="99.0275%" y="516" width="0.3929%" height="15" fill="rgb(211,40,0)"/><text x="99.2775%" y="526.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:783) (19 samples, 0.19%)</title><rect x="99.2338%" y="532" width="0.1866%" height="15" fill="rgb(239,85,43)"/><text x="99.4838%" y="542.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (19 samples, 0.19%)</title><rect x="99.2338%" y="548" width="0.1866%" height="15" fill="rgb(231,55,21)"/><text x="99.4838%" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:961) (11 samples, 0.11%)</title><rect x="99.4401%" y="484" width="0.1081%" height="15" fill="rgb(225,184,43)"/><text x="99.6901%" y="494.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (11 samples, 0.11%)</title><rect x="99.4401%" y="500" width="0.1081%" height="15" fill="rgb(251,158,41)"/><text x="99.6901%" y="510.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (11 samples, 0.11%)</title><rect x="99.4401%" y="516" width="0.1081%" height="15" fill="rgb(234,159,37)"/><text x="99.6901%" y="526.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:975) (11 samples, 0.11%)</title><rect x="99.4401%" y="532" width="0.1081%" height="15" fill="rgb(216,204,22)"/><text x="99.6901%" y="542.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:671) (11 samples, 0.11%)</title><rect x="99.4401%" y="548" width="0.1081%" height="15" fill="rgb(214,17,3)"/><text x="99.6901%" y="558.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:783) (11 samples, 0.11%)</title><rect x="99.4401%" y="564" width="0.1081%" height="15" fill="rgb(212,111,17)"/><text x="99.6901%" y="574.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (11 samples, 0.11%)</title><rect x="99.4401%" y="580" width="0.1081%" height="15" fill="rgb(221,157,24)"/><text x="99.6901%" y="590.50"></text></g><g><title>&lt;module&gt; (spacy/ml/__init__.py:1) (11 samples, 0.11%)</title><rect x="99.4401%" y="596" width="0.1081%" height="15" fill="rgb(252,16,13)"/><text x="99.6901%" y="606.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (11 samples, 0.11%)</title><rect x="99.4401%" y="612" width="0.1081%" height="15" fill="rgb(221,62,2)"/><text x="99.6901%" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (16 samples, 0.16%)</title><rect x="99.4401%" y="468" width="0.1572%" height="15" fill="rgb(247,87,22)"/><text x="99.6901%" y="478.50"></text></g><g><title>&lt;module&gt; (spacy/pipeline/__init__.py:2) (22 samples, 0.22%)</title><rect x="99.4303%" y="292" width="0.2161%" height="15" fill="rgb(215,73,9)"/><text x="99.6803%" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (22 samples, 0.22%)</title><rect x="99.4303%" y="308" width="0.2161%" height="15" fill="rgb(207,175,33)"/><text x="99.6803%" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:975) (22 samples, 0.22%)</title><rect x="99.4303%" y="324" width="0.2161%" height="15" fill="rgb(243,129,54)"/><text x="99.6803%" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:671) (22 samples, 0.22%)</title><rect x="99.4303%" y="340" width="0.2161%" height="15" fill="rgb(227,119,45)"/><text x="99.6803%" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1109) (22 samples, 0.22%)</title><rect x="99.4303%" y="356" width="0.2161%" height="15" fill="rgb(205,109,36)"/><text x="99.6803%" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (22 samples, 0.22%)</title><rect x="99.4303%" y="372" width="0.2161%" height="15" fill="rgb(205,6,39)"/><text x="99.6803%" y="382.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (22 samples, 0.22%)</title><rect x="99.4303%" y="388" width="0.2161%" height="15" fill="rgb(221,32,16)"/><text x="99.6803%" y="398.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:975) (22 samples, 0.22%)</title><rect x="99.4303%" y="404" width="0.2161%" height="15" fill="rgb(228,144,50)"/><text x="99.6803%" y="414.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:671) (21 samples, 0.21%)</title><rect x="99.4401%" y="420" width="0.2063%" height="15" fill="rgb(229,201,53)"/><text x="99.6901%" y="430.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1109) (21 samples, 0.21%)</title><rect x="99.4401%" y="436" width="0.2063%" height="15" fill="rgb(249,153,27)"/><text x="99.6901%" y="446.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (21 samples, 0.21%)</title><rect x="99.4401%" y="452" width="0.2063%" height="15" fill="rgb(227,106,25)"/><text x="99.6901%" y="462.50"></text></g><g><title>&lt;module&gt; (spacy/__init__.py:13) (74 samples, 0.73%)</title><rect x="98.9784%" y="164" width="0.7269%" height="15" fill="rgb(230,65,29)"/><text x="99.2284%" y="174.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1042) (74 samples, 0.73%)</title><rect x="98.9784%" y="180" width="0.7269%" height="15" fill="rgb(221,57,46)"/><text x="99.2284%" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (74 samples, 0.73%)</title><rect x="98.9784%" y="196" width="0.7269%" height="15" fill="rgb(229,161,17)"/><text x="99.2284%" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (74 samples, 0.73%)</title><rect x="98.9784%" y="212" width="0.7269%" height="15" fill="rgb(222,213,11)"/><text x="99.2284%" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:975) (72 samples, 0.71%)</title><rect x="98.9980%" y="228" width="0.7073%" height="15" fill="rgb(235,35,13)"/><text x="99.2480%" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:671) (72 samples, 0.71%)</title><rect x="98.9980%" y="244" width="0.7073%" height="15" fill="rgb(233,158,34)"/><text x="99.2480%" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:783) (72 samples, 0.71%)</title><rect x="98.9980%" y="260" width="0.7073%" height="15" fill="rgb(215,151,48)"/><text x="99.2480%" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (72 samples, 0.71%)</title><rect x="98.9980%" y="276" width="0.7073%" height="15" fill="rgb(229,84,14)"/><text x="99.2480%" y="286.50"></text></g><g><title>&lt;module&gt; (SemanticText.py:4) (179 samples, 1.76%)</title><rect x="98.1336%" y="68" width="1.7583%" height="15" fill="rgb(229,68,14)"/><text x="98.3836%" y="78.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (179 samples, 1.76%)</title><rect x="98.1336%" y="84" width="1.7583%" height="15" fill="rgb(243,106,26)"/><text x="98.3836%" y="94.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:975) (179 samples, 1.76%)</title><rect x="98.1336%" y="100" width="1.7583%" height="15" fill="rgb(206,45,38)"/><text x="98.3836%" y="110.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:671) (179 samples, 1.76%)</title><rect x="98.1336%" y="116" width="1.7583%" height="15" fill="rgb(226,6,15)"/><text x="98.3836%" y="126.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:783) (179 samples, 1.76%)</title><rect x="98.1336%" y="132" width="1.7583%" height="15" fill="rgb(232,22,54)"/><text x="98.3836%" y="142.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (179 samples, 1.76%)</title><rect x="98.1336%" y="148" width="1.7583%" height="15" fill="rgb(229,222,32)"/><text x="98.3836%" y="158.50"></text></g><g><title>&lt;module&gt; (spacy/__init__.py:14) (19 samples, 0.19%)</title><rect x="99.7053%" y="164" width="0.1866%" height="15" fill="rgb(228,62,29)"/><text x="99.9553%" y="174.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (19 samples, 0.19%)</title><rect x="99.7053%" y="180" width="0.1866%" height="15" fill="rgb(251,103,34)"/><text x="99.9553%" y="190.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:961) (19 samples, 0.19%)</title><rect x="99.7053%" y="196" width="0.1866%" height="15" fill="rgb(233,12,30)"/><text x="99.9553%" y="206.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (19 samples, 0.19%)</title><rect x="99.7053%" y="212" width="0.1866%" height="15" fill="rgb(238,52,0)"/><text x="99.9553%" y="222.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (19 samples, 0.19%)</title><rect x="99.7053%" y="228" width="0.1866%" height="15" fill="rgb(223,98,5)"/><text x="99.9553%" y="238.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:975) (19 samples, 0.19%)</title><rect x="99.7053%" y="244" width="0.1866%" height="15" fill="rgb(228,75,37)"/><text x="99.9553%" y="254.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:671) (19 samples, 0.19%)</title><rect x="99.7053%" y="260" width="0.1866%" height="15" fill="rgb(205,115,49)"/><text x="99.9553%" y="270.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:783) (19 samples, 0.19%)</title><rect x="99.7053%" y="276" width="0.1866%" height="15" fill="rgb(250,154,43)"/><text x="99.9553%" y="286.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (19 samples, 0.19%)</title><rect x="99.7053%" y="292" width="0.1866%" height="15" fill="rgb(226,43,29)"/><text x="99.9553%" y="302.50"></text></g><g><title>all (10,180 samples, 100%)</title><rect x="0.0000%" y="52" width="100.0000%" height="15" fill="rgb(249,228,39)"/><text x="0.2500%" y="62.50"></text></g><g><title>&lt;module&gt; (SemanticText.py:9) (11 samples, 0.11%)</title><rect x="99.8919%" y="68" width="0.1081%" height="15" fill="rgb(216,79,43)"/><text x="100.1419%" y="78.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (11 samples, 0.11%)</title><rect x="99.8919%" y="84" width="0.1081%" height="15" fill="rgb(228,95,12)"/><text x="100.1419%" y="94.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:961) (11 samples, 0.11%)</title><rect x="99.8919%" y="100" width="0.1081%" height="15" fill="rgb(249,221,15)"/><text x="100.1419%" y="110.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (11 samples, 0.11%)</title><rect x="99.8919%" y="116" width="0.1081%" height="15" fill="rgb(233,34,13)"/><text x="100.1419%" y="126.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (11 samples, 0.11%)</title><rect x="99.8919%" y="132" width="0.1081%" height="15" fill="rgb(214,103,39)"/><text x="100.1419%" y="142.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:975) (11 samples, 0.11%)</title><rect x="99.8919%" y="148" width="0.1081%" height="15" fill="rgb(251,126,39)"/><text x="100.1419%" y="158.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:671) (11 samples, 0.11%)</title><rect x="99.8919%" y="164" width="0.1081%" height="15" fill="rgb(214,216,36)"/><text x="100.1419%" y="174.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:783) (11 samples, 0.11%)</title><rect x="99.8919%" y="180" width="0.1081%" height="15" fill="rgb(220,221,8)"/><text x="100.1419%" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (11 samples, 0.11%)</title><rect x="99.8919%" y="196" width="0.1081%" height="15" fill="rgb(240,216,3)"/><text x="100.1419%" y="206.50"></text></g><g><title>&lt;module&gt; (gensim/__init__.py:11) (11 samples, 0.11%)</title><rect x="99.8919%" y="212" width="0.1081%" height="15" fill="rgb(232,218,17)"/><text x="100.1419%" y="222.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1042) (11 samples, 0.11%)</title><rect x="99.8919%" y="228" width="0.1081%" height="15" fill="rgb(229,163,45)"/><text x="100.1419%" y="238.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (11 samples, 0.11%)</title><rect x="99.8919%" y="244" width="0.1081%" height="15" fill="rgb(231,110,42)"/><text x="100.1419%" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (11 samples, 0.11%)</title><rect x="99.8919%" y="260" width="0.1081%" height="15" fill="rgb(208,170,48)"/><text x="100.1419%" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:975) (11 samples, 0.11%)</title><rect x="99.8919%" y="276" width="0.1081%" height="15" fill="rgb(239,116,25)"/><text x="100.1419%" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:671) (11 samples, 0.11%)</title><rect x="99.8919%" y="292" width="0.1081%" height="15" fill="rgb(219,200,50)"/><text x="100.1419%" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:783) (11 samples, 0.11%)</title><rect x="99.8919%" y="308" width="0.1081%" height="15" fill="rgb(245,200,0)"/><text x="100.1419%" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (11 samples, 0.11%)</title><rect x="99.8919%" y="324" width="0.1081%" height="15" fill="rgb(245,119,33)"/><text x="100.1419%" y="334.50"></text></g></svg></svg>